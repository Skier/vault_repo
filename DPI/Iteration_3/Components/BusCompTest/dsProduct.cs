//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace DPI.ComponentsTests {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsProduct : DataSet {
        
        private ProductDataTable tableProduct;
        
        public dsProduct() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsProduct(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Product"] != null)) {
                    this.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductDataTable Product {
            get {
                return this.tableProduct;
            }
        }
        
        public override DataSet Clone() {
            dsProduct cln = ((dsProduct)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Product"] != null)) {
                this.Tables.Add(new ProductDataTable(ds.Tables["Product"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableProduct = ((ProductDataTable)(this.Tables["Product"]));
            if ((this.tableProduct != null)) {
                this.tableProduct.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dsProduct";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsProduct.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableProduct = new ProductDataTable();
            this.Tables.Add(this.tableProduct);
        }
        
        private bool ShouldSerializeProduct() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void ProductRowChangeEventHandler(object sender, ProductRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProductDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnId;
            
            private DataColumn columnProdType;
            
            private DataColumn columnProdName;
            
            private DataColumn columnBillText;
            
            private DataColumn columnProdCode;
            
            private DataColumn columnOldPriceCode;
            
            private DataColumn columnProdSubClass;
            
            private DataColumn columnIsComponentOnly;
            
            private DataColumn columnIsBillable;
            
            private DataColumn columnIsProvisionable;
            
            private DataColumn columnIsProvViaMapping;
            
            private DataColumn columnDescription;
            
            private DataColumn columnEligibilityCriteria;
            
            private DataColumn columnProvCategory;
            
            private DataColumn columnSupplier;
            
            private DataColumn columnVendor;
            
            private DataColumn columnTaxCode;
            
            private DataColumn columnIsTaxExempt;
            
            private DataColumn columnStatus;
            
            private DataColumn columnStartDate;
            
            private DataColumn columnEndDate;
            
            private DataColumn columnAcctCode;
            
            private DataColumn columnCompCode;
            
            private DataColumn columnDeptCode;
            
            private DataColumn columnStartServMon;
            
            private DataColumn columnEndServMon;
            
            private DataColumn columnPredId;
            
            private DataColumn columnMappingProd;
            
            private DataColumn columnIsAgentVisible;
            
            private DataColumn columnWebDescription;
            
            internal ProductDataTable() : 
                    base("Product") {
                this.InitClass();
            }
            
            internal ProductDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            internal DataColumn ProdTypeColumn {
                get {
                    return this.columnProdType;
                }
            }
            
            internal DataColumn ProdNameColumn {
                get {
                    return this.columnProdName;
                }
            }
            
            internal DataColumn BillTextColumn {
                get {
                    return this.columnBillText;
                }
            }
            
            internal DataColumn ProdCodeColumn {
                get {
                    return this.columnProdCode;
                }
            }
            
            internal DataColumn OldPriceCodeColumn {
                get {
                    return this.columnOldPriceCode;
                }
            }
            
            internal DataColumn ProdSubClassColumn {
                get {
                    return this.columnProdSubClass;
                }
            }
            
            internal DataColumn IsComponentOnlyColumn {
                get {
                    return this.columnIsComponentOnly;
                }
            }
            
            internal DataColumn IsBillableColumn {
                get {
                    return this.columnIsBillable;
                }
            }
            
            internal DataColumn IsProvisionableColumn {
                get {
                    return this.columnIsProvisionable;
                }
            }
            
            internal DataColumn IsProvViaMappingColumn {
                get {
                    return this.columnIsProvViaMapping;
                }
            }
            
            internal DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            internal DataColumn EligibilityCriteriaColumn {
                get {
                    return this.columnEligibilityCriteria;
                }
            }
            
            internal DataColumn ProvCategoryColumn {
                get {
                    return this.columnProvCategory;
                }
            }
            
            internal DataColumn SupplierColumn {
                get {
                    return this.columnSupplier;
                }
            }
            
            internal DataColumn VendorColumn {
                get {
                    return this.columnVendor;
                }
            }
            
            internal DataColumn TaxCodeColumn {
                get {
                    return this.columnTaxCode;
                }
            }
            
            internal DataColumn IsTaxExemptColumn {
                get {
                    return this.columnIsTaxExempt;
                }
            }
            
            internal DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            internal DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            internal DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            internal DataColumn AcctCodeColumn {
                get {
                    return this.columnAcctCode;
                }
            }
            
            internal DataColumn CompCodeColumn {
                get {
                    return this.columnCompCode;
                }
            }
            
            internal DataColumn DeptCodeColumn {
                get {
                    return this.columnDeptCode;
                }
            }
            
            internal DataColumn StartServMonColumn {
                get {
                    return this.columnStartServMon;
                }
            }
            
            internal DataColumn EndServMonColumn {
                get {
                    return this.columnEndServMon;
                }
            }
            
            internal DataColumn PredIdColumn {
                get {
                    return this.columnPredId;
                }
            }
            
            internal DataColumn MappingProdColumn {
                get {
                    return this.columnMappingProd;
                }
            }
            
            internal DataColumn IsAgentVisibleColumn {
                get {
                    return this.columnIsAgentVisible;
                }
            }
            
            internal DataColumn WebDescriptionColumn {
                get {
                    return this.columnWebDescription;
                }
            }
            
            public ProductRow this[int index] {
                get {
                    return ((ProductRow)(this.Rows[index]));
                }
            }
            
            public event ProductRowChangeEventHandler ProductRowChanged;
            
            public event ProductRowChangeEventHandler ProductRowChanging;
            
            public event ProductRowChangeEventHandler ProductRowDeleted;
            
            public event ProductRowChangeEventHandler ProductRowDeleting;
            
            public void AddProductRow(ProductRow row) {
                this.Rows.Add(row);
            }
            
            public ProductRow AddProductRow(
                        string ProdType, 
                        string ProdName, 
                        string BillText, 
                        string ProdCode, 
                        string OldPriceCode, 
                        string ProdSubClass, 
                        string IsComponentOnly, 
                        string IsBillable, 
                        string IsProvisionable, 
                        string IsProvViaMapping, 
                        string Description, 
                        string EligibilityCriteria, 
                        string ProvCategory, 
                        int Supplier, 
                        int Vendor, 
                        string TaxCode, 
                        string IsTaxExempt, 
                        string Status, 
                        System.DateTime StartDate, 
                        System.DateTime EndDate, 
                        string AcctCode, 
                        string CompCode, 
                        string DeptCode, 
                        int StartServMon, 
                        int EndServMon, 
                        int PredId, 
                        int MappingProd, 
                        string IsAgentVisible, 
                        string WebDescription) {
                ProductRow rowProductRow = ((ProductRow)(this.NewRow()));
                rowProductRow.ItemArray = new object[] {
                        null,
                        ProdType,
                        ProdName,
                        BillText,
                        ProdCode,
                        OldPriceCode,
                        ProdSubClass,
                        IsComponentOnly,
                        IsBillable,
                        IsProvisionable,
                        IsProvViaMapping,
                        Description,
                        EligibilityCriteria,
                        ProvCategory,
                        Supplier,
                        Vendor,
                        TaxCode,
                        IsTaxExempt,
                        Status,
                        StartDate,
                        EndDate,
                        AcctCode,
                        CompCode,
                        DeptCode,
                        StartServMon,
                        EndServMon,
                        PredId,
                        MappingProd,
                        IsAgentVisible,
                        WebDescription};
                this.Rows.Add(rowProductRow);
                return rowProductRow;
            }
            
            public ProductRow FindById(int Id) {
                return ((ProductRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ProductDataTable cln = ((ProductDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ProductDataTable();
            }
            
            internal void InitVars() {
                this.columnId = this.Columns["Id"];
                this.columnProdType = this.Columns["ProdType"];
                this.columnProdName = this.Columns["ProdName"];
                this.columnBillText = this.Columns["BillText"];
                this.columnProdCode = this.Columns["ProdCode"];
                this.columnOldPriceCode = this.Columns["OldPriceCode"];
                this.columnProdSubClass = this.Columns["ProdSubClass"];
                this.columnIsComponentOnly = this.Columns["IsComponentOnly"];
                this.columnIsBillable = this.Columns["IsBillable"];
                this.columnIsProvisionable = this.Columns["IsProvisionable"];
                this.columnIsProvViaMapping = this.Columns["IsProvViaMapping"];
                this.columnDescription = this.Columns["Description"];
                this.columnEligibilityCriteria = this.Columns["EligibilityCriteria"];
                this.columnProvCategory = this.Columns["ProvCategory"];
                this.columnSupplier = this.Columns["Supplier"];
                this.columnVendor = this.Columns["Vendor"];
                this.columnTaxCode = this.Columns["TaxCode"];
                this.columnIsTaxExempt = this.Columns["IsTaxExempt"];
                this.columnStatus = this.Columns["Status"];
                this.columnStartDate = this.Columns["StartDate"];
                this.columnEndDate = this.Columns["EndDate"];
                this.columnAcctCode = this.Columns["AcctCode"];
                this.columnCompCode = this.Columns["CompCode"];
                this.columnDeptCode = this.Columns["DeptCode"];
                this.columnStartServMon = this.Columns["StartServMon"];
                this.columnEndServMon = this.Columns["EndServMon"];
                this.columnPredId = this.Columns["PredId"];
                this.columnMappingProd = this.Columns["MappingProd"];
                this.columnIsAgentVisible = this.Columns["IsAgentVisible"];
                this.columnWebDescription = this.Columns["WebDescription"];
            }
            
            private void InitClass() {
                this.columnId = new DataColumn("Id", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnId);
                this.columnProdType = new DataColumn("ProdType", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProdType);
                this.columnProdName = new DataColumn("ProdName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProdName);
                this.columnBillText = new DataColumn("BillText", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBillText);
                this.columnProdCode = new DataColumn("ProdCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProdCode);
                this.columnOldPriceCode = new DataColumn("OldPriceCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOldPriceCode);
                this.columnProdSubClass = new DataColumn("ProdSubClass", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProdSubClass);
                this.columnIsComponentOnly = new DataColumn("IsComponentOnly", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsComponentOnly);
                this.columnIsBillable = new DataColumn("IsBillable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsBillable);
                this.columnIsProvisionable = new DataColumn("IsProvisionable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsProvisionable);
                this.columnIsProvViaMapping = new DataColumn("IsProvViaMapping", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsProvViaMapping);
                this.columnDescription = new DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescription);
                this.columnEligibilityCriteria = new DataColumn("EligibilityCriteria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEligibilityCriteria);
                this.columnProvCategory = new DataColumn("ProvCategory", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProvCategory);
                this.columnSupplier = new DataColumn("Supplier", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSupplier);
                this.columnVendor = new DataColumn("Vendor", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVendor);
                this.columnTaxCode = new DataColumn("TaxCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTaxCode);
                this.columnIsTaxExempt = new DataColumn("IsTaxExempt", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsTaxExempt);
                this.columnStatus = new DataColumn("Status", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStatus);
                this.columnStartDate = new DataColumn("StartDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStartDate);
                this.columnEndDate = new DataColumn("EndDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEndDate);
                this.columnAcctCode = new DataColumn("AcctCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAcctCode);
                this.columnCompCode = new DataColumn("CompCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCompCode);
                this.columnDeptCode = new DataColumn("DeptCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDeptCode);
                this.columnStartServMon = new DataColumn("StartServMon", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStartServMon);
                this.columnEndServMon = new DataColumn("EndServMon", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEndServMon);
                this.columnPredId = new DataColumn("PredId", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPredId);
                this.columnMappingProd = new DataColumn("MappingProd", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMappingProd);
                this.columnIsAgentVisible = new DataColumn("IsAgentVisible", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsAgentVisible);
                this.columnWebDescription = new DataColumn("WebDescription", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWebDescription);
                this.Constraints.Add(new UniqueConstraint("dsProductKey1", new DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnProdType.AllowDBNull = false;
                this.columnProdName.AllowDBNull = false;
                this.columnIsComponentOnly.AllowDBNull = false;
                this.columnIsBillable.AllowDBNull = false;
                this.columnIsProvisionable.AllowDBNull = false;
                this.columnIsProvViaMapping.AllowDBNull = false;
                this.columnProvCategory.AllowDBNull = false;
                this.columnSupplier.AllowDBNull = false;
            }
            
            public ProductRow NewProductRow() {
                return ((ProductRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ProductRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ProductRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductRowChanged != null)) {
                    this.ProductRowChanged(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductRowChanging != null)) {
                    this.ProductRowChanging(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductRowDeleted != null)) {
                    this.ProductRowDeleted(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductRowDeleting != null)) {
                    this.ProductRowDeleting(this, new ProductRowChangeEvent(((ProductRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveProductRow(ProductRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProductRow : DataRow {
            
            private ProductDataTable tableProduct;
            
            internal ProductRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableProduct = ((ProductDataTable)(this.Table));
            }
            
            public int Id {
                get {
                    return ((int)(this[this.tableProduct.IdColumn]));
                }
                set {
                    this[this.tableProduct.IdColumn] = value;
                }
            }
            
            public string ProdType {
                get {
                    return ((string)(this[this.tableProduct.ProdTypeColumn]));
                }
                set {
                    this[this.tableProduct.ProdTypeColumn] = value;
                }
            }
            
            public string ProdName {
                get {
                    return ((string)(this[this.tableProduct.ProdNameColumn]));
                }
                set {
                    this[this.tableProduct.ProdNameColumn] = value;
                }
            }
            
            public string BillText {
                get {
                    try {
                        return ((string)(this[this.tableProduct.BillTextColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.BillTextColumn] = value;
                }
            }
            
            public string ProdCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ProdCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ProdCodeColumn] = value;
                }
            }
            
            public string OldPriceCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.OldPriceCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.OldPriceCodeColumn] = value;
                }
            }
            
            public string ProdSubClass {
                get {
                    try {
                        return ((string)(this[this.tableProduct.ProdSubClassColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.ProdSubClassColumn] = value;
                }
            }
            
            public string IsComponentOnly {
                get {
                    return ((string)(this[this.tableProduct.IsComponentOnlyColumn]));
                }
                set {
                    this[this.tableProduct.IsComponentOnlyColumn] = value;
                }
            }
            
            public string IsBillable {
                get {
                    return ((string)(this[this.tableProduct.IsBillableColumn]));
                }
                set {
                    this[this.tableProduct.IsBillableColumn] = value;
                }
            }
            
            public string IsProvisionable {
                get {
                    return ((string)(this[this.tableProduct.IsProvisionableColumn]));
                }
                set {
                    this[this.tableProduct.IsProvisionableColumn] = value;
                }
            }
            
            public string IsProvViaMapping {
                get {
                    return ((string)(this[this.tableProduct.IsProvViaMappingColumn]));
                }
                set {
                    this[this.tableProduct.IsProvViaMappingColumn] = value;
                }
            }
            
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableProduct.DescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DescriptionColumn] = value;
                }
            }
            
            public string EligibilityCriteria {
                get {
                    try {
                        return ((string)(this[this.tableProduct.EligibilityCriteriaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.EligibilityCriteriaColumn] = value;
                }
            }
            
            public string ProvCategory {
                get {
                    return ((string)(this[this.tableProduct.ProvCategoryColumn]));
                }
                set {
                    this[this.tableProduct.ProvCategoryColumn] = value;
                }
            }
            
            public int Supplier {
                get {
                    return ((int)(this[this.tableProduct.SupplierColumn]));
                }
                set {
                    this[this.tableProduct.SupplierColumn] = value;
                }
            }
            
            public int Vendor {
                get {
                    try {
                        return ((int)(this[this.tableProduct.VendorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.VendorColumn] = value;
                }
            }
            
            public string TaxCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.TaxCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.TaxCodeColumn] = value;
                }
            }
            
            public string IsTaxExempt {
                get {
                    try {
                        return ((string)(this[this.tableProduct.IsTaxExemptColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.IsTaxExemptColumn] = value;
                }
            }
            
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableProduct.StatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StatusColumn] = value;
                }
            }
            
            public System.DateTime StartDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableProduct.StartDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StartDateColumn] = value;
                }
            }
            
            public System.DateTime EndDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableProduct.EndDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.EndDateColumn] = value;
                }
            }
            
            public string AcctCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.AcctCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.AcctCodeColumn] = value;
                }
            }
            
            public string CompCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.CompCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.CompCodeColumn] = value;
                }
            }
            
            public string DeptCode {
                get {
                    try {
                        return ((string)(this[this.tableProduct.DeptCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.DeptCodeColumn] = value;
                }
            }
            
            public int StartServMon {
                get {
                    try {
                        return ((int)(this[this.tableProduct.StartServMonColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.StartServMonColumn] = value;
                }
            }
            
            public int EndServMon {
                get {
                    try {
                        return ((int)(this[this.tableProduct.EndServMonColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.EndServMonColumn] = value;
                }
            }
            
            public int PredId {
                get {
                    try {
                        return ((int)(this[this.tableProduct.PredIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.PredIdColumn] = value;
                }
            }
            
            public int MappingProd {
                get {
                    try {
                        return ((int)(this[this.tableProduct.MappingProdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.MappingProdColumn] = value;
                }
            }
            
            public string IsAgentVisible {
                get {
                    try {
                        return ((string)(this[this.tableProduct.IsAgentVisibleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.IsAgentVisibleColumn] = value;
                }
            }
            
            public string WebDescription {
                get {
                    try {
                        return ((string)(this[this.tableProduct.WebDescriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProduct.WebDescriptionColumn] = value;
                }
            }
            
            public bool IsBillTextNull() {
                return this.IsNull(this.tableProduct.BillTextColumn);
            }
            
            public void SetBillTextNull() {
                this[this.tableProduct.BillTextColumn] = System.Convert.DBNull;
            }
            
            public bool IsProdCodeNull() {
                return this.IsNull(this.tableProduct.ProdCodeColumn);
            }
            
            public void SetProdCodeNull() {
                this[this.tableProduct.ProdCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsOldPriceCodeNull() {
                return this.IsNull(this.tableProduct.OldPriceCodeColumn);
            }
            
            public void SetOldPriceCodeNull() {
                this[this.tableProduct.OldPriceCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsProdSubClassNull() {
                return this.IsNull(this.tableProduct.ProdSubClassColumn);
            }
            
            public void SetProdSubClassNull() {
                this[this.tableProduct.ProdSubClassColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableProduct.DescriptionColumn);
            }
            
            public void SetDescriptionNull() {
                this[this.tableProduct.DescriptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsEligibilityCriteriaNull() {
                return this.IsNull(this.tableProduct.EligibilityCriteriaColumn);
            }
            
            public void SetEligibilityCriteriaNull() {
                this[this.tableProduct.EligibilityCriteriaColumn] = System.Convert.DBNull;
            }
            
            public bool IsVendorNull() {
                return this.IsNull(this.tableProduct.VendorColumn);
            }
            
            public void SetVendorNull() {
                this[this.tableProduct.VendorColumn] = System.Convert.DBNull;
            }
            
            public bool IsTaxCodeNull() {
                return this.IsNull(this.tableProduct.TaxCodeColumn);
            }
            
            public void SetTaxCodeNull() {
                this[this.tableProduct.TaxCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsTaxExemptNull() {
                return this.IsNull(this.tableProduct.IsTaxExemptColumn);
            }
            
            public void SetIsTaxExemptNull() {
                this[this.tableProduct.IsTaxExemptColumn] = System.Convert.DBNull;
            }
            
            public bool IsStatusNull() {
                return this.IsNull(this.tableProduct.StatusColumn);
            }
            
            public void SetStatusNull() {
                this[this.tableProduct.StatusColumn] = System.Convert.DBNull;
            }
            
            public bool IsStartDateNull() {
                return this.IsNull(this.tableProduct.StartDateColumn);
            }
            
            public void SetStartDateNull() {
                this[this.tableProduct.StartDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsEndDateNull() {
                return this.IsNull(this.tableProduct.EndDateColumn);
            }
            
            public void SetEndDateNull() {
                this[this.tableProduct.EndDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsAcctCodeNull() {
                return this.IsNull(this.tableProduct.AcctCodeColumn);
            }
            
            public void SetAcctCodeNull() {
                this[this.tableProduct.AcctCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsCompCodeNull() {
                return this.IsNull(this.tableProduct.CompCodeColumn);
            }
            
            public void SetCompCodeNull() {
                this[this.tableProduct.CompCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsDeptCodeNull() {
                return this.IsNull(this.tableProduct.DeptCodeColumn);
            }
            
            public void SetDeptCodeNull() {
                this[this.tableProduct.DeptCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsStartServMonNull() {
                return this.IsNull(this.tableProduct.StartServMonColumn);
            }
            
            public void SetStartServMonNull() {
                this[this.tableProduct.StartServMonColumn] = System.Convert.DBNull;
            }
            
            public bool IsEndServMonNull() {
                return this.IsNull(this.tableProduct.EndServMonColumn);
            }
            
            public void SetEndServMonNull() {
                this[this.tableProduct.EndServMonColumn] = System.Convert.DBNull;
            }
            
            public bool IsPredIdNull() {
                return this.IsNull(this.tableProduct.PredIdColumn);
            }
            
            public void SetPredIdNull() {
                this[this.tableProduct.PredIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsMappingProdNull() {
                return this.IsNull(this.tableProduct.MappingProdColumn);
            }
            
            public void SetMappingProdNull() {
                this[this.tableProduct.MappingProdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsAgentVisibleNull() {
                return this.IsNull(this.tableProduct.IsAgentVisibleColumn);
            }
            
            public void SetIsAgentVisibleNull() {
                this[this.tableProduct.IsAgentVisibleColumn] = System.Convert.DBNull;
            }
            
            public bool IsWebDescriptionNull() {
                return this.IsNull(this.tableProduct.WebDescriptionColumn);
            }
            
            public void SetWebDescriptionNull() {
                this[this.tableProduct.WebDescriptionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ProductRowChangeEvent : EventArgs {
            
            private ProductRow eventRow;
            
            private DataRowAction eventAction;
            
            public ProductRowChangeEvent(ProductRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ProductRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
