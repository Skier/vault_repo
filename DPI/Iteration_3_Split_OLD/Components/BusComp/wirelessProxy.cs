//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.573.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;
using DPI.Interfaces;

/*****************************************/
// DP: Added to autogen
namespace DPI.Components
{
	/// <remarks/>
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Web.Services.WebServiceBindingAttribute(Name="wireless.cfcSoapBinding", Namespace="http://webservices")]
	public class WirelessProxy : System.Web.Services.Protocols.SoapHttpClientProtocol 
	{		
		public WirelessProxy() 
		{			
			this.Url = (string) new System.Configuration.AppSettingsReader().GetValue("WebServiceURL", typeof(string)) + "wireless.cfc";
		}
		#region SYNCH
		/// <remarks/>
		[System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://webservices", ResponseNamespace="http://webservices")]
		[return: System.Xml.Serialization.SoapElementAttribute("request_vendorsReturn")]
		public string request_vendors(string username, string password, string merchantid, string clerkID) 
		{
			object[] results = this.Invoke("request_vendors", new object[] {
																			   username,
																			   password,
																			   merchantid,
																			   clerkID});
			return ((string)(results[0]));
		}
    
		/// <remarks/>
		[System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://webservices", ResponseNamespace="http://webservices")]
		[return: System.Xml.Serialization.SoapElementAttribute("request_productsReturn")]
		public string request_products(string username, string password, string merchantid, string clerkID, string VendorID) 
		{
			object[] results = this.Invoke("request_products", new object[] {
																				username,
																				password,
																				merchantid,
																				clerkID,
																				VendorID});
			return ((string)(results[0]));
		}
    
		/// <remarks/>
		[System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://webservices", ResponseNamespace="http://webservices")]
		[return: System.Xml.Serialization.SoapElementAttribute("order_productReturn")]
		public string order_product(string username, string password, string merchantid, string clerkID, string ProductID, string trNumber) 
		{
			object[] results = this.Invoke("order_product", new object[] {
																			 username,
																			 password,
																			 merchantid,
																			 clerkID,
																			 ProductID,
																			 trNumber});
			return ((string)(results[0]));
		}
    
		#endregion
		#region ASYNCH
		/// <remarks/>
		public System.IAsyncResult Beginrequest_vendors(string username, string password, string merchantid, string clerkID, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("request_vendors", new object[] {
																		username,
																		password,
																		merchantid,
																		clerkID}, callback, asyncState);
		}
    
		/// <remarks/>
		public string Endrequest_vendors(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}
    
		/// <remarks/>
		public System.IAsyncResult Beginorder_product(string username, string password, string merchantid, string clerkID, string ProductID, string trNumber, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("order_product", new object[] {
																	  username,
																	  password,
																	  merchantid,
																	  clerkID,
																	  ProductID,
																	  trNumber}, callback, asyncState);
		}
    
		/// <remarks/>
		public string Endorder_product(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}
    
		/// <remarks/>
		public System.IAsyncResult Beginrequest_products(string username, string password, string merchantid, string clerkID, string VendorID, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("request_products", new object[] {
																		 username,
																		 password,
																		 merchantid,
																		 clerkID,
																		 VendorID}, callback, asyncState);
		}
    
		/// <remarks/>
		public string Endrequest_products(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((string)(results[0]));
		}
		#endregion
	}
}