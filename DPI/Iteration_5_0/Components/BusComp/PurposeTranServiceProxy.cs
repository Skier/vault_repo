//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;

using DPI.Interfaces;
using DPI.Components;

/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="PurposeTransactionServiceSoap", Namespace="http://PurposeTransactionService.com")]
public class PurposeTransactionService : System.Web.Services.Protocols.SoapHttpClientProtocol 
{
    
	/// <remarks/>
	public PurposeTransactionService() 
	{
		//this.Url = "http://qa.purposecenter.com/DPI_Interface/PurposeTransactionService.asmx";

		this.Url = ApplSetting.GetPurposeUrl()	+ "PurposeTransactionService.asmx";

//			(string) new System.Configuration.AppSettingsReader().GetValue("PurposeWebServiceURL",typeof(string))

//		if (purposeUrl != null)
//			this.Url = purposeUrl;
//		else
//			this.Url = "http://10.8.131.59/DPI_Interface/purposetransactionservice.asmx";
					
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://PurposeTransactionService.com/InitiateTransaction", RequestNamespace="http://PurposeTransactionService.com", ResponseNamespace="http://PurposeTransactionService.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public string InitiateTransaction(string xmlMessage) 
	{
		object[] results = this.Invoke("InitiateTransaction", new object[] {
																			   xmlMessage});
		return ((string)(results[0]));
	}
    
	/// <remarks/>
	public System.IAsyncResult BeginInitiateTransaction(string xmlMessage, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("InitiateTransaction", new object[] {
																		xmlMessage}, callback, asyncState);
	}
    
	/// <remarks/>
	public string EndInitiateTransaction(System.IAsyncResult asyncResult) 
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((string)(results[0]));
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://PurposeTransactionService.com/GetTransactionResponse", RequestNamespace="http://PurposeTransactionService.com", ResponseNamespace="http://PurposeTransactionService.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public string GetTransactionResponse(string messageID) 
	{
		object[] results = this.Invoke("GetTransactionResponse", new object[] {
																				  messageID});
		return ((string)(results[0]));
	}
    
	/// <remarks/>
	public System.IAsyncResult BeginGetTransactionResponse(string messageID, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("GetTransactionResponse", new object[] {
																		   messageID}, callback, asyncState);
	}
    
	/// <remarks/>
	public string EndGetTransactionResponse(System.IAsyncResult asyncResult) 
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((string)(results[0]));
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://PurposeTransactionService.com/EnrollRequest", RequestNamespace="http://PurposeTransactionService.com", ResponseNamespace="http://PurposeTransactionService.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public System.Xml.XmlNode EnrollRequest(System.Xml.XmlNode xmlEnrollRequest, int timeOut) 
	{
		object[] results = this.Invoke("EnrollRequest", new object[] {
																		 xmlEnrollRequest,
																		 timeOut});
		return ((System.Xml.XmlNode)(results[0]));
	}
    
	/// <remarks/>
	public System.IAsyncResult BeginEnrollRequest(System.Xml.XmlNode xmlEnrollRequest, int timeOut, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("EnrollRequest", new object[] {
																  xmlEnrollRequest,
																  timeOut}, callback, asyncState);
	}
    
	/// <remarks/>
	public System.Xml.XmlNode EndEnrollRequest(System.IAsyncResult asyncResult) 
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((System.Xml.XmlNode)(results[0]));
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://PurposeTransactionService.com/EnrollReversalRequest", RequestNamespace="http://PurposeTransactionService.com", ResponseNamespace="http://PurposeTransactionService.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public System.Xml.XmlNode EnrollReversalRequest(System.Xml.XmlNode xmlEnrollReversalRequest, int timeOut) 
	{
		object[] results = this.Invoke("EnrollReversalRequest", new object[] {
																				 xmlEnrollReversalRequest,
																				 timeOut});
		return ((System.Xml.XmlNode)(results[0]));
	}
    
	/// <remarks/>
	public System.IAsyncResult BeginEnrollReversalRequest(System.Xml.XmlNode xmlEnrollReversalRequest, int timeOut, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("EnrollReversalRequest", new object[] {
																		  xmlEnrollReversalRequest,
																		  timeOut}, callback, asyncState);
	}
    
	/// <remarks/>
	public System.Xml.XmlNode EndEnrollReversalRequest(System.IAsyncResult asyncResult) 
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((System.Xml.XmlNode)(results[0]));
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://PurposeTransactionService.com/ReloadRequest", RequestNamespace="http://PurposeTransactionService.com", ResponseNamespace="http://PurposeTransactionService.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public System.Xml.XmlNode ReloadRequest(System.Xml.XmlNode xmlReloadRequest, int timeOut) 
	{
		object[] results = this.Invoke("ReloadRequest", new object[] {
																		 xmlReloadRequest,
																		 timeOut});
		return ((System.Xml.XmlNode)(results[0]));
	}
    
	/// <remarks/>
	public System.IAsyncResult BeginReloadRequest(System.Xml.XmlNode xmlReloadRequest, int timeOut, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("ReloadRequest", new object[] {
																  xmlReloadRequest,
																  timeOut}, callback, asyncState);
	}
    
	/// <remarks/>
	public System.Xml.XmlNode EndReloadRequest(System.IAsyncResult asyncResult) 
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((System.Xml.XmlNode)(results[0]));
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://PurposeTransactionService.com/ReloadReversalRequest", RequestNamespace="http://PurposeTransactionService.com", ResponseNamespace="http://PurposeTransactionService.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public System.Xml.XmlNode ReloadReversalRequest(System.Xml.XmlNode xmlReloadReversalRequest, int timeOut) 
	{
		object[] results = this.Invoke("ReloadReversalRequest", new object[] {
																				 xmlReloadReversalRequest,
																				 timeOut});
		return ((System.Xml.XmlNode)(results[0]));
	}
    
	/// <remarks/>
	public System.IAsyncResult BeginReloadReversalRequest(System.Xml.XmlNode xmlReloadReversalRequest, int timeOut, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("ReloadReversalRequest", new object[] {
																		  xmlReloadReversalRequest,
																		  timeOut}, callback, asyncState);
	}
    
	/// <remarks/>
	public System.Xml.XmlNode EndReloadReversalRequest(System.IAsyncResult asyncResult) 
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((System.Xml.XmlNode)(results[0]));
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://PurposeTransactionService.com/ProcessTransaction", RequestNamespace="http://PurposeTransactionService.com", ResponseNamespace="http://PurposeTransactionService.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public string ProcessTransaction(string xmlMessage, int timeOut) 
	{
		object[] results = this.Invoke("ProcessTransaction", new object[] {
																			  xmlMessage,
																			  timeOut});
		return ((string)(results[0]));
	}
    
	/// <remarks/>
	public System.IAsyncResult BeginProcessTransaction(string xmlMessage, int timeOut, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("ProcessTransaction", new object[] {
																	   xmlMessage,
																	   timeOut}, callback, asyncState);
	}
    
	/// <remarks/>
	public string EndProcessTransaction(System.IAsyncResult asyncResult) 
	{
		object[] results = this.EndInvoke(asyncResult);
		return ((string)(results[0]));
	}
}