//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace DPI.Reports {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsStore_OrderStatus : DataSet {
        
        private spStores_GetOrderStatusDataTable tablespStores_GetOrderStatus;
        
        public dsStore_OrderStatus() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsStore_OrderStatus(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["spStores_GetOrderStatus"] != null)) {
                    this.Tables.Add(new spStores_GetOrderStatusDataTable(ds.Tables["spStores_GetOrderStatus"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spStores_GetOrderStatusDataTable spStores_GetOrderStatus {
            get {
                return this.tablespStores_GetOrderStatus;
            }
        }
        
        public override DataSet Clone() {
            dsStore_OrderStatus cln = ((dsStore_OrderStatus)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["spStores_GetOrderStatus"] != null)) {
                this.Tables.Add(new spStores_GetOrderStatusDataTable(ds.Tables["spStores_GetOrderStatus"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablespStores_GetOrderStatus = ((spStores_GetOrderStatusDataTable)(this.Tables["spStores_GetOrderStatus"]));
            if ((this.tablespStores_GetOrderStatus != null)) {
                this.tablespStores_GetOrderStatus.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dsStore_OrderStatus";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsStore_OrderStatus.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablespStores_GetOrderStatus = new spStores_GetOrderStatusDataTable();
            this.Tables.Add(this.tablespStores_GetOrderStatus);
        }
        
        private bool ShouldSerializespStores_GetOrderStatus() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void spStores_GetOrderStatusRowChangeEventHandler(object sender, spStores_GetOrderStatusRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class spStores_GetOrderStatusDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnStoreCode;
            
            private DataColumn columnDisplayName;
            
            private DataColumn columnReportPeriod;
            
            private DataColumn columnCustomerName;
            
            private DataColumn columnAccNumber;
            
            private DataColumn columnPhNumber;
            
            private DataColumn columnPayDate;
            
            private DataColumn columnAccountStatus;
            
            private DataColumn columnActivDate;
            
            private DataColumn columnDue_Date;
            
            private DataColumn columnSDiscoDate;
            
            internal spStores_GetOrderStatusDataTable() : 
                    base("spStores_GetOrderStatus") {
                this.InitClass();
            }
            
            internal spStores_GetOrderStatusDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn StoreCodeColumn {
                get {
                    return this.columnStoreCode;
                }
            }
            
            internal DataColumn DisplayNameColumn {
                get {
                    return this.columnDisplayName;
                }
            }
            
            internal DataColumn ReportPeriodColumn {
                get {
                    return this.columnReportPeriod;
                }
            }
            
            internal DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            internal DataColumn AccNumberColumn {
                get {
                    return this.columnAccNumber;
                }
            }
            
            internal DataColumn PhNumberColumn {
                get {
                    return this.columnPhNumber;
                }
            }
            
            internal DataColumn PayDateColumn {
                get {
                    return this.columnPayDate;
                }
            }
            
            internal DataColumn AccountStatusColumn {
                get {
                    return this.columnAccountStatus;
                }
            }
            
            internal DataColumn ActivDateColumn {
                get {
                    return this.columnActivDate;
                }
            }
            
            internal DataColumn Due_DateColumn {
                get {
                    return this.columnDue_Date;
                }
            }
            
            internal DataColumn SDiscoDateColumn {
                get {
                    return this.columnSDiscoDate;
                }
            }
            
            public spStores_GetOrderStatusRow this[int index] {
                get {
                    return ((spStores_GetOrderStatusRow)(this.Rows[index]));
                }
            }
            
            public event spStores_GetOrderStatusRowChangeEventHandler spStores_GetOrderStatusRowChanged;
            
            public event spStores_GetOrderStatusRowChangeEventHandler spStores_GetOrderStatusRowChanging;
            
            public event spStores_GetOrderStatusRowChangeEventHandler spStores_GetOrderStatusRowDeleted;
            
            public event spStores_GetOrderStatusRowChangeEventHandler spStores_GetOrderStatusRowDeleting;
            
            public void AddspStores_GetOrderStatusRow(spStores_GetOrderStatusRow row) {
                this.Rows.Add(row);
            }
            
            public spStores_GetOrderStatusRow AddspStores_GetOrderStatusRow(string StoreCode, string DisplayName, string ReportPeriod, string CustomerName, int AccNumber, string PhNumber, System.DateTime PayDate, string AccountStatus, System.DateTime ActivDate, System.DateTime Due_Date, System.DateTime SDiscoDate) {
                spStores_GetOrderStatusRow rowspStores_GetOrderStatusRow = ((spStores_GetOrderStatusRow)(this.NewRow()));
                rowspStores_GetOrderStatusRow.ItemArray = new object[] {
                        StoreCode,
                        DisplayName,
                        ReportPeriod,
                        CustomerName,
                        AccNumber,
                        PhNumber,
                        PayDate,
                        AccountStatus,
                        ActivDate,
                        Due_Date,
                        SDiscoDate};
                this.Rows.Add(rowspStores_GetOrderStatusRow);
                return rowspStores_GetOrderStatusRow;
            }
            
            public spStores_GetOrderStatusRow FindByAccNumber(int AccNumber) {
                return ((spStores_GetOrderStatusRow)(this.Rows.Find(new object[] {
                            AccNumber})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                spStores_GetOrderStatusDataTable cln = ((spStores_GetOrderStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new spStores_GetOrderStatusDataTable();
            }
            
            internal void InitVars() {
                this.columnStoreCode = this.Columns["StoreCode"];
                this.columnDisplayName = this.Columns["DisplayName"];
                this.columnReportPeriod = this.Columns["ReportPeriod"];
                this.columnCustomerName = this.Columns["CustomerName"];
                this.columnAccNumber = this.Columns["AccNumber"];
                this.columnPhNumber = this.Columns["PhNumber"];
                this.columnPayDate = this.Columns["PayDate"];
                this.columnAccountStatus = this.Columns["AccountStatus"];
                this.columnActivDate = this.Columns["ActivDate"];
                this.columnDue_Date = this.Columns["Due_Date"];
                this.columnSDiscoDate = this.Columns["SDiscoDate"];
            }
            
            private void InitClass() {
                this.columnStoreCode = new DataColumn("StoreCode", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStoreCode);
                this.columnDisplayName = new DataColumn("DisplayName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDisplayName);
                this.columnReportPeriod = new DataColumn("ReportPeriod", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnReportPeriod);
                this.columnCustomerName = new DataColumn("CustomerName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCustomerName);
                this.columnAccNumber = new DataColumn("AccNumber", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAccNumber);
                this.columnPhNumber = new DataColumn("PhNumber", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPhNumber);
                this.columnPayDate = new DataColumn("PayDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPayDate);
                this.columnAccountStatus = new DataColumn("AccountStatus", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAccountStatus);
                this.columnActivDate = new DataColumn("ActivDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivDate);
                this.columnDue_Date = new DataColumn("Due_Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDue_Date);
                this.columnSDiscoDate = new DataColumn("SDiscoDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSDiscoDate);
                this.Constraints.Add(new UniqueConstraint("dsStore_OrderStatusKey1", new DataColumn[] {
                                this.columnAccNumber}, true));
                this.columnStoreCode.ReadOnly = true;
                this.columnDisplayName.ReadOnly = true;
                this.columnReportPeriod.ReadOnly = true;
                this.columnCustomerName.ReadOnly = true;
                this.columnAccNumber.AllowDBNull = false;
                this.columnAccNumber.Unique = true;
                this.columnPayDate.AllowDBNull = false;
                this.columnAccountStatus.ReadOnly = true;
            }
            
            public spStores_GetOrderStatusRow NewspStores_GetOrderStatusRow() {
                return ((spStores_GetOrderStatusRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new spStores_GetOrderStatusRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(spStores_GetOrderStatusRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spStores_GetOrderStatusRowChanged != null)) {
                    this.spStores_GetOrderStatusRowChanged(this, new spStores_GetOrderStatusRowChangeEvent(((spStores_GetOrderStatusRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spStores_GetOrderStatusRowChanging != null)) {
                    this.spStores_GetOrderStatusRowChanging(this, new spStores_GetOrderStatusRowChangeEvent(((spStores_GetOrderStatusRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spStores_GetOrderStatusRowDeleted != null)) {
                    this.spStores_GetOrderStatusRowDeleted(this, new spStores_GetOrderStatusRowChangeEvent(((spStores_GetOrderStatusRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spStores_GetOrderStatusRowDeleting != null)) {
                    this.spStores_GetOrderStatusRowDeleting(this, new spStores_GetOrderStatusRowChangeEvent(((spStores_GetOrderStatusRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovespStores_GetOrderStatusRow(spStores_GetOrderStatusRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class spStores_GetOrderStatusRow : DataRow {
            
            private spStores_GetOrderStatusDataTable tablespStores_GetOrderStatus;
            
            internal spStores_GetOrderStatusRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablespStores_GetOrderStatus = ((spStores_GetOrderStatusDataTable)(this.Table));
            }
            
            public string StoreCode {
                get {
                    try {
                        return ((string)(this[this.tablespStores_GetOrderStatus.StoreCodeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespStores_GetOrderStatus.StoreCodeColumn] = value;
                }
            }
            
            public string DisplayName {
                get {
                    try {
                        return ((string)(this[this.tablespStores_GetOrderStatus.DisplayNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespStores_GetOrderStatus.DisplayNameColumn] = value;
                }
            }
            
            public string ReportPeriod {
                get {
                    try {
                        return ((string)(this[this.tablespStores_GetOrderStatus.ReportPeriodColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespStores_GetOrderStatus.ReportPeriodColumn] = value;
                }
            }
            
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tablespStores_GetOrderStatus.CustomerNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespStores_GetOrderStatus.CustomerNameColumn] = value;
                }
            }
            
            public int AccNumber {
                get {
                    return ((int)(this[this.tablespStores_GetOrderStatus.AccNumberColumn]));
                }
                set {
                    this[this.tablespStores_GetOrderStatus.AccNumberColumn] = value;
                }
            }
            
            public string PhNumber {
                get {
                    try {
                        return ((string)(this[this.tablespStores_GetOrderStatus.PhNumberColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespStores_GetOrderStatus.PhNumberColumn] = value;
                }
            }
            
            public System.DateTime PayDate {
                get {
                    return ((System.DateTime)(this[this.tablespStores_GetOrderStatus.PayDateColumn]));
                }
                set {
                    this[this.tablespStores_GetOrderStatus.PayDateColumn] = value;
                }
            }
            
            public string AccountStatus {
                get {
                    try {
                        return ((string)(this[this.tablespStores_GetOrderStatus.AccountStatusColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespStores_GetOrderStatus.AccountStatusColumn] = value;
                }
            }
            
            public System.DateTime ActivDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablespStores_GetOrderStatus.ActivDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespStores_GetOrderStatus.ActivDateColumn] = value;
                }
            }
            
            public System.DateTime Due_Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablespStores_GetOrderStatus.Due_DateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespStores_GetOrderStatus.Due_DateColumn] = value;
                }
            }
            
            public System.DateTime SDiscoDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablespStores_GetOrderStatus.SDiscoDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespStores_GetOrderStatus.SDiscoDateColumn] = value;
                }
            }
            
            public bool IsStoreCodeNull() {
                return this.IsNull(this.tablespStores_GetOrderStatus.StoreCodeColumn);
            }
            
            public void SetStoreCodeNull() {
                this[this.tablespStores_GetOrderStatus.StoreCodeColumn] = System.Convert.DBNull;
            }
            
            public bool IsDisplayNameNull() {
                return this.IsNull(this.tablespStores_GetOrderStatus.DisplayNameColumn);
            }
            
            public void SetDisplayNameNull() {
                this[this.tablespStores_GetOrderStatus.DisplayNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsReportPeriodNull() {
                return this.IsNull(this.tablespStores_GetOrderStatus.ReportPeriodColumn);
            }
            
            public void SetReportPeriodNull() {
                this[this.tablespStores_GetOrderStatus.ReportPeriodColumn] = System.Convert.DBNull;
            }
            
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tablespStores_GetOrderStatus.CustomerNameColumn);
            }
            
            public void SetCustomerNameNull() {
                this[this.tablespStores_GetOrderStatus.CustomerNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsPhNumberNull() {
                return this.IsNull(this.tablespStores_GetOrderStatus.PhNumberColumn);
            }
            
            public void SetPhNumberNull() {
                this[this.tablespStores_GetOrderStatus.PhNumberColumn] = System.Convert.DBNull;
            }
            
            public bool IsAccountStatusNull() {
                return this.IsNull(this.tablespStores_GetOrderStatus.AccountStatusColumn);
            }
            
            public void SetAccountStatusNull() {
                this[this.tablespStores_GetOrderStatus.AccountStatusColumn] = System.Convert.DBNull;
            }
            
            public bool IsActivDateNull() {
                return this.IsNull(this.tablespStores_GetOrderStatus.ActivDateColumn);
            }
            
            public void SetActivDateNull() {
                this[this.tablespStores_GetOrderStatus.ActivDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsDue_DateNull() {
                return this.IsNull(this.tablespStores_GetOrderStatus.Due_DateColumn);
            }
            
            public void SetDue_DateNull() {
                this[this.tablespStores_GetOrderStatus.Due_DateColumn] = System.Convert.DBNull;
            }
            
            public bool IsSDiscoDateNull() {
                return this.IsNull(this.tablespStores_GetOrderStatus.SDiscoDateColumn);
            }
            
            public void SetSDiscoDateNull() {
                this[this.tablespStores_GetOrderStatus.SDiscoDateColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class spStores_GetOrderStatusRowChangeEvent : EventArgs {
            
            private spStores_GetOrderStatusRow eventRow;
            
            private DataRowAction eventAction;
            
            public spStores_GetOrderStatusRowChangeEvent(spStores_GetOrderStatusRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public spStores_GetOrderStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
