<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:controls="com.affilia.controls.*"
	initialize="onInit()" xmlns:help="com.dalworth.leadCentral.help.*">
	
	<mx:Script>
		<![CDATA[
			import com.dalworth.leadCentral.domain.Transaction;
			import com.dalworth.leadCentral.domain.TrackingPhone;
			import com.dalworth.leadCentral.service.registry.TrackingPhoneRegistry;
			import com.dalworth.leadCentral.domain.TransactionType;
			import mx.binding.utils.ChangeWatcher;
			import mx.controls.dataGridClasses.DataGridColumn;
			import com.dalworth.leadCentral.domain.LeadStatus;
			import com.dalworth.leadCentral.service.registry.LeadSourceRegistry;
			import com.dalworth.leadCentral.domain.LeadSource;
			import com.dalworth.leadCentral.events.LeadEvent;
			import com.dalworth.leadCentral.domain.Lead;
			import mx.core.Application;
			import com.affilia.util.DateUtil;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.events.ItemClickEvent;
			import mx.controls.Alert;
			
			private static const COLUMN_DATE:String = "Date";
			private static const COLUMN_TIME:String = "Time";
			private static const COLUMN_DESCRIPTION:String = "Description";
			private static const COLUMN_PHONE:String = "Phone";
			private static const COLUMN_QUANTITY:String = "Quantity";
			private static const COLUMN_AMOUNT:String = "Amount";
			private static const COLUMN_BALANCE:String = "Balance";

			[Bindable]
			public var isReadOnly:Boolean;

            [Embed(source="/assets/icons16/resultset_first.png")]
            [Bindable]
            private var imgFirst:Class;
            
            [Embed(source="/assets/icons16/resultset_first_disabled.png")]
            [Bindable]
            private var imgFirstDisabled:Class;
            
            [Embed(source="/assets/icons16/resultset_last.png")]
            [Bindable]
            private var imgLast:Class;
            
            [Embed(source="/assets/icons16/resultset_last_disabled.png")]
            [Bindable]
            private var imgLastDisabled:Class;
            
            [Embed(source="/assets/icons16/resultset_prev.png")]
            [Bindable]
            private var imgPrev:Class;
            
            [Embed(source="/assets/icons16/resultset_prev_disabled.png")]
            [Bindable]
            private var imgPrevDisabled:Class;
            
            [Embed(source="/assets/icons16/resultset_next.png")]
            [Bindable]
            private var imgNext:Class;
            
            [Embed(source="/assets/icons16/resultset_next_disabled.png")]
            [Bindable]
            private var imgNextDisabled:Class;
            
			public function set isBusy(value:Boolean):void 
			{
				model.isBusy = value;
			} 
			
			[Bindable]
			private var model:TransactionsModel;
			private var controller:TransactionsController;
			
			public function init():void 
			{
				refreshAll();
			}
			
			private function onInit():void 
			{
				model = TransactionsModel.getInstance();
				controller = new TransactionsController(this);
			}
			
			public function refreshAll():void 
			{
				if (!controller)
					return;
					
				controller.refreshTransactions();
				controller.refreshCurrentBalance();
			}
			
			private function getTransactionLabel(item:Object, column:DataGridColumn):String 
			{
				if (item is Transaction) 
				{
					var transaction:Transaction = item as Transaction;
					
					switch (column.headerText) 
					{
						case COLUMN_DATE :
							return DateUtil.getDateStr(transaction.TransactionDate);
						
						case COLUMN_TIME :
							return DateUtil.getTimeStr(transaction.TransactionDate);
						
						case COLUMN_PHONE :
							if (transaction.TrackingPhoneId > 0)
								return TrackingPhone(TrackingPhoneRegistry.getInstance().getLocal(transaction.TrackingPhoneId)).ScreenNumber;
							else 
								return "";
						
						case COLUMN_QUANTITY :
							return (transaction.Quantity.toString());
						
						default :
							return "";
					}
				} else 
				{
					return "bad object";
				}
			}
			
			private function onRefreshClick():void 
			{
				refreshAll();
			}
			
            private function goFirst():void 
            {
            	controller.goFirst();
            }
            
            private function goPrev():void 
            {
            	controller.goPrev();
            }
            
            private function goNext():void 
            {
            	controller.goNext();
            }
            
            private function goLast():void 
            {
            	controller.goLast();
            }
            
            private function cbPageSizeChangeHandler():void 
            {
                var pgNum:int = new int(cbPageSize.selectedLabel);
                controller.setPageSize(pgNum);            
            }
            
            private function cbCurrentPageChangeHandler():void 
            {
                controller.setCurrentPage(cbCurrentPage.selectedIndex + 1);            
            }

			private static const contextHelpUrl:String = "http://www.theleadcentral.com/?page_id=111";
		]]>
	</mx:Script>
	
	<mx:VBox id="boxContent" width="100%" height="100%" verticalGap="0" backgroundColor="#FFFFFF" enabled="{!model.isBusy}">
		<help:ContextHelpPanel width="100%" backgroundColor="#FFFFDD" contextHelpUrl="{contextHelpUrl}"/>
		
		<mx:HBox width="100%" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10" verticalAlign="middle"
			backgroundColor="#FFFFDD">
			<mx:Label text="Transactions List" fontSize="24" color="#666666"/>
			<mx:Spacer width="100%"/>
			<mx:Button height="35" label="Refresh" click="onRefreshClick()" fontSize="14"/>
		</mx:HBox> 
		
		<mx:Spacer width="100%" height="5"/>
		
		<mx:VBox width="100%" height="100%" label="Phone Transactions" verticalGap="5">
	        <mx:HBox width="100%" paddingLeft="4" paddingRight="4" paddingBottom="2" paddingTop="2" horizontalGap="2"
	            borderColor="#cccccc" borderStyle="solid" borderThickness="1"
	            backgroundColor="#eeeeee">
	            <mx:Button width="20" height="20" cornerRadius="2" 
	                icon="{(model.currentPage != 1) ? imgFirst : imgFirstDisabled}" toolTip="First" 
	                click="goFirst()" enabled="{model.currentPage != 1}"/> 
	
	            <mx:Button width="20" height="20" cornerRadius="2" 
	                icon="{(model.currentPage != 1) ? imgPrev : imgPrevDisabled}" toolTip="Previous" 
	                click="goPrev()" enabled="{model.currentPage != 1}"/> 
	
	            <mx:ComboBox id="cbCurrentPage" dataProvider="{model.pages}" width="70" height="20" verticalCenter="0" textAlign="right"
	                selectedIndex="{(model.currentPage - 1)}" labelField="label" cornerRadius="2"
	                change="cbCurrentPageChangeHandler()"/>
	
	            <mx:Button width="20" height="20" cornerRadius="2" 
	                icon="{(model.currentPage != model.pages.length) ? imgNext : imgNextDisabled}" toolTip="Next" 
	                click="goNext()" enabled="{model.currentPage != model.pages.length}"/> 
	
	            <mx:Button width="20" height="20" cornerRadius="2" 
	                icon="{(model.currentPage != model.pages.length) ? imgLast : imgLastDisabled}" toolTip="Last" 
	                click="goLast()" enabled="{model.currentPage != model.pages.length}"/>
	
	            <mx:Spacer width="100%"/>
	
	            <mx:HBox horizontalGap="0">
	                <mx:Label text="Total Transactions:"/>
	                <mx:Label text="{model.transactionsCount.toString()}" fontWeight="bold"/>
	                <mx:Label text="Page:"/>
	                <mx:Label text="{model.currentPage.toString()}" fontWeight="bold"/>
	                <mx:Label text="of"/>
	                <mx:Label text="{model.pages.length.toString()}" fontWeight="bold"/>
	                <mx:Label text="Page size:"/>
	                <mx:ComboBox id="cbPageSize" dataProvider="{model.pageSizes}" width="60" height="20" verticalCenter="0"
	                    change="cbPageSizeChangeHandler()" selectedIndex="1"/>
	            </mx:HBox>
	        </mx:HBox>
	
			<mx:DataGrid id="dgTransactions" dataProvider="{model.transactions}" width="100%" height="100%" minWidth="600"
				sortableColumns="false" draggableColumns="false" editable="false" resizableColumns="true">
				<mx:columns>
					<mx:DataGridColumn headerText="{COLUMN_DATE}" itemRenderer="mx.controls.Label" labelFunction="getTransactionLabel" width="80" minWidth="80"/>
					<mx:DataGridColumn headerText="{COLUMN_TIME}" itemRenderer="mx.controls.Label" labelFunction="getTransactionLabel" width="80" minWidth="80"/>
					<mx:DataGridColumn headerText="{COLUMN_DESCRIPTION}" itemRenderer="com.dalworth.leadCentral.transaction.TransactionDescriptionIR" minWidth="150"/>
					<mx:DataGridColumn headerText="{COLUMN_AMOUNT}" itemRenderer="com.dalworth.leadCentral.transaction.TransactionAmountIR" width="80" minWidth="80" textAlign="right"/>
					<mx:DataGridColumn headerText="{COLUMN_PHONE}" itemRenderer="mx.controls.Label" labelFunction="getTransactionLabel" width="100" minWidth="100"/>
					<mx:DataGridColumn headerText="{COLUMN_QUANTITY}" itemRenderer="mx.controls.Label" labelFunction="getTransactionLabel" width="80" minWidth="80" textAlign="right"/>
					<mx:DataGridColumn headerText="{COLUMN_BALANCE}" itemRenderer="com.dalworth.leadCentral.transaction.TransactionBalanceIR" width="80" minWidth="80" textAlign="right"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:VBox>
	</mx:VBox>
	
	<mx:VBox id="boxProgress" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" visible="{model.isBusy}">
		<mx:VBox width="250" backgroundColor="#FFFFFF" borderColor="#CCCCCC" borderStyle="solid" borderThickness="4" cornerRadius="4"
			dropShadowEnabled="true" shadowDirection="center" shadowDistance="0">
			<mx:Label width="100%" text="Loading..." fontSize="16" fontWeight="bold" textAlign="center"/>
			<mx:ProgressBar width="100%" label="" indeterminate="true"/>
		</mx:VBox>
	</mx:VBox>
</mx:Canvas>
