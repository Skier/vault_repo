<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml">
	
	<mx:Script>
		<![CDATA[
			import com.dalworth.leadCentral.service.PhoneService;
			import com.dalworth.leadCentral.domain.PhoneCallWorkflow;
			import com.dalworth.leadCentral.events.PhoneCallWorkflowEvent;
			import com.dalworth.leadCentral.domain.TrackingPhone;
			import mx.controls.Alert;
			import com.affilia.util.DateUtil;
			import mx.core.Application;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.collections.ArrayCollection;
			import mx.rpc.Responder;
			
			[Bindable]
			private var rules:ArrayCollection;
			
			private var _phone:TrackingPhone;
			[Bindable]
			public function get phone():TrackingPhone { return _phone; }
			public function set phone(value:TrackingPhone):void 
			{
				_phone = value;
				initRules();
			}
			
			[Bindable]
			public var customPhonesFrom:ArrayCollection;
			
			private function startRemoting():void 
			{
				this.enabled = false;
			}
			
			private function stopRemoting():void 
			{
				this.enabled = true;
			}
			
			private function initRules():void 
			{
				if (rules == null)
					rules = new ArrayCollection();
				
				rules.removeAll();
				if (_phone == null)
					return; 
				
				startRemoting();
				PhoneService.getInstance().getRulesByPhone(_phone, 
					new mx.rpc.Responder(
						function (event:ResultEvent):void 
						{
							stopRemoting();
							var result:Array = event.result as Array;
							var len:int = result.length;
							for (var i:int = 0; i < len; i++)
							{
								var rule:PhoneCallWorkflow = result[i] as PhoneCallWorkflow;
								rule.updateProperties();
								rules.addItem(rule);
							}
						},
						function (event:FaultEvent):void 
						{
							stopRemoting();
							trace(event.fault.message);
						}));
			}
			
			private function onNewRule():void 
			{
				var rule:PhoneCallWorkflow = new PhoneCallWorkflow();
					rule.RelatedPhoneTo = phone;
					rule.TrackingPhoneId = phone.Id;
					rule.Priority = rules.length;

				var popup:PhoneRuleEditPopup = PhoneRuleEditPopup.open(Application.application as DisplayObject, rule, customPhonesFrom);
				popup.addEventListener(PhoneCallWorkflowEvent.PHONE_CALL_WORKFLOW_SAVE, 
					function (event:PhoneCallWorkflowEvent):void 
					{
						initRules();
					});
			}
			
			private function onDragComplete():void 
			{
				for (var i:int; i < rules.length; i++)
				{
					var rule:PhoneCallWorkflow = rules[i] as PhoneCallWorkflow;
					rule.Priority = i;
				}
				
				startRemoting();
				PhoneService.getInstance().commitPhoneCallWorkflows(rules, 
					new mx.rpc.Responder(
						function (event:ResultEvent):void 
						{
							stopRemoting();
						}, 
						function (event:FaultEvent):void 
						{
							stopRemoting();
							Alert.show(event.fault.message);
						}
					));
			}
			
			private function onRemoveRule():void 
			{
				startRemoting();
				var rule:PhoneCallWorkflow = dgRules.selectedItem as PhoneCallWorkflow;
				PhoneService.getInstance().removePhoneCallWorkflow(rule.prepareToSend(), 
					new mx.rpc.Responder(
						function (event:ResultEvent):void 
						{
							stopRemoting();
							initRules();
						}, 
						function (event:FaultEvent):void 
						{
							stopRemoting();
							Alert.show(event.fault.message);
						}
					)) 
			}
			
			private function onDoubleClick():void 
			{
				var rule:PhoneCallWorkflow = dgRules.selectedItem as PhoneCallWorkflow;
				var popup:PhoneRuleEditPopup = PhoneRuleEditPopup.open(Application.application as DisplayObject, rule, customPhonesFrom);
				popup.addEventListener(PhoneCallWorkflowEvent.PHONE_CALL_WORKFLOW_SAVE, 
					function (event:PhoneCallWorkflowEvent):void 
					{
						initRules();
					});
			}
			
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" height="100%" horizontalAlign="right">
		<mx:HBox width="100%">
			<mx:Spacer width="100%"/>
			<mx:Button label="Remove selected" click="onRemoveRule()" enabled="{dgRules.selectedItem != null}"/>
			<mx:Button label="New Rule" click="onNewRule()"/>
		</mx:HBox>

		<mx:DataGrid id="dgRules" width="100%" height="100%" dataProvider="{rules}"
			sortableColumns="false" draggableColumns="false"
			doubleClickEnabled="true" doubleClick="onDoubleClick()"
			dragEnabled="true" dropEnabled="true" dragMoveEnabled="true" dragComplete="onDragComplete()">
			<mx:columns>
				<mx:DataGridColumn headerText="From" dataField="FromPhoneNumber"/>
				<mx:DataGridColumn headerText="Days" dataField="DaysStr"/>
				<mx:DataGridColumn headerText="Time" dataField="TimeStr"/>
				<mx:DataGridColumn headerText="Flow" dataField="FlowStr"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:VBox>
</mx:Canvas>
