<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical"
    title="Edit Lead Type" width="400" xmlns:controls="com.affilia.controls.*">
    
    <mx:Script>
        <![CDATA[
        	import mx.utils.StringUtil;
        	import Intuit.Sb.Cdm.vo.JobType;
        	import com.dalworth.servman.service.IDSJobTypeService;
        	import mx.collections.ArrayCollection;
        	import com.dalworth.servman.events.LeadTypeEvent;
        	import com.dalworth.servman.service.LeadTypeService;
        	import com.dalworth.servman.domain.LeadType;
        	import mx.controls.Alert;
        	import mx.managers.PopUpManager;
        	import mx.core.UIComponent;
        	import mx.rpc.events.ResultEvent;
        	import mx.rpc.events.FaultEvent;
        	import mx.events.CloseEvent;
        	import mx.events.ValidationResultEvent;
        	import mx.rpc.Responder;
            
            [Bindable] private var isBusy:Boolean = false;
            [Bindable] private var isReadOnly:Boolean = false;
            
            [Bindable]
            private var leadType:LeadType;
            
            [Bindable]
            private var jobTypes:ArrayCollection;
            
            public static function open(parent:DisplayObject, leadType:LeadType, isReadOnly:Boolean = false, modal:Boolean = true):LeadTypeEditPopup
            {
                var popup:LeadTypeEditPopup = new LeadTypeEditPopup();
                
                popup.leadType = leadType;
                popup.isReadOnly = isReadOnly;
                
                popup.initJobTypes();

                PopUpManager.addPopUp(popup, parent, modal);
                PopUpManager.centerPopUp(popup);
                
                return popup;
            }

            public function close():void
            {
                PopUpManager.removePopUp(this);
            }
            
            private function initJobTypes():void 
            {
            	var service:IDSJobTypeService = IDSJobTypeService.getInstance();
            	service.addEventListener("jobTypesLoaded", 
            		function (event:Event):void 
            		{
            			comboJobType.enabled = true;
            		});
            	service.addEventListener("jobTypesLoadFailed", 
            		function (event:Event):void 
            		{
            			comboJobType.enabled = false;
            		});
            	jobTypes = service.getAll();
            	
            }
            
            private function btnCloseClickHandler(event:CloseEvent):void 
            {
                if (!isBusy)
                    close();
            }
            
			private function isFormValid():Boolean
			{
				var result:Boolean = true;
				
				vName.enabled = true;
				if (vName.validate().type == ValidationResultEvent.INVALID)
					result = false;
				
				return result;
			}

			private function onSaveClick():void 
			{
				if (!isFormValid())
					return;
				
				var newType:LeadType =  leadType.prepareToSend();
				
				newType.Name = txtName.text;
				newType.QbJobTypeRecordId = JobType(comboJobType.selectedItem).IdStr;
				newType.IsActive = cbIsActive.selected;
				
				var view:UIComponent = this;
				view.enabled = false;
				LeadTypeService.getInstance().saveLeadType(newType).addResponder(
					new mx.rpc.Responder(
						function (event:ResultEvent):void 
						{
							view.enabled = true;
							leadType.applyFields(event.result as LeadType);
							
							dispatchEvent(new LeadTypeEvent(LeadTypeEvent.LEAD_TYPE_SAVED, leadType));
							close();
						},
						function (event:FaultEvent):void 
						{
							view.enabled = true;
							Alert.show(event.fault.message);
						}));
			}

			private function onCancelClick():void 
			{
				close();
			}
			
			private function onComboChange():void 
			{
				var jobType:JobType = comboJobType.selectedItem as JobType;
				if (jobType != null && StringUtil.trim(txtName.text).length == 0)
					txtName.text = jobType.Name;
			}
			
        ]]>
    </mx:Script>

	<mx:StringValidator id="vName" source="{txtName}" property="text" required="true" enabled="false"/>
	
	<mx:Form width="100%" 
		paddingLeft="20" paddingRight="20" paddingTop="20" paddingBottom="20">
		<mx:FormItem label="Lead Type" width="100%" required="true" fontSize="12">
			<mx:TextInput id="txtName" width="100%" text="{leadType.Name}"/>
		</mx:FormItem>
		<mx:FormItem label="based on" width="100%" required="true" fontSize="12">
			<controls:ComboBox id="comboJobType" width="100%" 
				dataProvider="{jobTypes}" labelField="Name" enabled="false"
				value="{leadType.QbJobTypeRecordId}" valueField="IdStr" 
				change="onComboChange()"/>
		</mx:FormItem>
		<mx:FormItem label="" width="100%" required="true" fontSize="12">
			<mx:CheckBox id="cbIsActive" selected="{leadType.IsActive}" label="Is Active"/>
		</mx:FormItem>
	</mx:Form>
	
    <mx:ControlBar horizontalAlign="center" width="100%"  enabled="{!isBusy}">
		<mx:Spacer width="100%"/>
		<mx:Button label="Ok" click="onSaveClick()"/>
        <mx:LinkButton label="Cancel" click="onCancelClick()"/>
    </mx:ControlBar>
</mx:TitleWindow>
