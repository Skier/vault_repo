<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical"
	width="600"  
    title="Create Owner" close="btnCloseClickHandler(event)" xmlns:lead="com.dalworth.servman.main.lead.*" xmlns:controls="com.affilia.controls.*"
    xmlns:containers="com.arc90.flexlib.containers.*" xmlns:voice="com.affilia.voice.*" xmlns:user="com.dalworth.servman.main.owner.setting.user.*">
    
    <mx:Metadata>
        [Event(name="leadSave", type="com.dalworth.servman.events.LeadEvent")]
    </mx:Metadata>

    <mx:Script>
        <![CDATA[
        	import com.dalworth.servman.events.OwnerEvent;
        	import com.dalworth.servman.service.OwnerService;
        	import com.dalworth.servman.domain.Owner;
        	import com.dalworth.servman.service.BusinessPartnerService;
        	import mx.events.ValidationResultEvent;
        	import com.dalworth.servman.events.BusinessPartnerEvent;
        	import com.dalworth.servman.domain.SalesRep;
        	import com.dalworth.servman.domain.User;
        	import com.dalworth.servman.domain.BusinessPartner;
        	import com.dalworth.servman.main.MainAppModel;
        	import com.dalworth.servman.main.owner.OwnerModel;
        	import com.dalworth.servman.domain.LeadStatus;
        	import mx.controls.Alert;
        	import mx.rpc.events.FaultEvent;
        	import com.dalworth.servman.events.LeadEvent;
        	import mx.rpc.events.ResultEvent;
        	import com.dalworth.servman.service.LeadService;
        	import mx.core.UIComponent;
        	import mx.collections.ArrayCollection;
        	import mx.events.CloseEvent;
        	import com.dalworth.servman.domain.Lead;
            import mx.managers.PopUpManager;
            import mx.rpc.Responder;
            
            [Bindable] private var isBusy:Boolean = false;
            [Bindable] private var isReadOnly:Boolean = false;
            
			private var _currentOwner:Owner;
			[Bindable]
			public function get currentOwner():Owner { return _currentOwner; }
			public function set currentOwner(value:Owner):void 
			{
				_currentOwner = value;
			}
			
            public static function open(parent:DisplayObject, currentOwner:Owner, isReadOnly:Boolean = false, modal:Boolean = true):OwnerCreatePopup
            {
                var popup:OwnerCreatePopup = new OwnerCreatePopup();
                
                popup.currentOwner = currentOwner;
                popup.isReadOnly = isReadOnly;

                PopUpManager.addPopUp(popup, parent, modal);
                PopUpManager.centerPopUp(popup);
                
                return popup;
            }

            public function close():void
            {
                PopUpManager.removePopUp(this);
            }
            
            private function btnCloseClickHandler(event:CloseEvent):void 
            {
                if (!isBusy)
                    close();
            }
            
			private function isFormValid():Boolean
			{
				var result:Boolean = true;
				
				vName.enabled = true;
				if (vName.validate().type == ValidationResultEvent.INVALID)
					result = false;
				
				if (!viewUserInfo.isValid())
					result = false;

				return result;
			}

			private function onSaveClick():void 
			{
				if (!isFormValid())
					return;
				
				var newOwner:Owner = currentOwner.prepareToSend();
				
				newOwner.ShowAs = txtName.text;
				newOwner.IsActive = cbIsActive.selected;
				
				newOwner.RelatedUser = viewUserInfo.getUser();
				newOwner.RelatedUser.Name = txtName.text;
				
				var view:UIComponent = this;
				view.enabled = false;
				OwnerService.getInstance().saveOwner(newOwner).addResponder(
					new mx.rpc.Responder(
						function (event:ResultEvent):void 
						{
							view.enabled = true;
							var result:Owner = event.result as Owner
							currentOwner.applyFields(result);
							currentOwner.RelatedUser = result.RelatedUser;
							dispatchEvent(new OwnerEvent(OwnerEvent.OWNER_SAVE, currentOwner));
							
							close();
						},
						function (event:FaultEvent):void 
						{
							view.enabled = true;
							Alert.show(event.fault.message);
						}));
			}

			private function onCancelClick():void 
			{
				close();
			}
			
        ]]>
    </mx:Script>

	<mx:StringValidator id="vName" source="{txtName}" property="text" required="{currentOwner.Id == 0}" enabled="false"/>
	
	<mx:VBox width="100%" height="100%" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10"
		borderColor="#999999" borderStyle="solid" fontSize="12">
		<mx:Form width="100%" minWidth="250" labelWidth="120"
			paddingLeft="0" paddingRight="0" paddingTop="0" paddingBottom="0">
			<mx:FormItem label="Owner Name" width="100%" required="true">
				<mx:TextInput id="txtName" width="100%" text="{currentOwner.RelatedUser.Name}"/>
				<mx:CheckBox id="cbIsActive" label="is active" selected="{currentOwner.IsActive}"/>
			</mx:FormItem>
		</mx:Form>

		<user:UserEditView id="viewUserInfo" width="100%" user="{currentOwner.RelatedUser}"/>
	</mx:VBox>
	
    <mx:ControlBar horizontalAlign="center" width="100%"  enabled="{!isBusy}">
		<mx:Spacer width="100%"/>
		<mx:Button label="Create" click="onSaveClick()"/>
        <mx:LinkButton label="Cancel" click="onCancelClick()"/>
    </mx:ControlBar>
</mx:TitleWindow>
