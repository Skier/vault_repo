<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
	paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5">

    <mx:Metadata>
        [Event(name="projectTypeCreated", type="flash.events.Event")]
    </mx:Metadata>

	<mx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			import com.dalworth.servman.service.QbItemService;
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import com.dalworth.servman.service.ProjectTypeService;
			import mx.collections.ArrayCollection;
			import com.dalworth.servman.domain.ProjectType;
			import com.dalworth.servman.domain.QbItem;
			import com.dalworth.servman.main.owner.OwnerModel;
			import com.dalworth.servman.domain.Customer;
			
			import mx.rpc.Responder;
			
			[Bindable]
			private var availableQbItems:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var selectedQbItems:ArrayCollection = new ArrayCollection();

			[Bindable]
			private var qbItems:ArrayCollection;
			
			private var _projectType:ProjectType;
			[Bindable]
			public function get projectType():ProjectType { return _projectType; }
			public function set projectType(value:ProjectType):void 
			{
				_projectType = value;
				if (_projectType)
					initItems();
			}
			
			private function initItems():void 
			{
				qbItems = OwnerModel.getInstance().items;
				
				var view:UIComponent = this;
				view.enabled = false;
				QbItemService.getInstance().getByProjectTypeId(projectType.Id).addResponder(
					new mx.rpc.Responder(
						function (event:ResultEvent):void 
						{
							selectedQbItems.source = event.result as Array;
							view.enabled = true;
							refreshItems();
						},
						function (event:FaultEvent):void 
						{
							view.enabled = true;
							Alert.show(event.fault.message);
						}));
				
			}
			
			private function refreshItems():void 
			{
				availableQbItems.removeAll();
				for each (var item:QbItem in qbItems) 
				{
					if (!isContains(item, selectedQbItems))
						availableQbItems.addItem(item);
				}
			}
			
			private function isContains(item:QbItem, collection:ArrayCollection):Boolean 
			{
				for each (var i:QbItem in collection)
				{
					if (i.ListId == item.ListId)
						return true;
				}
				return false;
			}
			
			private function onUpdateClick():void 
			{
				var newProjectType:ProjectType = projectType.prepareToSend();
				
				newProjectType.Name = txtShowAs.text;
				
				var view:UIComponent = this;
				view.enabled = false;
				ProjectTypeService.getInstance().saveProjectType(newProjectType, selectedQbItems.source).addResponder(
					new mx.rpc.Responder(
						function (event:ResultEvent):void 
						{
							view.enabled = true;
							projectType.applyFields(event.result as ProjectType);
							dispatchEvent(new Event("projectTypeCreated"));
						},
						function (event:FaultEvent):void 
						{
							view.enabled = true;
							Alert.show(event.fault.message);
						}));
			}
			
			private function addItem():void 
			{
				var item:QbItem = lstAvailable.selectedItem as QbItem;
				availableQbItems.removeItemAt(availableQbItems.getItemIndex(item));
				selectedQbItems.addItem(item);
			}
			
			private function removeItem():void 
			{
				var item:QbItem = lstSelected.selectedItem as QbItem;
				selectedQbItems.removeItemAt(selectedQbItems.getItemIndex(item));
				availableQbItems.addItem(item);
			}
			
		]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%" 
		paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5"
		backgroundColor="#ffffcc">
		<mx:HBox width="100%">
			<mx:Label text="Project Type:"/>
			<mx:TextInput id="txtShowAs" width="100%" text="{projectType.Name}"/>
		</mx:HBox>
		
		<mx:HBox width="100%" height="100%">
			<mx:VBox width="100%" height="100%">
				<mx:Label text="Available Items:"/>
				<mx:List id="lstAvailable" width="100%" height="100%" dataProvider="{availableQbItems}" labelField="Name"
					allowDragSelection="true"/>
			</mx:VBox>
			
			<mx:VBox height="100%" verticalAlign="middle" horizontalAlign="center">
				<mx:Button width="30" height="20" cornerRadius="2" label="&gt;" click="addItem()" enabled="{lstAvailable.selectedItem}"/>
				<mx:Button width="30" height="20" cornerRadius="2" label="&lt;" click="removeItem()" enabled="{lstSelected.selectedItem}"/>
			</mx:VBox>

			<mx:VBox width="100%" height="100%">
				<mx:Label text="Selected Items:"/>
				<mx:List id="lstSelected" width="100%" height="100%" dataProvider="{selectedQbItems}" labelField="Name"/>
			</mx:VBox>
		</mx:HBox>
	</mx:VBox>
	
	<mx:VBox height="100%" verticalAlign="top">
		<mx:Button width="100" label="{projectType.Id == 0 ? 'Create' : 'Update'}" click="onUpdateClick()" enabled="{projectType.Id != 1}"/>
	</mx:VBox>
</mx:HBox>
