<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical"
	width="800" height="700" 
    title="Lead Edit" close="btnCloseClickHandler(event)" xmlns:lead="com.dalworth.servman.main.lead.*" xmlns:controls="com.affilia.controls.*"
    initialize="onInit()" xmlns:containers="com.arc90.flexlib.containers.*" xmlns:voice="com.affilia.voice.*">
    
    <mx:Metadata>
        [Event(name="leadSave", type="com.dalworth.servman.events.LeadEvent")]
    </mx:Metadata>

    <mx:Script>
        <![CDATA[
        	import com.dalworth.servman.service.registry.SalesRepRegistry;
        	import com.dalworth.servman.service.registry.UserRegistry;
        	import com.dalworth.servman.service.registry.BusinessPartnerRegistry;
        	import com.dalworth.servman.service.registry.LeadTypeRegistry;
        	import com.dalworth.servman.domain.LeadType;
        	import com.dalworth.servman.domain.SalesRep;
        	import com.dalworth.servman.domain.User;
        	import com.dalworth.servman.domain.BusinessPartner;
        	import com.dalworth.servman.main.MainAppModel;
        	import com.dalworth.servman.main.owner.OwnerModel;
        	import com.dalworth.servman.domain.LeadStatus;
        	import mx.controls.Alert;
        	import mx.rpc.events.FaultEvent;
        	import com.dalworth.servman.events.LeadEvent;
        	import mx.rpc.events.ResultEvent;
        	import com.dalworth.servman.service.LeadService;
        	import mx.core.UIComponent;
        	import mx.collections.ArrayCollection;
        	import mx.events.CloseEvent;
        	import com.dalworth.servman.domain.Lead;
            import mx.managers.PopUpManager;
            import mx.rpc.Responder;
            
            [Bindable] private var isBusy:Boolean = false;
            [Bindable] private var isReadOnly:Boolean = false;
            
			[Bindable] public var canSelectBusinessPartner:Boolean = true;
			[Bindable] public var canSelectSalesRep:Boolean = true;
			[Bindable] public var canSelectAssignedUser:Boolean = true;
			[Bindable] public var canViewEmployeeNotes:Boolean = true;
			[Bindable] public var canEditEmployeeNotes:Boolean = true;
			[Bindable] public var canEditCustomerNotes:Boolean = true;
			[Bindable] public var canUpdate:Boolean = true;
			[Bindable] public var canCancel:Boolean = true;
			[Bindable] public var canConvertToProject:Boolean = true;
			
			[Bindable] private var salesReps:ArrayCollection = new ArrayCollection();
			[Bindable] private var businessPartners:ArrayCollection = new ArrayCollection();
			[Bindable] private var users:ArrayCollection = new ArrayCollection();
			[Bindable] private var leadTypes:ArrayCollection = new ArrayCollection();
			
			[Bindable] private var projects:ArrayCollection;
			
			public var currentBusinessPartner:BusinessPartner;
			
			private var _lead:Lead;
			[Bindable]
			public function get lead():Lead { return _lead; }
			public function set lead(value:Lead):void 
			{
				_lead = value;
			}
			
            public static function open(parent:DisplayObject, lead:Lead, businessPartner:BusinessPartner = null, isReadOnly:Boolean = false, modal:Boolean = true):LeadEditPopup
            {
                var popup:LeadEditPopup = new LeadEditPopup();
                
                popup.lead = lead;
                popup.currentBusinessPartner = businessPartner;
                popup.isReadOnly = isReadOnly;

                PopUpManager.addPopUp(popup, parent, modal);
                PopUpManager.centerPopUp(popup);
                
                return popup;
            }

            public function close():void
            {
				sndPlayer.stopPlaying();            	
                PopUpManager.removePopUp(this);
            	dispatchEvent(new Event("closePopup"));
            }
            
            private function btnCloseClickHandler(event:CloseEvent):void 
            {
                if (!isBusy)
                    close();
            }
            
			private function onInit():void 
			{
				businessPartners.removeAll();
				businessPartners.addItem({ShowAs:""});
				businessPartners.source = businessPartners.source.concat(BusinessPartnerRegistry.getInstance().getAll().source);
				
				leadTypes = LeadTypeRegistry.getInstance().getAll();

				users.removeAll();
				users.addItem({Name:""});
				users.source = users.source.concat(UserRegistry.getInstance().getAll().source);
				
				salesReps.removeAll();
				salesReps.addItem({ShowAs:""});
				salesReps.source = salesReps.source.concat(SalesRepRegistry.getInstance().getAll().source);
			}

			private function fillLeadFromForm(lead:Lead):void 
			{
				if (currentBusinessPartner != null)
					lead.BusinessPartnerId = currentBusinessPartner.Id;
					
				if (lead.Id == 0)
				{
					lead.DateCreated = new Date();
					lead.CreatedByUserId = MainAppModel.getInstance().currentUser.Id;
					lead.LeadStatusId = LeadStatus.STATUS_NEW_ID;
				}

				lead.LeadTypeId = LeadType(comboProjectType.selectedItem).Id;
				lead.FirstName = txtFirstName.text;
				lead.LastName = txtLastName.text;
				lead.Phone = txtPhone.text;
				lead.CustomerNotes = txtCustomerNotes.text;
				
				lead.Address = txtAddress.text;
				
				if (comboAssignedUser.selectedItem != null && comboAssignedUser.selectedIndex > 0)
					lead.AssignedToUser = User(comboAssignedUser.selectedItem).Id;
				else 
					lead.AssignedToUser = 0;
					
				if (comboSalesRep.selectedItem != null && comboSalesRep.selectedIndex > 0)
					lead.SalesRepId = SalesRep(comboSalesRep.selectedItem).Id;
				else 
					lead.SalesRepId = 0;
					
				if (comboBusinessPartner.selectedItem != null && comboBusinessPartner.selectedIndex > 0)
					lead.BusinessPartnerId = BusinessPartner(comboBusinessPartner.selectedItem).Id;
				else 
					lead.BusinessPartnerId = 0;
			}

			private function onSaveClick():void
			{
				var newLead:Lead = lead.prepareToSend();
				
				fillLeadFromForm(newLead);
				
				isBusy = true;
				LeadService.getInstance().saveLead(newLead).addResponder(
					new mx.rpc.Responder(
						function (event:ResultEvent):void 
						{
							isBusy = false;
							lead.applyFields(event.result as Lead);
							dispatchEvent(new LeadEvent(LeadEvent.LEAD_SAVE, lead));
							close();
						},
						function (event:FaultEvent):void 
						{
							isBusy = false;
							Alert.show(event.fault.message);
						}));
			}
			
			private function onCancelLeadClick():void
			{
				var newLead:Lead = lead.prepareToSend();
				
				newLead.LeadStatusId = (newLead.LeadStatusId == LeadStatus.STATUS_NEW_ID) 
											? LeadStatus.STATUS_CANCELLED_ID 
											: LeadStatus.STATUS_NEW_ID;
				
				isBusy = true;
				LeadService.getInstance().saveLead(newLead).addResponder(
					new mx.rpc.Responder(
						function (event:ResultEvent):void 
						{
							isBusy = false;
							lead.applyFields(event.result as Lead);
							dispatchEvent(new LeadEvent(LeadEvent.LEAD_SAVE, lead));
							close();
						},
						function (event:FaultEvent):void 
						{
							isBusy = false;
							Alert.show(event.fault.message);
						}));
			}
			
			private function onConvertToProjectClick():void 
			{
			}
			
			private function onCancelClick():void 
			{
				close();
			}
			
			private function onAddNewProject():void 
			{
			}
			
        ]]>
    </mx:Script>

	<mx:VBox width="100%" height="100%" enabled="{!isBusy}"
		paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5"
		borderColor="#999999" backgroundColor="#ffffee" borderStyle="solid" cornerRadius="2">
		
		<lead:LeadStatusLine lead="{lead}" leadChangeHistory="{leadChangeHistory.leadChangeHistory}" 
			width="100%" borderColor="#CCCCCC" borderStyle="solid" horizontalGap="0"
			visible="{lead.Id != 0}" includeInLayout="{lead.Id != 0}"/>
	
		<mx:TabNavigator width="100%" paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5" borderColor="#DDDDDD" borderStyle="solid"
			visible="{lead.Id != 0}" includeInLayout="{lead.Id != 0}">
			<lead:LeadChangeHistoryView id="leadChangeHistory" width="100%" label="Lead Change History" lead="{lead}"/>
			
			<mx:VBox label="Related Projects" width="100%" height="100%"  enabled="{true}" horizontalAlign="right">
				<mx:DataGrid id="dgProjects" dataProvider="{projects}" width="100%" height="100%">
					<mx:columns>
						<mx:DataGridColumn headerText="Type" width="50"/>
						<mx:DataGridColumn headerText="Customer" width="150"/>
						<mx:DataGridColumn headerText="Notes"/>
					</mx:columns>
				</mx:DataGrid>
	
				<mx:Button label="Add new Projects" click="onAddNewProject()"/>
			</mx:VBox>
		</mx:TabNavigator>

		
		<voice:SoundPlayer id="sndPlayer" width="100%" 
			voiceFileUrl="{lead.RelatedPhoneCall.RecordingUrl != null ? (lead.RelatedPhoneCall.RecordingUrl + '.mp3') : null}"
			visible="{lead.RelatedPhoneCall != null &amp;&amp; lead.RelatedPhoneCall.RecordingUrl != null}" 
			includeInLayout="{lead.RelatedPhoneCall != null &amp;&amp; lead.RelatedPhoneCall.RecordingUrl != null}"/>

		<mx:VBox width="100%" backgroundColor="#FFFFCC"
			paddingLeft="4" paddingRight="4" paddingTop="2" paddingBottom="2">
			<mx:HBox width="100%" verticalAlign="middle" horizontalGap="5">
				<mx:HBox width="100%" verticalAlign="middle" horizontalGap="5">
					<mx:Label text="Type of Lead" fontSize="12" width="120" textAlign="right"/>
					<controls:ComboBox id="comboProjectType" width="100%" dataProvider="{leadTypes}" labelField="Name"
						value="{lead.LeadTypeId}" valueField="Id"/>
				</mx:HBox>
			
				<mx:HBox width="100%" verticalAlign="middle" horizontalGap="5"
					visible="{canSelectAssignedUser}" includeInLayout="{canSelectAssignedUser}">
					<mx:Label text="Assigned To:" fontSize="12" width="120" textAlign="right"/>
					<controls:ComboBox id="comboAssignedUser" width="100%" dataProvider="{users}" labelField="Name"
						value="{lead.AssignedToUser}" valueField="Id"/>
				</mx:HBox>
			</mx:HBox>
			
			<mx:HBox width="100%" verticalAlign="middle" horizontalGap="5"
				visible="{canSelectBusinessPartner || canSelectSalesRep}" includeInLayout="{canSelectBusinessPartner || canSelectSalesRep}">
				<mx:HBox width="100%" verticalAlign="middle" horizontalGap="5"
					visible="{canSelectSalesRep}" includeInLayout="{canSelectSalesRep}">
					<mx:Label text="Sales Rep." fontSize="12" width="120" textAlign="right"/>
					<controls:ComboBox id="comboSalesRep" width="100%" dataProvider="{salesReps}" labelField="ShowAs"/>
				</mx:HBox>
	
				<mx:HBox width="100%" verticalAlign="middle" horizontalGap="5"
					visible="{canSelectBusinessPartner}" includeInLayout="{canSelectBusinessPartner}">
					<mx:Label text="Business Partner" fontSize="12" width="120" textAlign="right"/>
					<controls:ComboBox id="comboBusinessPartner" width="100%" dataProvider="{businessPartners}" labelField="ShowAs"
						value="{lead.BusinessPartnerId}" valueField="Id"/>
				</mx:HBox>
			</mx:HBox>
		</mx:VBox>
		
		<mx:HBox width="100%" backgroundColor="#eeeeee" borderColor="#ffffdd" borderStyle="solid" cornerRadius="2" horizontalGap="5"
			paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5">
			<mx:VBox width="100%" verticalGap="5">
				<mx:HBox width="100%" verticalAlign="middle" horizontalGap="5">
					<mx:Label text="First Name" fontSize="12" width="115" textAlign="right"/>
					<mx:TextInput id="txtFirstName" text="{lead.FirstName}" width="100%"/>
				</mx:HBox>

				<mx:HBox width="100%" verticalAlign="middle" horizontalGap="5">
					<mx:Label text="Last Name" fontSize="12" width="115" textAlign="right"/>
					<mx:TextInput id="txtLastName" text="{lead.LastName}" width="100%"/>
				</mx:HBox>

				<mx:HBox width="100%" verticalAlign="middle" horizontalGap="5">
					<mx:Label text="Phone" fontSize="12" width="115" textAlign="right"/>
					<mx:TextInput id="txtPhone" text="{lead.Phone}" width="100%"/>
				</mx:HBox>
			</mx:VBox>

			<mx:VBox width="250" height="100%" verticalGap="0">
				<mx:Label text="Address:" fontSize="12"/>
				<mx:TextInput id="txtAddress" text="{lead.Address}" width="100%" height="100%"/>
			</mx:VBox>
		</mx:HBox>

		<mx:VBox width="100%" height="100%" verticalGap="5">
			<mx:Label text="Customer Notes:"/>
			<mx:TextArea id="txtCustomerNotes" text="{lead.CustomerNotes}" width="100%" height="100%"
				editable="{canEditCustomerNotes}"/>
		</mx:VBox>
	</mx:VBox>

    <mx:ControlBar horizontalAlign="center" width="100%"  enabled="{!isBusy}">
		<mx:Button label="Convert To Project" click="onConvertToProjectClick()" 
			visible="{canConvertToProject}" includeInLayout="{canConvertToProject}"
			enabled="{lead.Id != 0}"/>
		<mx:Spacer width="100%"/>
		<mx:Button label="{lead.LeadStatusId == LeadStatus.STATUS_NEW_ID ? 'Cancel Lead' : 'Undo Cancel'}" click="onCancelLeadClick()" 
			visible="{canCancel}" includeInLayout="{canCancel}"
			enabled="{lead.Id != 0}"/>
		<mx:Button label="{lead.Id == 0 ? 'Create' : 'Update'}" click="onSaveClick()" enabled="{canUpdate}"/>
        <mx:Button label="Cancel" click="onCancelClick()"/>
    </mx:ControlBar>
</mx:TitleWindow>
