<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:customer="com.dalworth.servman.main.owner.setting.customer.*" xmlns:projectType="com.dalworth.servman.main.owner.setting.projectType.*"
	xmlns:businessPartner="com.dalworth.servman.main.owner.setting.businessPartner.*" xmlns:leadTypes="com.dalworth.servman.main.owner.setting.leadTypes.*" xmlns:owner="com.dalworth.servman.main.owner.setting.owner.*" xmlns:salesRep="com.dalworth.servman.main.owner.setting.salesRep.*" xmlns:customerServiceRep="com.dalworth.servman.main.owner.setting.customerServiceRep.*">

	<mx:Script>
		<![CDATA[
			import com.dalworth.servman.main.breadCrumb.BreadCrumbModel;
			import mx.controls.Alert;
			import mx.events.ItemClickEvent;
			
			[Embed(source="/assets/icons16/control.png")]
			[Bindable]
			private var iconControlRight:Class;
			
			[Embed(source="/assets/icons16/control_180.png")]
			[Bindable]
			private var iconControlLeft:Class;
			
			[Bindable]
			private var model:OwnerSettingModel = OwnerSettingModel.getInstance();
			
			private var controller:OwnerSettingController;
 			
			public function init():void 
			{
				controller = new OwnerSettingController(this);
				addEventListener(OwnerSettingModel.MODEL_INITED, onModelInited);
				controller.initModel();
				if (viewLeadTypes)
					viewLeadTypes.init();
			}
			
			private function onCreate():void 
			{
				vsSetting.selectedChild = viewLeadTypes;
				viewLeadTypes.init();
			}
			
			private function onModelInited(event:Event):void 
			{
				trace("Settings model inited");
			}

			private function onMenuItemClick(event:ItemClickEvent):void 
			{
				switch (event.index) 
				{
					case 0:
						viewLeadTypes.init();
						break;

					case 1:
						viewBusinessPartners.init();
						break;

					case 2:
						viewOwners.init();
						break;

					case 3:
						viewSalesReps.init();
						break;

					case 4:
						viewCustomerServiceReps.init();
						break;

				}
			}

			private var leftPanelWidth:Number;
			private function toggleLeftPanel():void 
			{
				if (boxLeftPanel.width == 1)
				{
					boxLeftPanel.width = leftPanelWidth;
				} else 
				{
					leftPanelWidth = boxLeftPanel.width;
					boxLeftPanel.width = 1;
				}
					
			}
			
		]]>
	</mx:Script>

	<mx:HBox width="100%" height="100%" horizontalGap="-1">
		<mx:VBox id="boxLeftPanel" height="100%" backgroundColor="#FFFFEE" width="180"
			borderColor="#CCCCCC" borderStyle="solid">
			<mx:LinkBar direction="vertical"  
					dataProvider="{vsSetting}" labelField="label"
					itemClick="onMenuItemClick(event)"/>
		</mx:VBox>
		
		<mx:Button id="btnCollapseLeft" 
			width="9" height="100%" cornerRadius="0" paddingLeft="0" paddingRight="0"
			toggle="true" horizontalCenter="0" verticalCenter="0" label=""
			icon="{btnCollapseLeft.selected ? iconControlRight : iconControlLeft}"
			click="toggleLeftPanel()"/>

		<mx:ViewStack id="vsSetting" width="100%" height="100%">
			<leadTypes:LeadTypesView id="viewLeadTypes" width="100%" height="100%" label="Lead Types"/>
			<businessPartner:BusinessPartnersView id="viewBusinessPartners" width="100%" height="100%" label="Business Partners"/>
			<owner:OwnersView id="viewOwners" width="100%" height="100%" label="Owners"/>
			<salesRep:SalesRepsView id="viewSalesReps" width="100%" height="100%" label="Sales Reps"/>
			<customerServiceRep:CustomerServiceRepsView id="viewCustomerServiceReps" width="100%" height="100%" label="Customer Service Reps"/>
		</mx:ViewStack>
	</mx:HBox>
</mx:VBox>
