<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml">
	
	<mx:Script>
		<![CDATA[
			import com.dalworth.servman.service.registry.LeadTypeRegistry;
			import com.dalworth.servman.service.registry.BusinessPartnerRegistry;
			import com.dalworth.servman.domain.LeadType;
			import com.dalworth.servman.service.LeadTypeService;
			import mx.events.ListEvent;
			import mx.events.ItemClickEvent;
			import com.dalworth.servman.service.BusinessPartnerService;
			import com.dalworth.servman.domain.BusinessPartner;
			import com.dalworth.servman.domain.LeadStatus;
			import com.dalworth.servman.main.lead.LeadEditPopup;
			import com.dalworth.servman.events.LeadEvent;
			import mx.controls.Alert;
			import com.dalworth.servman.domain.Lead;
			
			private static const COLUMN_PARTNER:String = "columnPartner";
			private static const COLUMN_TYPE:String = "columnType";
			private static const COLUMN_NAME:String = "columnName";
			private static const COLUMN_PHONE:String = "columnPhone";
			private static const COLUMN_NOTES:String = "columnNotes";
			private static const COLUMN_STATUS:String = "columnStatus";
			
			[Bindable]
			private var model:EmployeeLeadsModel = EmployeeLeadsModel.getInstance();
			
			private var controller:EmployeeLeadsController;
			
			public function init():void 
			{
				controller = new EmployeeLeadsController(this);
				addEventListener(EmployeeLeadsModel.MODEL_INITED, onModelInited);
				controller.initModel();
			}
			
			private function onModelInited(event:Event):void 
			{
				trace("Leads model inited");
			}
			
			private function onNewClick():void 
			{
				 var lead:Lead = new Lead();
				 lead.LeadStatusId = LeadStatus.STATUS_NEW_ID;
				 openLead(lead);
			}
			
			private function openLead(lead:Lead, isReadOnly:Boolean = false):void 
			{
				var popup:LeadEditPopup = LeadEditPopup.open(this, lead, null, isReadOnly, true);
				//popup.canEditCustomerNotes = false;
				//popup.canSelectBusinessPartner = false;
				//popup.canSelectEmployee = false;
				popup.addEventListener(LeadEvent.LEAD_SAVE, onLeadSave); 
			}
			
			private var _selectedLead:Lead;
			[Bindable]
			private function get selectedLead():Lead { return _selectedLead; }
			private function set selectedLead(value:Lead):void 
			{
				_selectedLead = value;
				controller.refreshProjects(value);
			} 
			
			private function getBusinessPartnerName(id:int):String 
			{
				return BusinessPartner(BusinessPartnerRegistry.getInstance().getLocal(id)).ShowAs;
			}
			
			private function getLabel(item:Object, column:DataGridColumn):String 
			{
				if (item is Lead) 
				{
					switch (column.dataField) 
					{
						case COLUMN_PARTNER :
							return getBusinessPartnerName(Lead(item).BusinessPartnerId);
						
						case COLUMN_TYPE :
							return LeadTypeRegistry.getInstance().getLocal(Lead(item).LeadTypeId).Name;
						
						case COLUMN_NAME :
							return (Lead(item).FirstName + " " + Lead(item).LastName);
						
						case COLUMN_PHONE :
						return (Lead(item).Phone);
						
						case COLUMN_NOTES :
						return (Lead(item).CustomerNotes);
						
						case COLUMN_STATUS :
						return (Lead(item).LeadStatusId.toString());
						
						default :
						return "";
					}
				} else 
				{
					return "bad object";
				}
			}
			
			private function onLeadSave(event:LeadEvent):void 
			{
				var lead:Lead = event.lead;
				if (!model.leads.contains(lead))
					model.leads.addItem(lead);
				var idx:int = model.leads.getItemIndex(lead);
				dgLeads.selectedIndex = idx;
				dgLeads.scrollToIndex(idx);
			}
			
			private function onBusinessPartnerChange():void 
			{
			}
			
			private function onStatusNewChange():void 
			{
			}
			
			private function onStatusCancelledChange():void 
			{
			}
			
			private function onStatusConvertedChange():void 
			{
			}
			
			private function onLeadsDoubleClick(event:ListEvent):void 
			{
				if (dgLeads.selectedItem != null)
				{
					var lead:Lead = dgLeads.selectedItem as Lead;
					openLead(lead);
				}
			}
			
		]]>
	</mx:Script>
	
	<mx:VDividedBox width="100%" height="100%" verticalGap="5">
		<mx:VBox width="100%" height="100%">
			<mx:HBox width="100%" verticalAlign="middle"
				backgroundColor="#ffffdd" borderColor="663300" borderStyle="solid" cornerRadius="1"
				paddingLeft="2" paddingRight="2" paddingTop="2" paddingBottom="2">
				<mx:HBox verticalAlign="middle">
					<mx:Label text="Business Partner:"/>
					<mx:ComboBox id="comboBusinessPartner" dataProvider="{model.localBusinessPartners}" change="onBusinessPartnerChange()"
						labelField="Name"/>
				</mx:HBox>
				<mx:Spacer width="100%"/>
				<mx:HBox verticalAlign="middle">
					<mx:Label text="Status:"/>
					<mx:CheckBox selected="true" label="new" change="onStatusNewChange()"/>
					<mx:CheckBox selected="true" label="cancelled" change="onStatusCancelledChange()"/>
					<mx:CheckBox selected="true" label="converted" change="onStatusConvertedChange()"/>
				</mx:HBox>
			</mx:HBox>
			
			<mx:DataGrid id="dgLeads" dataProvider="{model.leads}" width="100%" height="100%" minWidth="300"
				sortableColumns="false" draggableColumns="false" editable="false"
				doubleClickEnabled="true" itemDoubleClick="onLeadsDoubleClick(event)">
				<mx:columns>
					<mx:DataGridColumn headerText="Business Partner" labelFunction="getLabel" dataField="{COLUMN_PARTNER}" width="150" minWidth="50"/>
					<mx:DataGridColumn headerText="Type" labelFunction="getLabel" dataField="{COLUMN_TYPE}" width="150" minWidth="50"/>
					<mx:DataGridColumn headerText="Name" labelFunction="getLabel" dataField="{COLUMN_NAME}" width="150" minWidth="50"/>
					<mx:DataGridColumn headerText="Phone" labelFunction="getLabel" dataField="{COLUMN_PHONE}" width="150" minWidth="50"/>
					<mx:DataGridColumn headerText="Notes" labelFunction="getLabel" dataField="{COLUMN_NOTES}" minWidth="150"/>
					<mx:DataGridColumn headerText="" labelFunction="getLabel" dataField="{COLUMN_STATUS}" width="50" minWidth="50"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:VBox>
<!--		
		<mx:TabNavigator width="100%" height="300"
			visible="{viewLeadView.lead != null}" includeInLayout="{viewLeadView.lead != null}">
			<lead:LeadView id="viewLeadView" lead="{dgLeads.selectedItem as Lead}" backgroundColor="#ffffff" 
				width="100%" height="100%" label="Lead Details"
				leadSave="onLeadSave(event)"/>
			
			<mx:VBox width="100%" height="100%" label="Related Projects">
				<mx:Label text="Information about created projects from current Lead" fontSize="14"/>
			</mx:VBox>
		</mx:TabNavigator>			
-->
	</mx:VDividedBox>
	
	<mx:VBox height="100%" width="120">
		<mx:Button width="100%" label="New Lead" click="onNewClick()"/>
		<mx:Text width="100%" height="100%"/>
	</mx:VBox>
</mx:HBox>
