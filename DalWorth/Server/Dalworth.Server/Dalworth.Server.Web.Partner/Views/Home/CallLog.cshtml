@model Dalworth.Server.Web.Partner.Models.CallLog
@using Dalworth.Server.Web.Partner.Paging
@using Dalworth.Server.Web.Partner.Models

@{    
    ViewBag.Title = "Partner In Profit - Call Log";
    
    if (Model.PartnerId.HasValue){
        ViewBag.Header = Model.CallSource + " - ";
        if (!Model.ReportFilterId.HasValue){
            ViewBag.Header += "Calls";
        } else if (Model.ReportFilterId.Value == 1){
            ViewBag.Header += "Book transactions";
        }else if (Model.ReportFilterId.Value == 2){
            ViewBag.Header += "Non Lead calls";
        }else if (Model.ReportFilterId.Value == 3){
            ViewBag.Header += "Shopper transactions";
        }else if (Model.ReportFilterId.Value == 4){
            ViewBag.Header += "Cancelled orders";
        }else if (Model.ReportFilterId.Value == 5){
            ViewBag.Header += "In process orders";
        }else if (Model.ReportFilterId.Value == 6){
            ViewBag.Header += "Ad Source Calls";
        }else if (Model.ReportFilterId.Value == 7){
            ViewBag.Header += "Ad Source Bookings";
        }
            
    }
    else {
        ViewBag.Header = "Call Log";
    }

    ViewBag.BodyAttribute = @MvcHtmlString.Create("onload='OnDateRangePresetChanged()'");        
    ViewBag.ActiveTopMenu = "Home";
    ViewBag.ActiveSubMenu = "Call Log";    
    bool isOwner = PartnerMembershipProvider.GetCurrentUser().IsOwner;
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>

<script type="text/javascript" src="@Url.Content("~/Scripts/player/player.js")"></script>
<script type="text/javascript">
    var apiReadyHandler = function () {
        YAHOO.MediaPlayer.onProgress.subscribe(onProgressHandler)
    }

    var playerFlag = false;

    var onProgressHandler = function (param) {
        if (param.elapsed < 1000 && playerFlag == true) {            
            YAHOO.MediaPlayer.stop();
            playerFlag = false;
        }

        if (param.duration > 0 && param.elapsed > param.duration - 2000) {            
            YAHOO.MediaPlayer.play(YAHOO.MediaPlayer.controller.mediaengine.currentMedia, 0);
            playerFlag = true;
        }
    }

    YAHOO.MediaPlayer.onAPIReady.subscribe(apiReadyHandler);
</script>


<!--  date picker script -->
<link rel="stylesheet" href="@Url.Content("~/Content/datePicker.css")" type="text/css" />
<script src="@Url.Content("~/Scripts/date.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.datePicker.js")" type="text/javascript"></script>
<script type="text/javascript" charset="utf-8">
    $(function () {

        // initialise the "Select date" link
        $('#date-pick-start')
	.datePicker(
        // associate the link with a date picker
		{
		createButton: false,
		startDate: '01/01/2005',
		endDate: '31/12/2020'
}
	).bind(
        // when the link is clicked display the date picker
		'click',
		function () {
		    if (!document.getElementById("DateStart").disabled) {
		        var dateSeparated = $('#DateStart').attr('value').split("/")

		        var date = new Date();
		        if (dateSeparated.length == 3) {
		            date = new Date(dateSeparated[2], dateSeparated[0] - 1, dateSeparated[1])
		        }
		        
		        $('#date-pick-start').dpSetSelected(date.asString());		        
		        $(this).dpDisplay();
		    }
		    return false;
		}
	).bind(
        // when a date is selected update the SELECTs
		'dateSelected',
		function (e, selectedDate, $td, state) {
		    updateSelects(selectedDate);
		}
	).bind(
		'dpClosed',
		function (e, selected) {
		    updateSelects(selected[0]);
		}
	);

        var updateSelects = function (selectedDate) {
            var selectedDate = new Date(selectedDate);
            if (isNaN(selectedDate))
                $('#DateStart').attr('value', '');
            else
                $('#DateStart').attr('value', (selectedDate.getMonth() + 1) + '/' + selectedDate.getDate() + '/' + selectedDate.getFullYear());
        }
        // listen for when the selects are changed and update the picker
        $('#DateStart')
	.bind(
		'change',
		function () {
		}
	);

    });

</script>

<script type="text/javascript" charset="utf-8">
    $(function () {

        // initialise the "Select date" link
        $('#date-pick-end')
	.datePicker(
        // associate the link with a date picker
		{
		createButton: false,
		startDate: '01/01/2005',
		endDate: '31/12/2020'
}
	).bind(
        // when the link is clicked display the date picker
		'click',
		function () {
		    if (!document.getElementById("DateEnd").disabled) {
		        var dateSeparated = $('#DateEnd').attr('value').split("/")

		        var date = new Date();
		        if (dateSeparated.length == 3) {
		            date = new Date(dateSeparated[2], dateSeparated[0] - 1, dateSeparated[1])
		        }
		        
		        $('#date-pick-end').dpSetSelected(date.asString());		        
		        $(this).dpDisplay();
		    }
		    return false;
		}
	).bind(
        // when a date is selected update the SELECTs
		'dateSelected',
		function (e, selectedDate, $td, state) {
		    updateSelects(selectedDate);
		}
	).bind(
		'dpClosed',
		function (e, selected) {
		    updateSelects(selected[0]);
		}
	);

        var updateSelects = function (selectedDate) {
            var selectedDate = new Date(selectedDate);
            if (isNaN(selectedDate))
                $('#DateEnd').attr('value', '');
            else
                $('#DateEnd').attr('value', (selectedDate.getMonth() + 1) + '/' + selectedDate.getDate() + '/' + selectedDate.getFullYear());
        }
        // listen for when the selects are changed and update the picker
        $('#DateEnd')
	.bind(
		'change',
		function () {
		}
	);

    });
</script>

<script type="text/javascript">
    function OnDateRangePresetChanged() {
        if ($('#DateRangePreset').val() != "Custom") {
            $('#DateStart').attr("disabled", "disabled");
            $('#DateEnd').attr("disabled", "disabled");
            $('#DateStart').val('');
            $('#DateEnd').val('');
        }
        else {
            $('#DateStart').removeAttr("disabled");
            $('#DateEnd').removeAttr("disabled");
        }

    }
</script>

<script type="text/javascript">
    function ResetAndSubmit() {
        document.getElementById("DateRangePreset").value = 'Today';
        document.getElementById("DateStart").value = '';
        document.getElementById("DateEnd").value = '';
        document.getElementById("CallerIdNumber").value = '';
        document.getElementById("IncomingDid").value = '';
        if (document.getElementById("CallSource") != null)
            document.getElementById("CallSource").value = '';
        document.getElementById("TicketNumber").value = '';
        document.getElementById("UserName").value = '';
        document.getElementById("TimeStartHours").value = '12';
        document.getElementById("TimeStartMinutes").value = '0';
        document.getElementById("TimeStartAmPm").value = 'AM';
        document.getElementById("CallDirection").value = 'ALL';               
        document.getElementById("CallLogForm").submit();
    }    
</script>

@using (Html.BeginForm("CallLog", "Home", FormMethod.Get, new { id = "CallLogForm" })) {
    @Html.ValidationSummary(true)

if (!Model.PartnerId.HasValue){
	<table border="0" cellpadding="0" cellspacing="0"  id="id-form">
	<tr>
		<th valign="top">Date Range</th>
		<td>
			@Html.DropDownList("DateRangePreset", new SelectList(Model.DateRangePresets.Keys), new { @onchange="OnDateRangePresetChanged();", @class="styledselect_form_1" })
        </td>
		<td colspan="2"></td>

		<th valign="top">@(isOwner ? "External Number" : "Caller Number")</th>
		<td>            
            @Html.TextBoxFor(model => model.CallerIdNumber, new { @class="field-input" })            
        </td>
		<td>
            @Html.ValidationMessageFor(model => model.CallerIdNumber)
		</td>
	</tr>
    
	<tr>
		<th valign="top">Date Start</th>
		<td Width="202px">        
            @Html.TextBoxFor(model => model.DateStart, new { @class="field-input" })
		</td>
        <td>        
            <a href="" id="date-pick-start" class="dp-applied"><img src="@Url.Content("~/Content/images/forms/icon_calendar.jpg")" alt=""></a>
        </td>
		<td Width="170px">
            @Html.ValidationMessageFor(model => model.DateStart)
		</td>

		<th valign="top">@(isOwner ? "Incoming Did" : "Tracking Phone")</th>
		<td>
            @Html.TextBoxFor(model => model.IncomingDid, new { @class="field-input" })
        </td>
		<td>
            @Html.ValidationMessageFor(model => model.IncomingDid)
		</td>
	</tr>

	<tr>
		<th valign="top">Date End</th>
		<td>
            @Html.TextBoxFor(model => model.DateEnd, new { @class="field-input" })
        </td>
        <td>        
            <a href="" id="date-pick-end" class="dp-applied"><img src="@Url.Content("~/Content/images/forms/icon_calendar.jpg")" alt=""></a>
        </td>
		<td>
            @Html.ValidationMessageFor(model => model.DateEnd)
		</td>

		<th valign="top">Ticket Number</th>
		<td>
            @Html.TextBoxFor(model => model.TicketNumber, new { @class="field-input" })
        </td>
		<td>
            @Html.ValidationMessageFor(model => model.TicketNumber) 
		</td>
	</tr>

	<tr>
		<th valign="top">Time Start</th>
		<td>
            <table>
            <tr>
                <td>@Html.DropDownList("TimeStartHours", new SelectList(Model.HoursSet), new { @class="styledselect_form_2" })</td>
                <td>@Html.DropDownList("TimeStartMinutes", new SelectList(Model.MinutesSet), new { @class="styledselect_form_2" })</td>
                <td>@Html.DropDownList("TimeStartAmPm", new SelectList(Model.AmPmSet), new { @class="styledselect_form_2" })</td>
            </tr>
            </table>       
        </td>
		<td colspan="2"></td>

		<th valign="top">Customer Name</th>
		<td>
            @Html.TextBoxFor(model => model.CustomerName, new { @class="field-input" })
        </td>
		<td colspan="2">
            @Html.ValidationMessageFor(model => model.CustomerName)
		</td>
	</tr>

@if (isOwner){
	<tr>
		<th valign="top">Call Direction</th>
		<td>
            @Html.DropDownList("CallDirection", new SelectList(Model.CallDirectionSet), new { @class="styledselect_form_1" })
        </td>
		<td colspan="2">
            @Html.ValidationMessageFor(model => model.CallDirection)
		</td>

		<th valign="top">User Name</th>
		<td>
            @Html.TextBoxFor(model => model.UserName, new { @class="field-input" })
        </td>
		<td colspan="2">
            @Html.ValidationMessageFor(model => model.UserName)
		</td>
	</tr>

	<tr>
		<th valign="top">Extension</th>
		<td>
            @Html.TextBoxFor(model => model.Extension, new { @class="field-input" })
        </td>
		<td colspan="2">
            @Html.ValidationMessageFor(model => model.Extension)
		</td>

		<th valign="top">Call Source</th>
		<td>
            @Html.TextBoxFor(model => model.CallSource, new { @class="field-input" })
        </td>
		<td colspan="2">
            @Html.ValidationMessageFor(model => model.CallSource)
		</td>
	</tr>
}   
    
	<tr>
		<th>&nbsp;</th>
		<td valign="top">
			<input type="submit" value="" class="form-submit"/>
			<input type="button" value="" class="form-reset" name="ClearButton"  onclick='ResetAndSubmit()'/>            
		</td>
		<td></td>

		<th valign="top"></th>
		<td></td>
		<td></td>
	</tr>
    </table>
    }
    else{
<table>
    @if (Model.TrackingNumber != string.Empty){
    <tr>
        <td width="120px" height="25px"><h4>@(Model.AdvertisingSourceId.HasValue ? "Advertising Source" : "Tracking Number")</h4></td>
        <td width="200px">@Model.TrackingNumberText</td>

        @if (!Model.AdvertisingSourceId.HasValue && (!Model.ReportFilterId.HasValue || Model.ReportFilterId == 2)){
            <td width="120px" height="25px"><h4>External Calls</h4></td>
            <td>@Model.ExternalCalls</td>
        } else {
            <td width="120px" height="25px"></td>
            <td></td>
        }

    </tr>
    }    
    @if (Model.DateStart != string.Empty){
    <tr>
        <td width="120px" height="25px"><h4>Date Start</h4></td>
        <td>@Model.DateStart</td>

        @if (!Model.AdvertisingSourceId.HasValue && (!Model.ReportFilterId.HasValue || Model.ReportFilterId == 2)){
        <td width="120px" height="25px"><h4>Transferred Calls</h4></td>
        <td>@Model.TransferredCalls</td>
        } else {
        <td width="120px" height="25px"></td>
        <td></td>
        }

    </tr>
    }
    @if (Model.DateEnd != string.Empty){
    <tr>
        <td width="120px" height="25px"><h4>Date End</h4></td>
        <td>@Model.DateEnd</td>

        @if (Model.ReportFilterId == null || Model.ReportFilterId == 2){
        <td width="120px" height="25px"><h4>Total Calls</h4></td>
        <td>@Model.TotalCalls</td>
        } else {
        <td width="120px" height="25px"><h4>Transactions Count</h4></td>
        <td>@Model.TransactionsCount</td>
        }

    </tr>
    }

</table>
    }
}
<br>

<table border="0" width="100%" cellpadding="0" cellspacing="0" id="product-table">
    <tr>
        <th class="table-header-repeat line-left">
            Date
        </th>
@if (isOwner){
        <th class="table-header-repeat line-left">
            Direction
        </th>
        <th class="table-header-repeat line-left">
            User
        </th>
}
        <th class="table-header-repeat line-left">
            Caller Id
        </th>
@if (isOwner){
        <th class="table-header-repeat line-left">
            Call Source
        </th>
}
        <th class="table-header-repeat line-left">
            Action
        </th>
        <th class="table-header-repeat line-left">
            Ticket
        </th>
        <th class="table-header-repeat line-left">
            Status
        </th>
        <th class="table-header-repeat line-left">
            Duration
        </th>
        <th class="table-header-repeat line-left">
            Amount
        </th>
        <th class="table-header-repeat line-left">            
        </th>
        <th class="table-header-repeat line-left">            
        </th>
    </tr>

@if (Model.CallLogItems.Count == 0){
<tr><td colspan="100">Empty</td></tr>
}

@foreach (var item in Model.CallLogItems) {
    <tr>
        @if (item.CallDate.HasValue){
        <td>            
            @Html.ActionLink(String.Format("{0:g}", item.CallDate), "CallDetail", new { @CallId=item.Id })
        </td>        
        } else {
        <td></td>        
        }
@if (isOwner){
        <td>
            @item.DirectionText
        </td>
        <td>
            @item.UserNameText
        </td>
}
        <td>
            @item.CallerIdName
        </td>
@if (isOwner){
        <td>
            @item.CallSource
        </td>
}
        <td>
            @item.Action
        </td>
        <td>        
            @(string.IsNullOrEmpty(item.TicketNumber) ? MvcHtmlString.Empty :            
               Html.ActionLink(item.TicketNumber, "TicketDetails", new { TicketNumber=item.TicketNumber }))
        </td>
        <td>
            @item.TicketStatusText
        </td>
        <td>
            @item.CallDurationText
        </td>
        <td>
            @item.ClosedAmountText
        </td>
        <td width="60px">
        @(item.WavFileUrl == "" ? MvcHtmlString.Empty : MvcHtmlString.Create(string.Format("<a href='{0}'>Play</a>", @item.WavFileUrl)))
        </td>
        <td width="20px">
            @item.MatchCriteriaText
        </td>
    </tr>    
}
</table>

@MvcHtmlString.Create(Html.Pager(50, Model.PageNonZero, Model.TotalItemCount))
