@model Dalworth.Server.Web.Partner.Models.PartnerSummary
@using Dalworth.Server.Web.Partner.Models

@{    
    ViewBag.Title = "Partner In Profit - Partner Summary";
    ViewBag.Header = "Partner Summary";
    ViewBag.BodyAttribute = @MvcHtmlString.Create("onload='OnDateRangePresetChanged()'");        

    ViewBag.ActiveTopMenu = "Home";
    ViewBag.ActiveSubMenu = "Partner Summary";
    bool isOwner = PartnerMembershipProvider.GetCurrentUser().IsOwner;
    if (!isOwner){        
        ViewBag.Header += " - " + Model.GetCurrentUserPartnerName();
    }
    
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>

<!--  date picker script -->
<link rel="stylesheet" href="@Url.Content("~/Content/datePicker.css")" type="text/css" />
<script src="@Url.Content("~/Scripts/date.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.datePicker.js")" type="text/javascript"></script>
<script type="text/javascript" charset="utf-8">
    $(function () {

        // initialise the "Select date" link
        $('#date-pick-start')
	.datePicker(
        // associate the link with a date picker
		{
		createButton: false,
		startDate: '01/01/2005',
		endDate: '31/12/2020'
}
	).bind(
        // when the link is clicked display the date picker
		'click',
		function () {
		    if (!document.getElementById("DateStart").disabled) {
		        var dateSeparated = $('#DateStart').attr('value').split("/")

		        var date = new Date();
		        if (dateSeparated.length == 3) {
		            date = new Date(dateSeparated[2], dateSeparated[0] - 1, dateSeparated[1])
		        }

		        $('#date-pick-start').dpSetSelected(date.asString());
		        $(this).dpDisplay();
		    }
		    return false;
		}
	).bind(
        // when a date is selected update the SELECTs
		'dateSelected',
		function (e, selectedDate, $td, state) {
		    updateSelects(selectedDate);
		}
	).bind(
		'dpClosed',
		function (e, selected) {
		    updateSelects(selected[0]);
		}
	);

        var updateSelects = function (selectedDate) {
            var selectedDate = new Date(selectedDate);
            if (isNaN(selectedDate))
                $('#DateStart').attr('value', '');
            else
                $('#DateStart').attr('value', (selectedDate.getMonth() + 1) + '/' + selectedDate.getDate() + '/' + selectedDate.getFullYear());
        }
        // listen for when the selects are changed and update the picker
        $('#DateStart')
	.bind(
		'change',
		function () {
		}
	);

    });

</script>

<script type="text/javascript" charset="utf-8">
    $(function () {

        // initialise the "Select date" link
        $('#date-pick-end')
	.datePicker(
        // associate the link with a date picker
		{
		createButton: false,
		startDate: '01/01/2005',
		endDate: '31/12/2020'
}
	).bind(
        // when the link is clicked display the date picker
		'click',
		function () {
		    if (!document.getElementById("DateEnd").disabled) {
		        var dateSeparated = $('#DateEnd').attr('value').split("/")

		        var date = new Date();
		        if (dateSeparated.length == 3) {
		            date = new Date(dateSeparated[2], dateSeparated[0] - 1, dateSeparated[1])
		        }

		        $('#date-pick-end').dpSetSelected(date.asString());
		        $(this).dpDisplay();
		    }
		    return false;
		}
	).bind(
        // when a date is selected update the SELECTs
		'dateSelected',
		function (e, selectedDate, $td, state) {
		    updateSelects(selectedDate);
		}
	).bind(
		'dpClosed',
		function (e, selected) {
		    updateSelects(selected[0]);
		}
	);

        var updateSelects = function (selectedDate) {
            var selectedDate = new Date(selectedDate);
            if (isNaN(selectedDate))
                $('#DateEnd').attr('value', '');
            else
                $('#DateEnd').attr('value', (selectedDate.getMonth() + 1) + '/' + selectedDate.getDate() + '/' + selectedDate.getFullYear());
        }
        // listen for when the selects are changed and update the picker
        $('#DateEnd')
	.bind(
		'change',
		function () {
		}
	);

    });
</script>

<script type="text/javascript">
    function OnDateRangePresetChanged() {
        if ($('#DateRangePreset').val() != "Custom") {
            $('#DateStart').attr("disabled", "disabled");
            $('#DateEnd').attr("disabled", "disabled");
            $('#DateStart').val('');
            $('#DateEnd').val('');
        }
        else {
            $('#DateStart').removeAttr("disabled");
            $('#DateEnd').removeAttr("disabled");
        }

    }
</script>


@using (Html.BeginForm("PartnerSummary", "Home", FormMethod.Post, new { id = "PartnerSummaryForm" })) {
    @Html.ValidationSummary(true)

	<table border="0" cellpadding="0" cellspacing="0"  id="id-form">
	<tr>
		<th valign="top">Date Range</th>
		<td>
			@Html.DropDownList("DateRangePreset", new SelectList(Model.DateRangePresets.Keys), new { @onchange="OnDateRangePresetChanged();", @class="styledselect_form_1" })
        </td>
		<td colspan="2"></td>

	</tr>
    
	<tr>
		<th valign="top">Date Start</th>
		<td Width="202px">        
            @Html.TextBoxFor(model => model.DateStart, new { @class="field-input" })
		</td>
        <td>        
            <a href="" id="date-pick-start" class="dp-applied"><img src="@Url.Content("~/Content/images/forms/icon_calendar.jpg")" alt=""></a>
        </td>
		<td Width="170px">
            @Html.ValidationMessageFor(model => model.DateStart)
		</td>
	</tr>

	<tr>
		<th valign="top">Date End</th>
		<td>
            @Html.TextBoxFor(model => model.DateEnd, new { @class="field-input" })
        </td>
        <td>        
            <a href="" id="date-pick-end" class="dp-applied"><img src="@Url.Content("~/Content/images/forms/icon_calendar.jpg")" alt=""></a>
        </td>
		<td>
            @Html.ValidationMessageFor(model => model.DateEnd)
		</td>

	</tr>
    
@if (isOwner){
	<tr>
		<th valign="top">Partner</th>
		<td>
            @Html.DropDownList("CurrentPartner", Model.GetPartners(), new { @class="styledselect_form_1" })
        </td>
		<td colspan="2">
            @Html.ValidationMessageFor(model => model.CurrentPartner)
		</td>
	</tr>
}

	<tr>
		<th>&nbsp;</th>
		<td valign="top">
			<input type="submit" value="" class="form-submit" />
		</td>
		<td></td>
	</tr>
    </table>
}
<br>
<table border="0" width="100%" cellpadding="0" cellspacing="0" id="product-table">
    <tr>
    @if (isOwner){
        <th class="table-header-repeat line-left">
            Partner
        </th>
        }
        <th class="table-header-repeat line-left">
            Tracking Phone
        </th>
        <th class="table-header-repeat line-left">
            Call
        </th>
        <th class="table-header-repeat line-left">
            Book
        </th>
        <th class="table-header-repeat line-left">
            Shopper
        </th>
        <th class="table-header-repeat line-left">
            Non Lead
        </th>
        <th class="table-header-repeat line-left">
            Cancel
        </th>
        <th class="table-header-repeat line-left">
            In-process
        </th>
        <th class="table-header-repeat line-left">
            Completed
        </th>
        <th class="table-header-repeat line-left">
            Amount
        </th>
    </tr>

@if (Model.SummaryItems.Count == 0){
<tr><td colspan="100">Empty</td></tr>
}
@foreach (var item in Model.SummaryItems) {
    <tr @(item.IsPartnerSummaryRow ? "class=alternate-row" : "")  @(item.IsTotalSummaryRow ? "class=alternate-row-bold" : "")>

    @if (item.PartnerRecordsCount > 0 && isOwner){
        <td rowspan="@item.PartnerRecordsCount">
            @item.CallSourceName
        </td>
    }

    @if (item.IsPartnerSummaryRow && !isOwner){
        continue;
    } else if (item.IsPartnerSummaryRow){
        <td>                       
            Summary
        </td>
    } else if (item.IsTotalSummaryRow && !isOwner) {
        <td>Summary</td>
    } else if (item.IsTotalSummaryRow) {
        <td></td>
    } else if (item.IsAdvertisingSource && item.TrackingUrl != string.Empty){
        <td>                       
            <a href="@item.TrackingUrl">@item.TrackingNumberText</a>                        
        </td>
    } else {
        <td>                       
            @item.TrackingNumberText
        </td>
    }
@if (item.IsAdvertisingSource){
        <td>
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.CallCount.ToString()) : Html.ActionLink(item.CallCount.ToString(), "CallLog", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset, @AdvertisingSourceId=item.AdvertisingSourceId.Value, @ReportFilterId=6 }))
        </td>
        <td>        
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.BookCount.ToString()) : Html.ActionLink(item.BookCount.ToString(), "CallLog", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset, @AdvertisingSourceId=item.AdvertisingSourceId.Value, @ReportFilterId=7 }))
        </td>
        <td>                        
        </td>
        <td>                        
        </td>

        <td>        
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.CancelCount.ToString()) : Html.ActionLink(item.CancelCount.ToString(), "CallLogComplete", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset, @AdvertisingSourceId=item.AdvertisingSourceId.Value, @ReportFilterId=1 }))
        </td>
        <td>        
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.InProcessCount.ToString()) : Html.ActionLink(item.InProcessCount.ToString(), "CallLogComplete", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset, @AdvertisingSourceId=item.AdvertisingSourceId.Value,  @ReportFilterId=2 }))
        </td>
        <td>        
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.CompletedCount.ToString()) : Html.ActionLink(item.CompletedCount.ToString(), "CallLogComplete", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset, @AdvertisingSourceId=item.AdvertisingSourceId.Value, @ReportFilterId=3 }))
        </td>
        <td>
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.ClosedAmountText.ToString()) : Html.ActionLink(item.ClosedAmountText.ToString(), "CallLogComplete", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset, @AdvertisingSourceId=item.AdvertisingSourceId.Value, @ReportFilterId=3 }))
        </td>
} else {
        <td>
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.CallCount.ToString()) : Html.ActionLink(item.CallCount.ToString(), "CallLog", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset }))
        </td>
        <td>        
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.BookCount.ToString()) : Html.ActionLink(item.BookCount.ToString(), "CallLog", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset, @ReportFilterId=1 }))
        </td>
        <td>        
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.ShopperCount.ToString()) : Html.ActionLink(item.ShopperCount.ToString(), "CallLog", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset, @ReportFilterId=3 }))
        </td>
        <td>                        
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.OtherActionsCount.ToString()) : Html.ActionLink(item.OtherActionsCount.ToString(), "CallLog", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset, @ReportFilterId=2 }))
        </td>

        <td>        
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.CancelCount.ToString()) : Html.ActionLink(item.CancelCount.ToString(), "CallLogComplete", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset, @ReportFilterId=1 }))
        </td>
        <td>        
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.InProcessCount.ToString()) : Html.ActionLink(item.InProcessCount.ToString(), "CallLogComplete", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset, @ReportFilterId=2 }))
        </td>
        <td>        
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.CompletedCount.ToString()) : Html.ActionLink(item.CompletedCount.ToString(), "CallLogComplete", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset, @ReportFilterId=3 }))
        </td>
        <td>
        @(item.IsSummaryRow ? MvcHtmlString.Create(item.ClosedAmountText.ToString()) : Html.ActionLink(item.ClosedAmountText.ToString(), "CallLogComplete", new { @TrackingNumber=item.TrackingNumber, @PartnerId=item.CallSourceId, @DateStart=Model.DateStartNoPreset, @DateEnd=Model.DateEndNoPreset, @ReportFilterId=3 }))
        </td>
}
    </tr>     
}
</table>
