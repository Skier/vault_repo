//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace AerSysCo.MacPac.WebReference {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://www.airsysco.com/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private SpHeader spHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetOrderHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::AerSysCo.MacPac.Properties.Settings.Default.AerSysCo_MacPac_WebReference_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public SpHeader SpHeaderValue {
            get {
                return this.spHeaderValueField;
            }
            set {
                this.spHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetOrderHeaderCompletedEventHandler GetOrderHeaderCompleted;
        
        /// <remarks/>
        public event GetOrderDetailCompletedEventHandler GetOrderDetailCompleted;
        
        /// <remarks/>
        public event GetCustStatusCompletedEventHandler GetCustStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SpHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.airsysco.com/GetOrderHeader", RequestNamespace="http://www.airsysco.com/", ResponseNamespace="http://www.airsysco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOrderHeader(string customerid, string po, string begorderdate, string endorderdate) {
            object[] results = this.Invoke("GetOrderHeader", new object[] {
                        customerid,
                        po,
                        begorderdate,
                        endorderdate});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderHeaderAsync(string customerid, string po, string begorderdate, string endorderdate) {
            this.GetOrderHeaderAsync(customerid, po, begorderdate, endorderdate, null);
        }
        
        /// <remarks/>
        public void GetOrderHeaderAsync(string customerid, string po, string begorderdate, string endorderdate, object userState) {
            if ((this.GetOrderHeaderOperationCompleted == null)) {
                this.GetOrderHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderHeaderOperationCompleted);
            }
            this.InvokeAsync("GetOrderHeader", new object[] {
                        customerid,
                        po,
                        begorderdate,
                        endorderdate}, this.GetOrderHeaderOperationCompleted, userState);
        }
        
        private void OnGetOrderHeaderOperationCompleted(object arg) {
            if ((this.GetOrderHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderHeaderCompleted(this, new GetOrderHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SpHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.airsysco.com/GetOrderDetail", RequestNamespace="http://www.airsysco.com/", ResponseNamespace="http://www.airsysco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetOrderDetail(string orderno, string releaseno) {
            object[] results = this.Invoke("GetOrderDetail", new object[] {
                        orderno,
                        releaseno});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderDetailAsync(string orderno, string releaseno) {
            this.GetOrderDetailAsync(orderno, releaseno, null);
        }
        
        /// <remarks/>
        public void GetOrderDetailAsync(string orderno, string releaseno, object userState) {
            if ((this.GetOrderDetailOperationCompleted == null)) {
                this.GetOrderDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderDetailOperationCompleted);
            }
            this.InvokeAsync("GetOrderDetail", new object[] {
                        orderno,
                        releaseno}, this.GetOrderDetailOperationCompleted, userState);
        }
        
        private void OnGetOrderDetailOperationCompleted(object arg) {
            if ((this.GetOrderDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderDetailCompleted(this, new GetOrderDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SpHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.airsysco.com/GetCustStatus", RequestNamespace="http://www.airsysco.com/", ResponseNamespace="http://www.airsysco.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCustStatus(string customerid) {
            object[] results = this.Invoke("GetCustStatus", new object[] {
                        customerid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustStatusAsync(string customerid) {
            this.GetCustStatusAsync(customerid, null);
        }
        
        /// <remarks/>
        public void GetCustStatusAsync(string customerid, object userState) {
            if ((this.GetCustStatusOperationCompleted == null)) {
                this.GetCustStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustStatusOperationCompleted);
            }
            this.InvokeAsync("GetCustStatus", new object[] {
                        customerid}, this.GetCustStatusOperationCompleted, userState);
        }
        
        private void OnGetCustStatusOperationCompleted(object arg) {
            if ((this.GetCustStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustStatusCompleted(this, new GetCustStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.airsysco.com/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://www.airsysco.com/", IsNullable=false)]
    public partial class SpHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string tokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetOrderHeaderCompletedEventHandler(object sender, GetOrderHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetOrderDetailCompletedEventHandler(object sender, GetOrderDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void GetCustStatusCompletedEventHandler(object sender, GetCustStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591