<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="400"
	initialize="initHandler()">
	<mx:Script>
		<![CDATA[
			import mx.core.Application;
			import mx.controls.Alert;
            import mx.rpc.Responder;
            import mx.rpc.events.FaultEvent;
            import mx.rpc.events.ResultEvent;
			import mx.managers.PopUpManager;
			import mx.collections.ArrayCollection;
			
			import com.llsvc.domain.Layer;
			import com.llsvc.maps.control.LayerManager;
			import com.llsvc.maps.layers.BaseLayer;
			import com.llsvc.maps.layers.DynLayer;
			import com.llsvc.maps.storage.Storage;
			import com.llsvc.framework.storage.Storage;
			
			[Bindable]
			private var availableLayers:ArrayCollection;
			private var geoServerUrlPrefix:String = null;
			
            public static function open(parent:DisplayObject, modal:Boolean):SelectLayerView
            {
                var popup:SelectLayerView = new SelectLayerView();
                
                PopUpManager.addPopUp(popup, parent, modal);
                
                return popup;
            }

            public function close():void
            {
                PopUpManager.removePopUp(this);
            }
            
            private function initHandler():void 
            {
//            	Alert.show("initHandler.");
                var responder:mx.rpc.Responder = new mx.rpc.Responder(
                		onGetGeoServerUrlResultHandler, 
                        onGetGeoServerUrlFaultHandler);
                com.llsvc.framework.storage.Storage.instance.getGeoServerUrl(responder);
            }
            
            private function onGetGeoServerUrlResultHandler(event:ResultEvent):void {
                geoServerUrlPrefix = event.result.toString();
            	availableLayers = new ArrayCollection();
            	
                initHandler2();
/*                
                // to do: remove it
            	for each (var layer:BaseLayer in LayerManager.allLayers) 
            	{
            		if (!layer.isSelected) {
            			availableLayers.addItem(layer);
            		}
            	}
                PopUpManager.centerPopUp(this);
*/                
            }
    
            private function onGetGeoServerUrlFaultHandler(event:FaultEvent):void {
                Alert.show(event.fault.message);
            }
            
            private function initHandler2():void 
            {
                com.llsvc.maps.storage.Storage.instance.getLayers(
	                new mx.rpc.Responder(onGetLayersResultHandler, onGetLayersFaultHandler));
            }
            
            private function onGetLayersResultHandler(event:ResultEvent):void {
            	LayerManager.removeDynLayers();
                for each (var dl:Layer in event.result) {
					LayerManager.addLayer(new DynLayer(geoServerUrlPrefix, dl.name, dl.description + " (" + dl.name + ")"));
                } 
            	for each (var layer:BaseLayer in LayerManager.allLayers) 
            	{
            		if (!layer.isSelected) {
            			availableLayers.addItem(layer);
            		}
            	}
                PopUpManager.centerPopUp(this);
            }
            
            private function onGetLayersFaultHandler(event:FaultEvent):void {
	            Alert.show("Load Layers fault: " + event.fault.faultString, "Load fault");
            }
            
            private function btnSelectClickHandler():void 
            {
            	for (var i:int = 0; i < availableLayers.length; i++) 
            	{
            		if (cbSelect[i].selected)
            		{
            			LayerManager.selectLayer(availableLayers[i] as BaseLayer);
            		}
            	}
            	
            	close();
            }
            
            private function btnCancelClickHandler():void 
            {
            	close();
            }
            
            private function cbSelectChangeHandler():void 
            {
            	for (var i:int = 0; i < availableLayers.length; i++) 
            	{
            		if (cbSelect[i].selected)
            		{
            			btnSelect.enabled = true;
            			return;
            		}
            	}
            	
            	btnSelect.enabled = false;
            }
            
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" verticalGap="0">
		<mx:Repeater id="rptLayers" width="100%" dataProvider="{availableLayers}">
			<mx:HBox width="100%" backgroundColor="{rptLayers.currentIndex % 2 == 0 ? 0xffffff : 0xffffee}"
				paddingLeft="5" paddingRight="5" paddingTop="2" paddingBottom="2">
				<mx:CheckBox id="cbSelect" width="20" height="20" change="cbSelectChangeHandler()"/>
				<mx:Label width="100%" 
					text="{BaseLayer(rptLayers.currentItem).layerGroup + ':' + BaseLayer(rptLayers.currentItem).layerName}"/>
			</mx:HBox>
		</mx:Repeater>
	</mx:VBox>
	
	<mx:ControlBar horizontalAlign="center">
		<mx:Button id="btnSelect" enabled="false" width="100" label="Select" click="btnSelectClickHandler()"/>
		<mx:Button id="btnCancel" width="100" label="Cancel" click="btnCancelClickHandler()"/>
	</mx:ControlBar>
</mx:TitleWindow>
