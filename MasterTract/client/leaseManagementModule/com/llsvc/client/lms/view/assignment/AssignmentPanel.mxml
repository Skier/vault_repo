<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:lease="com.llsvc.client.lms.view.lease.*" 
	xmlns:controls="com.llsvc.controls.*" 
	xmlns:assignment="com.llsvc.client.lms.view.assignment.*"
	icon="@Embed('assets/icons16/report.png')" label="Assignment {assignment.document.id == 0 ? '[New]' : assignment.document.id}">

    <mx:Metadata>
        [Event(name="closeTabRequest", type="flash.events.Event")]
    </mx:Metadata>

	<mx:Script>
		<![CDATA[
			import com.llsvc.client.lms.control.TabManager;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import com.llsvc.client.lm.storage.Storage;
			import com.llsvc.domain.LeaseAssignment;
			import mx.events.ItemClickEvent;
			import com.llsvc.domain.Lease;
			import mx.rpc.Responder;
			
			private var _assignment:LeaseAssignment;
			[Bindable]
			public function get assignment():LeaseAssignment {return _assignment;}
			public function set assignment(value:LeaseAssignment):void 
			{
				_assignment = value;
			}
			
			private function startRemoting(name:String):void 
			{
				content.enabled = false;
				progressBar.visible = true;
				pbRemote.label = name;
			}
			
			private function stopRemoting():void
			{
				content.enabled = true;
				progressBar.visible = false;
				pbRemote.label = "";
			}
			
			private function create():void 
			{
/* 
				startRemoting("Creating Assignment");
				
            	Storage.instance.createAssignment(this.assignment,
            		new mx.rpc.Responder(
            			function (event:ResultEvent):void 
            			{
            				stopRemoting();
					        this.assignment.populate(event.result as LeaseAssignment);
			
					        TabManager.setUniqueTab("ASSIGNMENT:" + assignment.document.id.toString(), this); 
            			}, 
            			function (event:FaultEvent):void 
            			{
            				stopRemoting();
            				Alert.show("Error: " + event.fault.faultString);
            			}
            		)
            	)
 */
			}
			
			private function save():void 
			{
/* 
				startRemoting("Saving Assignment");
				
            	Storage.instance.storeAssignment(this.assignment,
            		new mx.rpc.Responder(
            			function (event:ResultEvent):void 
            			{
            				stopRemoting();
					        this.assignment.populate(event.result as LeaseAssignment);
            			}, 
            			function (event:FaultEvent):void 
            			{
            				stopRemoting();
            				Alert.show("Error: " + event.fault.faultString);
            			}
            		)
            	)
 */ 
			}
			
			private function remove():void 
			{
/* 
				startRemoting("Deleting Assignment");
				
            	Storage.instance.deleteAssignment(this.assignment.document.id,
            		new mx.rpc.Responder(
            			function (event:ResultEvent):void 
            			{
            				stopRemoting();
            				content.enabled = false;
            				
							dispatchEvent(new Event("closeTabRequest"));
            			}, 
            			function (event:FaultEvent):void 
            			{
            				stopRemoting();
            				Alert.show("Error: " + event.fault.faultString);
            			}
            		)
            	)
 */
			}
			
	        private function buttonBarClick(event:ItemClickEvent):void
	        {
	            switch (event.index) 
	            {
	                case 0:
	                	Alert.show("Do not realised yet!");
	                    break;
	                case 1:
	                	Alert.show("Do not realised yet!");
	                    break;
	                case 2:
	                	Alert.show("Do not realised yet!");
	                    break;
	                case 3:
	                	Alert.show("Do not realised yet!");
	                    break;
	                case 4:
	                	Alert.show("Do not realised yet!");
	                    break;
	            }
	        }
        
		    private function onCloseClick():void 
		    {
				dispatchEvent(new Event("closeTabRequest"));
		    }
			
			private function onSaveClick():void 
			{
				if (!assignment.document.id) {
					create();
				} else {
					save();
				}
			}
			
			private function onDeleteClick():void 
			{
                Alert.show("Do you really want to delete this Assignment ?", 
                   "Delete Assignment", Alert.YES | Alert.NO | Alert.CANCEL, null, 
                   function (event:CloseEvent):void 
                   {
                        if (event.detail == Alert.YES)
                        {
                        	remove();
                        }
                    });
			}
			
		]]>
	</mx:Script>

	<mx:Canvas width="100%" height="100%">
		<mx:VBox id="content" width="100%" height="100%">
			<mx:HBox width="100%" paddingRight="10">
			    <mx:LinkBar id="lb" dataProvider="{vsAssignment}"/>
		
			    <mx:Spacer width="100%"/>
		
		        <mx:ButtonBar id="bbUtil" right="10" itemClick="buttonBarClick(event)" verticalCenter="0" buttonWidth="30" buttonHeight="24">
		            <mx:dataProvider>
		                <mx:Object icon="@Embed('assets/icons16/page_excel.png')" toolTip="Export to Excel"/>
		                <mx:Object icon="@Embed('assets/icons16/page_white_acrobat.png')" toolTip="Create PDF Report"/>
		                <mx:Object icon="@Embed('assets/icons16/printer.png')" toolTip="Print"/>
		                <mx:Object icon="@Embed('assets/icons16/chart_bar.png')" toolTip="Compare against other"/>
		                <mx:Object icon="@Embed('assets/icons16/calculator.png')" toolTip="Calculator"/>
		            </mx:dataProvider>
		        </mx:ButtonBar>
			</mx:HBox>
		
		    <mx:HRule bottom="0" width="100%" height="1" strokeColor="#B9B9B9"/>
		
		    <mx:ViewStack id="vsAssignment" width="100%" height="100%">
		    	<assignment:AssignmentSummary label="Summary" assignment="{assignment}"/>
		    	<assignment:AssignmentLeases label="Leases"/>
		    </mx:ViewStack>
			
			<mx:VBox width="100%" verticalGap="0">
			    <mx:HRule bottom="0" width="100%" height="1" strokeColor="#B9B9B9"/>
			
				<mx:HBox width="100%" horizontalAlign="right" paddingLeft="8" paddingRight="8" paddingTop="4" paddingBottom="4">
					<mx:Button width="100" label="Close Tab" icon="@Embed('assets/icon_close16.png')" toolTip="Close Tab" 
						horizontalCenter="0" verticalCenter="0" click="onCloseClick()"/>
						
					<mx:Spacer width="100%"/>
		
					<mx:Button width="80" label="Save" icon="@Embed('assets/icons16/disk.png')" toolTip="Save Assignment" 
						horizontalCenter="0" verticalCenter="0" click="onSaveClick()"/>
						
					<mx:Button width="80" label="Delete" icon="@Embed('assets/icons16/delete.png')" toolTip="Delete Assignment" 
						horizontalCenter="0" verticalCenter="0" click="onDeleteClick()"/>
				</mx:HBox>
			</mx:VBox>
		</mx:VBox>
		
		<mx:VBox id="progressBar" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" visible="false">
			<mx:Panel title="Remote process">
				<mx:ProgressBar id="pbRemote" labelPlacement="bottom" indeterminate="true"/>
			</mx:Panel>
		</mx:VBox>
	</mx:Canvas>
</mx:VBox>
