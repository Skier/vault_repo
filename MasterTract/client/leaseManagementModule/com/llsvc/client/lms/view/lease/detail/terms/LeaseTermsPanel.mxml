<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
	borderColor="#B9B9B9" borderStyle="solid" borderThickness="1"
	backgroundColor="#ffffff"
	paddingBottom="4" paddingLeft="4" paddingRight="4" paddingTop="4"
	verticalGap="0" xmlns:component="com.llsvc.component.*">

	<mx:Script>
		<![CDATA[
			import mx.validators.ValidationResult;
			import mx.events.ValidationResultEvent;
			import com.llsvc.domain.Lease;
			
			private var _lease:Lease;
			[Bindable]
			public function get lease():Lease {return _lease;}
			public function set lease(value:Lease):void 
			{
				_lease = value;
			}
			
			public function getResult():Boolean 
			{
				if (!isValid())
					return false;
					
				lease.term = (comboYears.selectedIndex == 1) ? int(Number(txtTerm.text) * 12) : int(Number(txtTerm.text));
				lease.royalty = Number(txtRoyalty.text);
				lease.royaltyInput = txtRoyaltyInput.text;
				lease.isPaidUp = radioPaidUp.selected;
				lease.leaseDate = dateLease.selectedDate;
				lease.effectiveDate = dateEffective.selectedDate;
				
				return true;
			}
			
			public function isValid():Boolean 
			{
				var result:Boolean = true;

				if (!vGroup.validate(true)) 
					result = false;

				if (!radioPaidUp.selected && !radioRental.selected) 
					result = false;

				return result;
			}
			
	        private static function addMonths(d:Date, x:int) : Date 
	        {
	            var y:Number = Math.floor(x / 12); x -= 12*y;
	            var m:Number = d.month + x;
	            if (m > 11) {
	                y += 1;
	                m -= 12;
	            } else if (m < 0) {
	                y -= 1;
	                m += 12;
	            }
	            return new Date(d.fullYear+y, m, d.date, d.hours, d.minutes, d.seconds, d.milliseconds);
	        }
			
	        private static function getRentDueDate(d:Date) : Date 
	        {
	        	var result:Date = new Date(d.getTime() - 86400000);
	        	var current:Date = new Date(); 
	        	
	        	while (result.getTime() < current.getTime())
	        		result.fullYear++;

	            return result;
	        }
			
			private function onRoyaltyInputChange(event:Event):void {
				var royaltyInput:String = this.txtRoyaltyInput.text;
				if ( 0 != royaltyInput.length && '%' == royaltyInput.charAt(royaltyInput.length-1) ) {
					var r1:String = royaltyInput.substr(0, royaltyInput.length-1);
					if ( !isNaN(Number(r1)) ) {
						lease.royalty = new Number(r1)/100;
					} else {
						lease.royalty = 0.00;
					}
				} else if ( !isNaN(Number(royaltyInput)) ) {
					lease.royalty = new Number(royaltyInput);
				} else {
					lease.royalty = 0.00;
				}
			}			
		]]>
	</mx:Script>
	
	<component:ValidatorsGroup id="vGroup">
		<mx:NumberValidator id="vTerm" source="{txtTerm}" property="text" minValue="1" required="true" precision="0"/> 
		<mx:NumberValidator id="vRoyalty" source="{txtRoyalty}" property="text" minValue="0" required="true"/> 
		<mx:DateValidator id="vLeaseDate" source="{dateLease}" property="selectedDate" required="true"/>
		<mx:DateValidator id="vEffectiveDate" source="{dateEffective}" property="selectedDate" required="true"/>
	</component:ValidatorsGroup>
	
	<mx:HBox width="100%">
		<mx:VBox verticalGap="1">
			<mx:HBox>
				<mx:Label text="Term:" width="70" textAlign="right"/>
	
	            <mx:TextInput id="txtTerm" 
	            	width="25" text="{comboYears.selectedIndex == 0 ? lease.term.toString() : (lease.term / 12).toString()}" textAlign="right" 
	            	change="lease.term = comboYears.selectedIndex == 0 ? int(Number(txtTerm.text)) : int(Number(txtTerm.text) * 12)"/>
	
	            <mx:ComboBox id="comboYears"
	            	dataProvider="[Months, Years]"
	            	change="lease.term = comboYears.selectedIndex == 0 ? lease.term : (lease.term * 12)"/>
			</mx:HBox>

			<mx:HBox width="100%">
				<mx:Label text="Lease:" width="70" textAlign="right"/>
	
                <mx:DateField id="dateLease" 
                	width="100%" yearNavigationEnabled="true" editable="true"
                	selectedDate="{lease.leaseDate}" 
                	change="lease.leaseDate = dateLease.selectedDate; lease.effectiveDate = dateLease.selectedDate"/>
			</mx:HBox>

			<mx:HBox width="100%">
				<mx:Label text="Effective:" width="70" textAlign="right"/>
	
                <mx:DateField id="dateEffective" 
                	width="100%" yearNavigationEnabled="true" editable="true"
                	selectedDate="{lease.effectiveDate}" 
                	change="lease.effectiveDate = dateEffective.selectedDate"/>
			</mx:HBox>

			<mx:HBox width="100%">
				<mx:Label text="Expired On:" width="70" textAlign="right"/>
	
	        	<mx:Label id="lblExpires" 
	        		text="{comboYears.selectedIndex == 0 ? 
	        				addMonths(dateEffective.selectedDate, int(Number(txtTerm.text))).toDateString() :
	        				addMonths(dateEffective.selectedDate, int(Number(txtTerm.text) * 12)).toDateString()}" 
	        		fontWeight="bold"/>
			</mx:HBox>
		</mx:VBox>
		
		<mx:VBox width="100%" height="100%"
			backgroundColor="#eeeeff"
			paddingLeft="2" paddingRight="2" paddingTop="2" paddingBottom="2">
			<mx:RadioButton id="radioPaidUp" 
				groupName="radioGroupPaidUp" label="Paid Up" 
				selected="{lease.isPaidUp}" change="lease.isPaidUp = radioPaidUp.selected"/>
			<mx:RadioButton id="radioRental" 
				groupName="radioGroupPaidUp" label="Rental" 
				selected="{!lease.isPaidUp}" change="lease.isPaidUp = radioPaidUp.selected"/>
			<mx:VBox verticalGap="-3" visible="{radioRental.selected}" fontSize="10">
				<mx:Label text="Rent Due Date:"/>
				<mx:DateField selectedDate="{lease.rentDueDate == null ? getRentDueDate(dateEffective.selectedDate) : lease.rentDueDate}"/>
<!--
				<mx:Label text="{dateEffective.selectedDate != null ? getRentDueDate(dateEffective.selectedDate).toLocaleDateString() : ''}"/>
-->
			</mx:VBox>
		</mx:VBox>
	</mx:HBox>

	<mx:HBox verticalAlign="middle" width="100%">
		<mx:Label text="Royalty:" width="70" textAlign="right"/>

        <mx:TextInput id="txtRoyaltyInput" 
        	width="50" text="{lease.royaltyInput}" textAlign="right"
        	change="onRoyaltyInputChange(event)"/>
        	
        <mx:Label id="txtRoyalty" text="{lease.royalty}" fontWeight="bold"/>
<!--        
        <mx:CheckBox id="cbPaidUp" 
        	label="Is Paid Up" verticalCenter="0"
        	selected="{lease.isPaidUp}" change="{lease.isPaidUp = cbPaidUp.selected}"/>
-->
	</mx:HBox>
</mx:VBox>
