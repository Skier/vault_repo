<?xml version="1.0" encoding="utf-8"?>
<ExtendedTitleWindow
    xmlns="truetract.plotter.containers.*"     
    xmlns:mx="http://www.adobe.com/2006/mxml" 
    title="Enter Curve Data" layout="vertical" 
    horizontalScrollPolicy="off" verticalScrollPolicy="off"
    paddingLeft="3" paddingBottom="3" paddingRight="3" paddingTop="3"
    roundedBottomCorners="false"
    creationComplete="addComponents()">
    
    <mx:Metadata>
        [DefaultProperty("subComponents")]        
    </mx:Metadata>
    
    <mx:Script>
        <![CDATA[
        	import truetract.plotter.domain.TractCall;
            import truetract.plotter.domain.callparams.ParamCollection;
            import truetract.plotter.utils.GeoBearing;
            import truetract.plotter.components.tractViewClasses.call.factories.CallViewFactory;
            import truetract.plotter.components.tractViewClasses.call.CallView;
            
            import mx.managers.PopUpManager;
            import mx.controls.Alert;
            import mx.collections.ItemResponder;
            
            [Bindable]
            public var TangentInBearing:GeoBearing;
            
            public var Model:TractCall;
            public var Responder:ItemResponder;
            
            protected virtual function getParameters():ParamCollection
            {
                return null;
            }
             
            protected virtual function getType():String
            {
                return null;
            }
            
            protected function commit():void
            {
                
                var params:ParamCollection = getParameters();
                var type:String = getType();
                
                var footersColors:Object = getStyle("footersColors");
                
                if (!params || !type) return;

                if (!Model)
                {
                    Model = new TractCall();
                    Model.CallDBValue = params.GetDBString();
                    Model.CallType = type;
                }
                else
                {
                    Model.CallDBValue = params.GetDBString();
                }

                try
                {
                    this.setStyle("footerColors", null); //bug arround
                    
                    Responder.result(Model);
                    
                    callLater(closePopup);
                    
                } 
                catch (e:Error)
                {
                    Alert.show(e.message);
                    this.setStyle("footersColors", footersColors);
                }
            }
                
            protected function closePopup():void
            {
                PopUpManager.removePopUp(this);
            }
                 
        ]]>
    </mx:Script>
    
    <mx:Script>
        <![CDATA[
            private var _components:Array;
        
            public function set subComponents(a:Array):void
            {
                _components = a;
            }
       
            private function addComponents():void
            {
               removeAllChildren();
               
               for(var i:int=0; i < _components.length; i++)
               {
                  addChild( _components[i] );
               }
            }
        ]]>
    </mx:Script>
    
    <mx:ControlBar horizontalAlign="right">
        <mx:Button label="Ok" click="commit()" />
        <mx:Button label="Cancel" click="closePopup()"/>
    </mx:ControlBar>

</ExtendedTitleWindow>
