<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="vertical"
	creationComplete="onCreationComplete()"
	title="{'Edit Rate info. Asset:' + rate.RelatedAssetAssignment.RelatedAsset.Name + ', AFE:' + rate.RelatedAssetAssignment.AFE + ', SubAFE: ' + rate.RelatedAssetAssignment.SubAFE}"
	>

	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.FaultEvent;
			import common.TypesRegistry;

			[Bindable]
			private var _types:ArrayCollection = new ArrayCollection();
			
			private var _collection:ArrayCollection;

			[Bindable]
			public var rate:RateByAssignment;
			
            public static function Open(rate:RateByAssignment, collection:ArrayCollection, parent:DisplayObject, modal:Boolean = true):RateDetail 
            {
                var popup:RateDetail = new RateDetail();
                popup.rate = rate;
                popup._collection = collection;

                PopUpManager.addPopUp(popup, parent, modal);
                PopUpManager.centerPopUp(popup);

                return popup;
            }
            
            private function onCreationComplete():void 
            {
            	initTypes();

            	cbBillItemType.selectedIndex = _types.getItemIndex(getTypeById(rate.BillItemTypeId));
            }
            
            private function initTypes():void 
            {
            	var types:ArrayCollection = TypesRegistry.instance.getAllBillItemTypes;
            	_types.removeAll();
            	
            	for each (var type:BillItemType in types) {
            		if (type.IsCountable && typeIsAvailable(type)) {
            			_types.addItem(type);
            		}
            	}
            }
            
			private function typeIsAvailable(type:BillItemType):Boolean 
			{
				if (rate.BillItemTypeId == type.BillItemTypeId) {
					return true;
				}

				for each (var r:RateByAssignment in _collection) {
					if (r.BillItemTypeId == type.BillItemTypeId) {
						return false;
					}
				}

				return true;
			}

            private function getTypeById(id:int):BillItemType 
            {
            	for each (var type:BillItemType in _types) {
            		if (type.BillItemTypeId == id) {
            			return type;
            		}
            	}
            	return null;
            }
            
		]]>
	</mx:Script>
	
	<mx:VBox width="100%">
		<mx:HBox>
			<mx:Label text="Bill Item Type:" width="120" textAlign="right"/>
			<mx:ComboBox id="cbBillItemType"
				width="120"
				labelField="Name"
				dataProvider="{_types}"
				enabled="false"/>
		</mx:HBox>
		<mx:HBox>
			<mx:Label text="Bill Rate:" width="100" textAlign="right"/>
			<mx:TextInput id="txtBillRate" text="{(1 == rate.BillItemTypeId)? (rate.BillRate * 8).toFixed(3) : rate.BillRate.toFixed(3)}" width="150" maxChars="15"/>
		</mx:HBox>
		<mx:HBox>
			<mx:Label text="Invoice Rate:" width="100" textAlign="right"/>
			<mx:TextInput id="txtInvoiceRate" text="{(1 == rate.BillItemTypeId)? (rate.InvoiceRate * 8).toFixed(3) : rate.InvoiceRate.toFixed(3)}" width="150" maxChars="15"/>
		</mx:HBox>
	</mx:VBox>
	
	<mx:HRule width="100%"/>
	
	<mx:HBox width="100%" horizontalAlign="right">
		<mx:Button id="btnSubmit" label="Ok"
			enabled="{cbBillItemType.selectedItem != null &amp;&amp; !isNaN(Number(txtBillRate.text)) &amp;&amp; !isNaN(Number(txtInvoiceRate.text))}"/>
		<mx:Button id="btnCancel" label="Cancel"/>
	</mx:HBox>
	
</mx:TitleWindow>
