<?xml version="1.0" encoding="utf-8"?>
<mx:VBox
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:local="*"
    horizontalAlign="center"
    verticalGap="-1" 
    width="100%"
    height="100%"
    styleName="itemVbox"
    xmlns:components="components.*"
    xmlns:util="util.*">
	
    <mx:Script>
        <![CDATA[
            import mx.core.Application;
            import mx.managers.PopUpManager;
            import mx.controls.CheckBox;
            import util.DateUtil;
            import common.StatusesRegistry;
            import mx.controls.dataGridClasses.DataGridColumn;
            import mx.events.DataGridEvent;
            import util.NumberUtil;
            
            private static const ROW_HEIGHT:int = 26;
            
            [Bindable] public var docHeight:int;
            
            [Embed(source="/assets/expand.png")]
            [Bindable]
            private var imgPlus:Class;
            
            [Embed(source="/assets/collapse.png")]
            [Bindable]
            private var imgMinus:Class;
            
            private function expand(event:Event = null) : void
            {
                if (currentState != "expanded") {
                    currentState = "expanded";
                }
            }
            
            private function collapse(event:Event = null) : void
            {
                if (currentState != "") {
                    currentState = "";
                }
            }
            
            private function toggleState() : void
            {
                currentState = currentState == "expanded" ? "" : "expanded";
                invalidateDisplayList();
            }
            
            private function setAfeGroupLabels(group:InvoiceItemGroupByAfe, column:DataGridColumn):String{

                if (column.dataField == "afeNo") {
                    return group.afe.AFE;
                } else if (column.dataField == "afeName") {
                    return group.afe.AFEName;
                } else if (column.dataField == "totalDays") {
                    return NumberUtil.fraction(group.totalDays, 8)
                } else if (column.dataField == "dailyAmt") {
                    return (Math.round(group.dailyAmount * 100) / 100).toFixed(2);
                } else if (column.dataField == "otherAmt") {
                    return (Math.round(group.otherAmount * 100) / 100).toFixed(2);
                } else if (column.dataField == "totalAmt") {
                    return (Math.round(group.totalAmount * 100) / 100).toFixed(2);
                } else {
                    return "";
                }
                
            }
            
            private function setAssetLabels(item:InvoiceItemGroupByAsset, column:DataGridColumn):String {
            
                if (column.dataField == "asset") {
                    return item.asset.BusinessName;
                } else if (column.dataField == "totalDays") {
                    return NumberUtil.fraction(item.totalDays, 8)
                } else if (column.dataField == "dailyAmt") {
                    return (Math.round(item.dailyAmount * 100) / 100).toFixed(2);
                } else if (column.dataField == "otherAmt") {
                    return (Math.round(item.otherAmount * 100) / 100).toFixed(2);
                } else if (column.dataField == "totalAmt") {
                    return (Math.round(item.totalAmount * 100) / 100).toFixed(2);
                } else {
                    return "";
                }
            
            }
            
            private function showWorkLog():void {
            	var group:AssignmentBillItemsGroup = AssignmentBillItemsGroup(data);
            	
            	var log:ListCollectionView = new ListCollectionView(group.billItems);
            	log.filterFunction = filterDailyItems;
            	log.refresh();
            	
    	    	WorkLogView.Open(group.assetAssignment.SubAFE, log, DisplayObject(parentDocument));
            }
            
            private function filterDailyItems(item:Object):Boolean {
            	return 1 == BillItem(item).BillItemTypeId;
            }
            
            private function selectGroupColor(item:InvoiceItemGroupByAfe, color:uint):uint 
            {
                return color;
            }
            
            private function selectItemColor(item:InvoiceItemGroupByAsset, color:uint):uint 
            {
                return color;
            }
            
        ]]>
    </mx:Script>
    
    <mx:HBox width="100%" horizontalGap="0" right="0">

        <mx:VBox width="26" height="26" horizontalAlign="center" verticalAlign="middle">
            <mx:Image source="{currentState == 'expanded' ? imgMinus : imgPlus}" click="toggleState()"/>
        </mx:VBox>
        <components:ColoredDataGrid id="dgAfes" dataProvider="{data}" showHeaders="false"
            width="100%" height="26" borderThickness="1"
            rowColorFunction="selectGroupColor"
            backgroundColor="#FFFFCC"
            selectable="false">
            <components:columns>
                <mx:DataGridColumn dataField="afeNo" labelFunction="setAfeGroupLabels" width="100"/>
                <mx:DataGridColumn dataField="afeName" labelFunction="setAfeGroupLabels"/>
                <mx:DataGridColumn dataField="totalDays" labelFunction="setAfeGroupLabels" textAlign="right" width="90"/>
                <mx:DataGridColumn dataField="dailyAmt" labelFunction="setAfeGroupLabels" textAlign="right" width="90"/>
                <mx:DataGridColumn dataField="otherAmt" labelFunction="setAfeGroupLabels" textAlign="right" width="90"/>
                <mx:DataGridColumn dataField="totalAmt" labelFunction="setAfeGroupLabels" textAlign="right" width="90"/>
                <mx:DataGridColumn dataField="IsSelected" itemRenderer="UI.manager.invoice.IsSelectedRenderer" width="26" textAlign="center"/>
            </components:columns>
        </components:ColoredDataGrid>
    
    </mx:HBox>
    
    <mx:states>
        <mx:State name="expanded">
            <mx:AddChild position="lastChild">
                <mx:VBox width="100%" height="100%" verticalGap="-2" >
                    <mx:HBox width="100%" horizontalGap="0">
                        <mx:Spacer width="1"/>
                        <mx:VBox width="74" height="26" horizontalAlign="center" verticalAlign="middle">
        <!--
                            <mx:Image source="@Embed(source='/assets/plus_disabled.png')"/>
         -->
                        </mx:VBox>
                        <mx:DataGrid width="100%" height="26" enabled="false" borderThickness="1" minWidth="700">
                            <mx:columns>
                                <mx:DataGridColumn headerText="Project"/>
                                <mx:DataGridColumn headerText="Days" width="90"/>
                                <mx:DataGridColumn headerText="Daily Amt" width="90" />
                                <mx:DataGridColumn headerText="Other Amt" width="90"/>
                                <mx:DataGridColumn headerText="Total Amt" width="90"/>
                                <mx:DataGridColumn headerText=" " width="26"/>
                            </mx:columns>
                        </mx:DataGrid>
                        <mx:Spacer width="1"/>
                    </mx:HBox>
                    <mx:HBox width="100%">
                        <mx:Spacer width="40"/>

                        <mx:List id="lstSubAfe" width="100%"
                            paddingBottom="0" paddingTop="0" paddingLeft="0" paddingRight="0"
                            selectable="false"
                            columnCount="1"
                            rowCount="{data.subAfeGroups.length}"
                            variableRowHeight="true"
                            dataProvider="{data.subAfeGroups}"
                            itemRenderer="UI.manager.invoice.SubAfeItemRenderer"/>
                    </mx:HBox>
                </mx:VBox>
            </mx:AddChild>
        </mx:State>
    </mx:states>
    
<!--    <mx:transitions>
        <mx:Transition fromState="*" toState="*">
            <mx:Resize target="{this}"/>
        </mx:Transition>
    </mx:transitions>
 -->
</mx:VBox>
