<?xml version="1.0" encoding="utf-8"?>
<mx:VBox 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" height="100%"
	click="onDay_clickHandler()"
	xmlns:components="components.*"
	enabled="{date != null}"
	backgroundColor="#ffffff"
	initialize="onInit()"
	>
	
	<mx:Script>
		<![CDATA[
			import mx.core.Application;
			import mx.events.DynamicEvent;
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import mx.controls.CheckBox;
			
			[Bindable] public var date:Date;
			
			[Bindable] public var isComposedMode:Boolean = false;
			[Bindable] public var isExtendedMode:Boolean;
			
			[Bindable] public var projects:ArrayCollection;
			
			public function onDay_clickHandler():void {
				if (!isExtendedMode) {
					var e:DynamicEvent = new DynamicEvent("toggleDayState");
					e.date = this.date;
					Application.application.dispatchEvent(e);
				}
			}
			
			private function onInit():void 
			{
				Application.application.addEventListener("toggleDayState", toggleDayState);
				Application.application.addEventListener("toggleCalendarState", toggleCalendarState);
			}
			
			private function toggleDayState(event:DynamicEvent):void {
				var d:Date = event.date as Date;
				if (date != null && !isComposedMode) {

					if (d != null && d.date == date.date) {
						isExtendedMode = !isExtendedMode;
						if (isExtendedMode) {
							this.width = 300;
							this.height = 300;
						} else {
							this.percentWidth = 100;
							this.percentHeight = 100;
						}
					} else {
						isExtendedMode = false;
						this.percentWidth = 100;
						this.percentHeight = 100;
					}
/* 
					if (isExtendedMode) {
						this.width = 300;
						this.height = 300;
					} else {
						this.percentWidth = 100;
						this.percentHeight = 100;
					}
 */					
					validateDisplayList();

				}
			}

			private function toggleCalendarState(event:DynamicEvent):void {
				var s:Boolean = event.isComposedMode as Boolean;
				if (s) {
					isComposedMode = true;
				} else {
					isComposedMode = false;
				}
			}

			
			private function onClickCollapse(event:MouseEvent):void 
			{
				event.stopPropagation();
				var e:DynamicEvent = new DynamicEvent("toggleDayState");
				e.date = this.date;
				Application.application.dispatchEvent(e);
			}
			
		]]>
	</mx:Script>
	
	<mx:HBox id="header" width="100%" backgroundColor="#dddddd"
		paddingLeft="3" paddingRight="3" paddingTop="3" paddingBottom="3" horizontalGap="3"
		>
		
		<mx:CheckBox visible="{isComposedMode}"/>
		<mx:Spacer width="100%"/>
		<mx:Label text="{date.getMonth().toString() + '/' + date.getDate().toString() + '/' + date.getFullYear().toString()}"/>
		<mx:Image source="@Embed(source='/assets/collapse.png')" visible="{isExtendedMode}" click="onClickCollapse(event)"/>
		
	</mx:HBox>
	
	<mx:ViewStack id="vsProjects" selectedIndex="{ isExtendedMode ? 0 : 1 }" width="100%" height="100%">
		
		<mx:VBox
			width="100%" height="100%"
			paddingLeft="3" paddingRight="3" paddingTop="3" paddingBottom="3" verticalGap="3"
			backgroundColor="#eeeeee"
			>

			<mx:HBox id="boxButtons" height="25" width="100%" backgroundColor="#eeeeee" verticalAlign="middle"
				>

				<mx:Spacer width="100%"/>

				<mx:Image source="@Embed(source='/assets/plus.png')"/>
				<mx:LinkButton label="Add"/>

				<mx:Image source="@Embed(source='/assets/minus.png')"/>
				<mx:LinkButton label="Remove"/>

			</mx:HBox>
			
			<components:ColoredDataGrid dataProvider="{projects}" width="100%" height="100%">
				<components:columns>
					<mx:DataGridColumn headerText="Project"/>
					<mx:DataGridColumn width="80" headerText="Days"/>
					<mx:DataGridColumn width="80" textAlign="right" fontWeight="bold" headerText="Amount"/>
				</components:columns>
			</components:ColoredDataGrid>
		
			<mx:HBox width="100%" height="25" horizontalAlign="right" backgroundColor="#eeeeee" verticalAlign="middle">
				<mx:Label text="Total:"/>
				<mx:Label text="2221.45" fontWeight="bold"/>
			</mx:HBox>
		
		</mx:VBox>
		
		<mx:VBox
			width="100%" height="100%"
			paddingLeft="3" paddingRight="3" paddingTop="3" paddingBottom="3" verticalGap="3"
			backgroundColor="#eeeeee"
			>

			<components:ColoredDataGrid dataProvider="{projects}" width="100%" height="100%" showHeaders="false">
				<components:columns>
					<mx:DataGridColumn headerText="" width="20" 
						itemRenderer="{new ClassFactory(mx.controls.CheckBox)}" 
						visible="{isComposedMode}"/>
					<mx:DataGridColumn headerText="Project"/>
				</components:columns>
			</components:ColoredDataGrid>
			
			<mx:HBox width="100%" height="25" horizontalAlign="right" backgroundColor="#eeeeee" verticalAlign="middle">
				<mx:Label text="Total:"/>
				<mx:Label text="2221.45" fontWeight="bold"/>
			</mx:HBox>
		
		</mx:VBox>
		
	</mx:ViewStack>
	
	
</mx:VBox>
