<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow 
    xmlns:mx="http://www.adobe.com/2006/mxml" 
    xmlns:components="truetract.plotter.components.*" 
    xmlns:validators="truetract.plotter.validators.*"
    title="Group Filter">
    
    <mx:Metadata>
        [Event(name="applyFilter", type="flash.events.Event")]
        [Event(name="resetFilter", type="flash.events.Event")]
    </mx:Metadata>

    <mx:Script>
        <![CDATA[
            import truetract.domain.DateRange;
            import truetract.domain.DocumentFilter;
            import truetract.plotter.domain.DictionaryRegistry;

            import mx.managers.PopUpManager;
            
            public static function open(parent:DisplayObject, modal:Boolean):FilterPanel
            {
                var popup:FilterPanel = new FilterPanel();
                
                PopUpManager.addPopUp(popup, parent, modal);
                PopUpManager.centerPopUp(popup);
                
                return popup;
            }
            
            private const labelWidth:Number = 100;
            
            [Bindable] public var keyFieldsRequired:Boolean = false;

            private var _filter:DocumentFilter;
            [Bindable] public function get filter():DocumentFilter { return _filter; }
            public function set filter(value:DocumentFilter):void
            {
                _filter = value;
                
                callLater(function():void 
                {
                    var countyList:XMLList = dictionary.statesAndCounties.state.(@StateId == filter.stateId).county;
                    countyCmb.dataProvider = countyList;
                    countyCmb.selectedItem = countyList.(@CountyId == filter.countyId);
                    
                    isFormValid();
                });
            }

            [Bindable] 
            private var dictionary:DictionaryRegistry = DictionaryRegistry.getInstance();
            
            private function applyFilter():void
            {
                if (!isFormValid()) return;

                if (!filter) filter = new DocumentFilter();

                filter.countyId = countyCmb.selectedItem ? countyCmb.selectedItem.@CountyId : 0;
                filter.stateId = stateCmb.selectedItem.@StateId;
                filter.docTypeId = docTypeCmb.selectedItem.@DocTypeID;
                filter.docNumber = (docNumberTxt.text.length > 0) ? docNumberTxt.text : null;
            	filter.volume = (volumeTxt.text.length > 0) ? volumeTxt.text : null;
            	filter.page = (pageTxt.text.length > 0) ? pageTxt.text : null;
                filter.buyer = (buyerTxt.text.length > 0) ? buyerTxt.text : null;
                filter.seller = (sellerTxt.text.length > 0) ? sellerTxt.text : null;

                if (signedFromTxt.text.length > 0) {
                    filter.signedRange = DateRange.create(
                        new Date(signedFromTxt.text), 
                        new Date(signedToTxt.text));
                } else {
                    filter.signedRange = null;
                }

                if (filedFromTxt.text.length > 0) {
                    filter.filedRange = DateRange.create(
                        new Date(filedFromTxt.text), 
                        new Date(filedToTxt.text));
                } else {
                    filter.filedRange = null;
                }

                if (createdFromTxt.text.length > 0) {
                    filter.createdRange = DateRange.create(
                        new Date(createdFromTxt.text), 
                        new Date(createdToTxt.text));
                } else {
                    filter.createdRange = null;
                }

                dispatchEvent(new Event("applyFilter"));

                close();
            }
            
            private function resetFilter():void
            {
                filter.reset();
                dispatchEvent(new Event("resetFilter"));
                
                close();
            }
            
            private function isFormValid():Boolean
            {
                var keyFieldsValid:Boolean = keyFieldsValidator.validate(true);
                var formValid:Boolean = formValidator.validate(true);

                return keyFieldsValid && formValid;
            }
            
            private function stateCmb_changeHandler():void
            {
                var stateId:int = stateCmb.selectedItem.@StateId;
                var countyList:XMLList = dictionary.statesAndCounties.state.(@StateId == stateId).county;
                countyCmb.dataProvider = countyList;
            }

            private function close():void
            {
                PopUpManager.removePopUp(this);
            }
        ]]>
    </mx:Script>

    <validators:ValidatorsGroup id="formValidator">
        <mx:NumberValidator 
            source="{volumeTxt}" property="text" required="false"/>

        <mx:NumberValidator 
            source="{pageTxt}" property="text" required="false"/>

        <mx:NumberValidator 
            source="{docNumberTxt}" property="text" required="false"/>

        <mx:DateValidator 
            source="{signedFromTxt}" property="text" required="{signedToTxt.text.length > 0}"/>

        <mx:DateValidator 
            source="{signedToTxt}" property="text" required="{signedFromTxt.text.length > 0}"/>

        <mx:DateValidator 
            source="{filedFromTxt}" property="text" required="{filedToTxt.text.length > 0}"/>

        <mx:DateValidator 
            source="{filedToTxt}" property="text" required="{filedFromTxt.text.length > 0}"/>

        <mx:DateValidator 
            source="{createdFromTxt}" property="text" required="{createdToTxt.text.length > 0}"/>

        <mx:DateValidator 
            source="{createdToTxt}" property="text" required="{createdFromTxt.text.length > 0}"/>

    </validators:ValidatorsGroup>

    <validators:ValidatorsGroup id="keyFieldsValidator">
        <mx:StringValidator
            source="{stateCmb}" property="selectedLabel" required="{keyFieldsRequired}"/>

        <mx:StringValidator
            source="{countyCmb}" property="selectedLabel" required="{keyFieldsRequired}"/>
    </validators:ValidatorsGroup>

    <mx:DateFormatter id="df" formatString="DD/MM/YYYY"/>

    <mx:Form width="100%" verticalGap="1" height="100%" 
	    backgroundColor="#ffffff" borderStyle="solid" borderColor="#000000"
	    paddingBottom="20" paddingLeft="20" paddingRight="20" paddingTop="20">

        <mx:FormItem label="State" width="100%" >

            <components:ExtendedComboBox id="stateCmb"
                labelField="@Name" width="100%" keepOptimalDropDownWidth="true"
                selectedItem="{dictionary.statesAndCounties.state.(@StateId == filter.stateId)}"
                dataProvider="{dictionary.statesAndCounties.state}" 
                change="stateCmb_changeHandler()"
                minWidth="50" styleName="toolButton"/>

        </mx:FormItem>

        <mx:FormItem label="County" width="100%" >

            <components:ExtendedComboBox id="countyCmb"
                labelField="@Name" width="100%" styleName="toolButton" minWidth="50"/>

        </mx:FormItem>

        <mx:FormItem label="Doc.Type" width="100%" >

            <components:ExtendedComboBox id="docTypeCmb"
                selectedItem="{dictionary.documentTypes.DocumentType.(@DocTypeID == filter.docTypeId)}"
                labelField="@Name" keepOptimalDropDownWidth="true"
                dataProvider="{dictionary.documentTypes.DocumentType}" 
                width="100%" styleName="toolButton" minWidth="50"/>

        </mx:FormItem>

        <mx:FormItem label="Doc.Number" width="100%">

            <mx:TextInput id="docNumberTxt" 
                width="100%" maxWidth="100"  text="{filter.docNumber}"/>

        </mx:FormItem>

        <mx:FormItem label="Volume" width="100%" >

            <mx:TextInput id="volumeTxt" 
                width="100%" maxWidth="100" text="{filter.volume}"/>

        </mx:FormItem>

        <mx:FormItem label="Page" width="100%" >

            <mx:TextInput id="pageTxt" 
                width="100%" maxWidth="100" text="{filter.page}"/>

        </mx:FormItem>

        <mx:FormItem label="Seller" width="100%" >

            <mx:TextInput id="sellerTxt" width="100%" text="{filter.seller}"/>

        </mx:FormItem>

        <mx:FormItem label="Buyer" width="100%" >

            <mx:TextInput id="buyerTxt" width="100%" text="{filter.buyer}"/>

        </mx:FormItem>

        <mx:FormItem label="Signed" width="100%" >

            <mx:HBox>
                <mx:Label text="From"/>
                <mx:TextInput id="signedFromTxt" 
                    text="{df.format(filter.signedRange.dateFrom)}"/>
                    
                <mx:Label paddingLeft="10" text="To"/>
                <mx:TextInput id="signedToTxt" 
                    text="{df.format(filter.signedRange.dateTo)}"/>
            </mx:HBox>

        </mx:FormItem>

        <mx:FormItem label="Filed" width="100%" >

            <mx:HBox>
                <mx:Label text="From"/>
                <mx:TextInput id="filedFromTxt"
                    text="{df.format(filter.filedRange.dateFrom)}"/>
                    
                <mx:Label paddingLeft="10" text="To"/>
                <mx:TextInput id="filedToTxt"
                    text="{df.format(filter.filedRange.dateFrom)}"/>
            </mx:HBox>

        </mx:FormItem>

        <mx:FormItem label="Created" width="100%" >

            <mx:HBox>
                <mx:Label text="From"/>
                <mx:TextInput id="createdFromTxt"
                    text="{df.format(filter.createdRange.dateFrom)}"/>
                    
                <mx:Label paddingLeft="10" text="To"/>
                <mx:TextInput id="createdToTxt"
                    text="{df.format(filter.createdRange.dateFrom)}"/>
            </mx:HBox>

        </mx:FormItem>

    </mx:Form>

    <mx:ControlBar horizontalAlign="right">
        <mx:Button label="Apply" styleName="toolButton" click="applyFilter()"/>
        <mx:Button label="Clear" styleName="toolButton" click="resetFilter()"/>
        <mx:Button label="Close" styleName="toolButton" click="close()"/>
    </mx:ControlBar>
    
</mx:TitleWindow>
