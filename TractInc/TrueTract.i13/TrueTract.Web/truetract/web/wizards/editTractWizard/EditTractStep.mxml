<?xml version="1.0" encoding="utf-8"?>
<ServiceStep
    xmlns="truetract.web.util.wizard.*"
    xmlns:mx="http://www.adobe.com/2006/mxml" 
    xmlns:validators="truetract.plotter.validators.*" 
    xmlns:components="truetract.plotter.components.*" 
    verticalGap="5" creationComplete="creationCompleteHandler()" xmlns:attachment="truetract.web.attachment.*">

    <mx:Metadata>
        [Event(name="showRefListRequest", type="flash.events.Event")]
    </mx:Metadata>

    <mx:Script>
        <![CDATA[
            import truetract.plotter.domain.TractListInfo;
            import mx.collections.ArrayCollection;
            import mx.rpc.events.ResultEvent;
            import mx.rpc.events.FaultEvent;
            import mx.controls.Alert;
            import mx.controls.DateField;
            import truetract.plotter.domain.Participant;
            import truetract.plotter.domain.Document;
            import truetract.plotter.domain.Tract;
            import truetract.plotter.domain.dictionary.DictionaryRegistry;

            [Bindable] private var tractList:ArrayCollection;

            [Bindable] private var dictionary:DictionaryRegistry = DictionaryRegistry.getInstance();

            [Bindable] private var docum:Document;
            
            private var _tract:Tract;
            [Bindable] public function get tract():Tract { return _tract; }
            public function set tract(value:Tract):void
            {
                _tract = value;
                
                if (value && value.ParentDocument)
                {
                    docum = _tract.ParentDocument;
                    
                    if (!docum.Buyer)
                    {
                        docum.Buyer = new Participant();
                        docum.Buyer.DocID = value.ParentDocument.DocID;
                    }
                    
                    if (!docum.Seller)
                    {
                        docum.Seller = new Participant();
                        docum.Seller.IsSeler = true;
                        docum.Seller.DocID = value.ParentDocument.DocID;
                    }

                    stateCmb.validateNow();

                    var countyList:XMLList = dictionary.statesAndCounties.state.(@StateId == docum.State).county;
                    countyCmb.dataProvider = countyList;
                    countyCmb.selectedItem = countyList.(@CountyId == docum.County);
                }
                
                if (value)
                    loadTractList();
            }

            override public function validateForm():Boolean 
            {
                var result:Boolean = super.validateForm();
                
                if (result && tractList && tractList.length > 0)
                {
                    for each (var tractInfo:TractListInfo in tractList)
                    {
                        if (tractInfo.referenceName == refNameTxt.text && tractInfo.tractId != tract.TractId)
                        {
                            if (tract.DocId > 0) {
                                refNameTxt.errorString = "Tract Reference Name should be unique for the document";
                            } else {
                                refNameTxt.errorString = "Reference Name is not unique";
                            }

                            refNameTxt.dispatchEvent(new MouseEvent (MouseEvent.MOUSE_OVER));
                            refNameTxt.setFocus();
                            result = false;
                            break;
                        }
                    }
                }
                
                return result;
            }

            public function applyTractChanges():void
            {
                tract.RefName = refNameTxt.text;
                tract.CalledAC = Number(calledTxt.text);
                tract.UnitId = calledUomCmb.selectedItem.@UnitId;

                if (tract.ParentDocument != null)
                {
                    tract.ParentDocument.State = stateCmb.selectedItem.@StateId;
                    tract.ParentDocument.County = countyCmb.selectedItem.@CountyId;
                    tract.ParentDocument.DocTypeId = documentTypeCmb.selectedItem.@DocTypeID;
                    tract.ParentDocument.Buyer.AsNamed = buyerNameTxt.text;
                    tract.ParentDocument.Seller.AsNamed = sellerNameTxt.text;
                    tract.ParentDocument.DateFiled = filledDate.value;
                    tract.ParentDocument.DateSigned = signedDate.value;
                	tract.ParentDocument.DocumentNo = (documNoTxt.text.length > 0) ? documNoTxt.text : null;
                	tract.ParentDocument.Volume = (volumeTxt.text.length > 0) ? volumeTxt.text : null;
                	tract.ParentDocument.Page = (pageTxt.text.length > 0) ? pageTxt.text : null;
                	tract.ParentDocument.Attachment = attachment.value;
                }                
            }

            override public function clean():void
            {
                refNameTxt.text = "";
                calledTxt.text = "";
                calledUomCmb.selectedIndex = 0;
            }
            
            private function creationCompleteHandler():void
            {
                if (service)
                {
                    service.GetTractList.addEventListener(ResultEvent.RESULT, GetTractList_resultHandler);
                    service.GetTractList.addEventListener(FaultEvent.FAULT, GetTractList_faultHandler);
                    service.GetDrawingList.addEventListener(ResultEvent.RESULT, GetTractList_resultHandler);
                    service.GetDrawingList.addEventListener(FaultEvent.FAULT, GetTractList_faultHandler);
                }
            }
            
            private function loadTractList():void
            {
                if (!docum)
                {
                    service.GetDrawingList();
                }
                else if (docum.DocID > 0)
                {
                    service.GetTractList(docum.DocID);
                } 
            }

            private function GetTractList_resultHandler(event:ResultEvent):void
            {
                tractList = new ArrayCollection(event.result as Array);
            }

            private function GetTractList_faultHandler(event:FaultEvent):void
            {
                Alert.show(event.fault.faultString);
            }
            
        ]]>
    </mx:Script>

    <validators:ValidatorsGroup id="formValidator">
        <mx:StringValidator source="{refNameTxt}" property="text" required="true"/>

        <mx:NumberValidator source="{calledTxt}" property="text" required="true"/>

        <mx:StringValidator source="{calledUomCmb}" property="selectedLabel" required="true"/>

        <mx:NumberValidator 
            source="{volumeTxt}" property="text" 
            required="{documNoTxt.text.length == 0}" enabled="{docum != null}"/>

        <mx:NumberValidator 
            source="{pageTxt}" property="text" 
            required="{documNoTxt.text.length == 0}" enabled="{docum != null}"/>

        <mx:NumberValidator 
            source="{documNoTxt}" property="text" 
            required="{volumeTxt.text.length == 0 &amp;&amp; pageTxt.text.length == 0}" 
            enabled="{docum != null}"/>

        <mx:DateValidator
            daySource="{filledDate.dayTxt}" dayProperty="text" 
            monthSource="{filledDate.monthCB}" monthProperty="selectedIndex" 
            yearSource="{filledDate.yearTxt}" yearProperty="text" 
            enabled="{docum != null}" required="true"/>
        
        <mx:DateValidator
            daySource="{signedDate.dayTxt}" dayProperty="text" 
            monthSource="{signedDate.monthCB}" monthProperty="selectedIndex" 
            yearSource="{signedDate.yearTxt}" yearProperty="text" 
            enabled="{docum != null}" required="true"/>

        <mx:StringValidator
            source="{sellerNameTxt}" property="text" required="true" enabled="{docum != null}"/>

        <mx:StringValidator
            source="{buyerNameTxt}" property="text" required="true" enabled="{docum != null}"/>

        <mx:StringValidator
            source="{documentTypeCmb}" property="selectedLabel" required="true" 
            enabled="{docum != null}"/>

        <mx:StringValidator
            source="{stateCmb}" property="selectedLabel" required="true" 
            enabled="{docum != null}"/>

        <mx:StringValidator
            source="{countyCmb}" property="selectedLabel" required="true"
            enabled="{docum != null}"/>
    </validators:ValidatorsGroup>

    <mx:Form 
        paddingBottom="0" paddingLeft="0" paddingTop="0" paddingRight="0" verticalGap="3" 
        width="100%" indicatorGap="3" labelWidth="90">

        <mx:FormItem label="Ref.Name :" width="100%">
        	<mx:HBox horizontalGap="2" width="100%">

        		<mx:TextInput id="refNameTxt" text="{tract.RefName}" width="100%" maxChars="100" tabIndex="2"/>

        		<mx:Button tabIndex="4"
        		    icon="@Embed(source='/assets/table_link.png')" 
        		    styleName="toolButton" width="25" height="25" 
        		    toolTip="Show Reference Name List" 
        		    enabled="{tractList &amp;&amp; tractList.length > 1}" 
        		    click="dispatchEvent(new Event('showRefListRequest'));"/>
        	</mx:HBox>

        </mx:FormItem>

        <mx:FormItem label="Called :" width="100%">
        	<mx:HBox horizontalGap="2" width="100%">
        		<mx:TextInput id="calledTxt" tabIndex="6"
        			text="{tract.CalledAC.toString()}" width="100%"/>

        		<mx:ComboBox id="calledUomCmb" tabIndex="8" 
        		    dataProvider="{dictionary.units.Unit}" labelField="@Name"
        		    selectedItem="{dictionary.units.Unit.(@UnitId == tract.UnitId)}"/>
        	</mx:HBox>
        </mx:FormItem>

    </mx:Form>

	<mx:VBox enabled="{null != docum}" verticalGap="3" >

        <mx:HRule width="100%" strokeColor="#000000"/>

        <mx:HBox width="100%">
            <mx:Form paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" verticalGap="3" indicatorGap="3" labelWidth="90">
            
                <mx:FormItem label="State :">
                    <mx:ComboBox id="stateCmb" tabIndex="10"
                        labelField="@Name" width="135"
                        dataProvider="{dictionary.statesAndCounties.state}"
                        selectedItem="{dictionary.statesAndCounties.state.(@StateId == docum.State)}"/>
                </mx:FormItem>
                
                <mx:FormItem label="Doc Type :">
                    <components:ExtendedComboBox id="documentTypeCmb" tabIndex="30"
                        labelField="@Name" width="135" keepOptimalDropDownWidth="true"
                        dataProvider="{dictionary.documentTypes.DocumentType}" 
                        selectedItem="{dictionary.documentTypes.DocumentType.(@DocTypeID == docum.DocTypeId)}"/>
                </mx:FormItem>
                
                <mx:FormItem label="Vol :">
                    <mx:TextInput id="volumeTxt" tabIndex="50" width="135" text="{docum.Volume}" maxChars="50"/>
                </mx:FormItem>
    
                <mx:FormItem label="Date Signed :">
                    <components:CombinedDateField id="signedDate" tabIndex="70"
                        width="135" value="{docum.DateSigned}" />
                </mx:FormItem>
                
            </mx:Form>
    
            <mx:Spacer width="100%" />
    
            <mx:Form paddingBottom="0" paddingLeft="0" paddingTop="0" paddingRight="0" verticalGap="3" indicatorGap="3">
    
                <mx:FormItem label="County :">
                    <mx:ComboBox id="countyCmb" tabIndex="20"
                        labelField="@Name" width="135"
                        dataProvider="{dictionary.statesAndCounties.state.(@StateId == stateCmb.selectedItem.@StateId).county}"/>
                </mx:FormItem>
    
                <mx:FormItem label="Doc No :">
                    <mx:TextInput id="documNoTxt" tabIndex="40" width="135" text="{docum.DocumentNo}" maxChars="50"/>
                </mx:FormItem>
    
                <mx:FormItem label="Page :">
                    <mx:TextInput id="pageTxt" tabIndex="60" width="135" text="{docum.Page}" maxChars="50"/>
                </mx:FormItem>
    
                <mx:FormItem label="Date Filled :">
                    <components:CombinedDateField id="filledDate" tabIndex="80"
                        width="135" value="{docum.DateFiled}" />
                </mx:FormItem>
    
            </mx:Form>
        </mx:HBox>
    
        <mx:Form 
            paddingBottom="0" paddingLeft="0" paddingTop="0" paddingRight="0" verticalGap="3" 
            width="100%" indicatorGap="3" labelWidth="90">
    
            <mx:FormItem label="{
                documentTypeCmb.selectedItem.@GiverRoleName.length > 0
                    ? documentTypeCmb.selectedItem.@GiverRoleName
                    : 'Seller'}:" width="100%">
                <mx:TextInput id="sellerNameTxt" tabIndex="100" width="357" text="{docum.Seller.AsNamed}" maxChars="350" />
            </mx:FormItem>
    
            <mx:FormItem label="{
                    documentTypeCmb.selectedItem.@ReceiverRoleName.length > 0
                        ? documentTypeCmb.selectedItem.@ReceiverRoleName
                        : 'Buyer'}:" width="100%" height="23">
                <mx:TextInput id="buyerNameTxt" tabIndex="110" width="357" text="{docum.Buyer.AsNamed}" maxChars="350"/>
            </mx:FormItem>
    
        </mx:Form>
        
    
        <mx:Form 
            paddingBottom="0" paddingLeft="0" paddingTop="0" paddingRight="0" verticalGap="3" 
            width="100%" indicatorGap="3" labelWidth="90">
    
            <mx:FormItem label="Attachment:" width="100%" height="23">
	        	<attachment:AttachmentView id="attachment" doc="{docum}" tabIndex="120"/>
            </mx:FormItem>
    
        </mx:Form>

	</mx:VBox>

</ServiceStep>
