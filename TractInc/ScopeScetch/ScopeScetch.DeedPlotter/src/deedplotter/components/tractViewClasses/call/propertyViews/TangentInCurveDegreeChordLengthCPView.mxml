<?xml version="1.0" encoding="utf-8"?>
<CallPropertiesView 
    xmlns="src.deedplotter.components.tractViewClasses.call.propertyViews.*" xmlns:mx="http://www.adobe.com/2006/mxml" 
    xmlns:Geo="src.deedplotter.utils.*" xmlns:validators="src.deedplotter.validators.*"
    creationComplete="{onCreationComplete()}" xmlns:components="src.deedplotter.components.*">
        
    <mx:Script>
        <![CDATA[
        	import src.deedplotter.domain.TractCall;
            import src.deedplotter.utils.UnitOfMeasure;
            import src.deedplotter.utils.UOMUtil;
            import src.deedplotter.domain.callparams.*;
            
            import src.deedplotter.utils.GeoBearing;

            import mx.events.ValidationResultEvent;

            public var chordLengthUom:UnitOfMeasure;

            private function onCreationComplete():void
            {
                chordLengthUomList.selectedItem = chordLengthUom;
                tInBearingTxt.setFocus();
            }
            
            override protected function getParameters():ParamCollection
            {
                if (!isFormValid())
                    return null;
                
                var curveDegree:Number = Number(curveDegreeTxt.text);
                var tInBearing:GeoBearing = GeoBearing.Parse(tInBearingTxt.text);
                var chordLength:Number = Number(chordLengthTxt.text);

                var params:ParamCollection = new ParamCollection();
                
                params.addItem( new TangentInBearingParam(tInBearing) );
                params.addItem( new CurveDegreeParam(curveDegree) );
                params.addItem( new ChordLengthParam(chordLength, UnitOfMeasure(chordLengthUomList.selectedItem) ));
                
                return params;
            }
             
            override protected function getType():String
            {
                return TractCall.CALL_TYPE_CURVE;
            }            

            private function isFormValid():Boolean
            {
                var result:Boolean = true;
                
                if (chordV.validate().type == ValidationResultEvent.INVALID)
                    result = false;
                    
                if (degreeV.validate().type == ValidationResultEvent.INVALID)
                    result = false;
                    
                if (bearingV.validate().type == ValidationResultEvent.INVALID)
                    result = false;
                
                return result;
            }
            
        ]]>
    </mx:Script>

    <mx:NumberValidator id="degreeV" 
        source="{curveDegreeTxt}" property="text" required="true" allowNegative="false" 
        maxValue="360"/>
        
    <mx:NumberValidator id="chordV" 
        source="{chordLengthTxt}" property="text" required="true" allowNegative="false" 
        minValue="0.001"/>
        
    <validators:GeoBearingValidator id="bearingV" source="{tInBearingTxt}" property="text" 
        required="true"/>

    <subComponents>
    
        <mx:Form verticalGap="2" paddingBottom="0" paddingLeft="0" 
            paddingRight="0" paddingTop="0" indicatorGap="5"
            >
            
            <mx:FormItem label="Tan In" toolTip="Tangent In Bearing">
                <mx:TextInput id="tInBearingTxt"
                    toolTip="Tangent In Bearing"
                    text="{TangentInBearing.toInputString()}" width="100" enter="commit()"/>
            </mx:FormItem>
            
            <mx:FormItem label="Degree" toolTip="Degree of curve">
                <mx:TextInput id="curveDegreeTxt" 
                    toolTip="Degree of curve" width="100"
                    enter="commit()"/>
            </mx:FormItem>
            
            <mx:FormItem label="Ch ln" horizontalGap="3">
                <mx:HBox horizontalGap="3">
                    <mx:TextInput id="chordLengthTxt" 
                        toolTip="Chord length" width="100" enter="commit()"/>
                    
                    <components:ExtendedComboBox id="chordLengthUomList" 
                        toolTip="Chord length Units" showDataTips="true"
                        labelField="Name" width="75"
                        dataProvider="{UOMUtil.Instance().UnitList}" enter="commit()"/>
                </mx:HBox>
            </mx:FormItem>
        </mx:Form>        
    
    </subComponents>
    
</CallPropertiesView>
