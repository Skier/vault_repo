<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:local="*"
    horizontalAlign="center" verticalGap="-1" 
    width="100%" styleName="itemVbox" xmlns:components="components.*">
     
    <mx:Script>
        <![CDATA[
        	import App.Domain.AssignmentBillItemsGroup;
        	import util.DateUtil;
        	import common.StatusesRegistry;
        	import mx.controls.dataGridClasses.DataGridColumn;
        	import App.Domain.BillItemStatus;
        	import mx.events.DataGridEvent;
        	import App.Domain.BillItem;
        	import util.NumberUtil;
        	
        	[Embed(source="/assets/expand.png")]
        	[Bindable]
        	private var imgPlus:Class;
        	
        	[Embed(source="/assets/collapse.png")]
        	[Bindable]
        	private var imgMinus:Class;
        	
            private function expand(event:Event) : void
            {
                currentState = "expanded";
            }
            
            private function collapse(event:Event) : void
            {
                currentState = "";
            }
            
            private function toggleState() : void
            {
                currentState = currentState == "expanded" ? "" : "expanded";
            }
            
            private function setGroupLabels(group:AssignmentBillItemsGroup, column:DataGridColumn):String{

            	if (column.dataField == "afe") {
            		return group.assetAssignment.RelatedAfe.AFE;
            	} else if (column.dataField == "subAfe") {
            		return group.assetAssignment.RelatedSubAfe.ShortName;
            	} else if (column.dataField == "totalDailyBill") {
            		return NumberUtil.fraction(group.totalDailyBill, 8)
            	} else if (column.dataField == "dailyBillAmt") {
            		return group.dailyBillAmount.toFixed(2);
            	} else if (column.dataField == "otherAmt") {
            		return group.otherAmount.toFixed(2);
            	} else if (column.dataField == "totalBill") {
            		return group.totalBillAmount.toFixed(2);
            	} else {
            		return "";
            	}
            	
            }
            
            private function setBillItemsLabels(item:BillItem, column:DataGridColumn):String {
            
            	if (column.dataField == "type") {
            		return item.RelatedBillItemType.Name;
            	} else if (column.dataField == "date") {
            		return DateUtil.format(new Date(Date.parse(item.BillingDate)));
            	} else if (column.dataField == "quantity") {
            		return (1 == item.BillItemTypeId) ? NumberUtil.fraction(item.Qty, 8) : String(item.Qty);
            	} else if (column.dataField == "rate") {
            		return item.BillRate.toFixed(3);
            	} else if (column.dataField == "amount") {
            		return (item.Qty * item.BillRate).toFixed(2);
            	} else if (column.dataField == "status") {
            		return item.RelatedBillItemStatus.Status;
            	} else {
            		return "";
            	}
            
            }
            
            private function selectGroupColor(item:AssignmentBillItemsGroup, color:uint):uint 
            {
            	if (!item) {
            		return color;
            	} else {
            		return StatusesRegistry.getInstance().getColorByName(item.statusTemp.Status);
            	}

            	if (item.statusTemp.Status == BillItemStatus.BILL_ITEM_STATUS_DECLINED) {
            		return StatusesRegistry.getInstance().getColorByName(BillItemStatus.BILL_ITEM_STATUS_DECLINED);
            	} else if (item.statusTemp.Status == BillItemStatus.BILL_ITEM_STATUS_CONFIRMED) {
            		return StatusesRegistry.getInstance().getColorByName(BillItemStatus.BILL_ITEM_STATUS_CONFIRMED);
            	} else if (item.statusTemp.Status == BillItemStatus.BILL_ITEM_STATUS_APPROVED) {
            		return StatusesRegistry.getInstance().getColorByName(BillItemStatus.BILL_ITEM_STATUS_APPROVED);
            	} else if (item.statusTemp.Status == BillItemStatus.BILL_ITEM_STATUS_CORRECTED) {
            		return StatusesRegistry.getInstance().getColorByName(BillItemStatus.BILL_ITEM_STATUS_CORRECTED);
            	} else if (item.statusTemp.Status == BillItemStatus.BILL_ITEM_STATUS_REJECTED) {
            		return StatusesRegistry.getInstance().getColorByName(BillItemStatus.BILL_ITEM_STATUS_REJECTED);
            	} else {
            		return color;
            	}
            }
            
            private function selectItemColor(item:BillItem, color:uint):uint 
            {
            	if (!item) {
            		return color;
            	} else {
            		return StatusesRegistry.getInstance().getColorByName(item.StatusTemp.Status);
            	}

            	if (item.StatusTemp.Status == BillItemStatus.BILL_ITEM_STATUS_DECLINED) {
            		return StatusesRegistry.getInstance().getColorByName(BillItemStatus.BILL_ITEM_STATUS_DECLINED);
            	} else if (item.StatusTemp.Status == BillItemStatus.BILL_ITEM_STATUS_CONFIRMED) {
            		return StatusesRegistry.getInstance().getColorByName(BillItemStatus.BILL_ITEM_STATUS_CONFIRMED);
            	} else if (item.StatusTemp.Status == BillItemStatus.BILL_ITEM_STATUS_APPROVED) {
            		return StatusesRegistry.getInstance().getColorByName(BillItemStatus.BILL_ITEM_STATUS_APPROVED);
            	} else if (item.StatusTemp.Status == BillItemStatus.BILL_ITEM_STATUS_REJECTED) {
            		return StatusesRegistry.getInstance().getColorByName(BillItemStatus.BILL_ITEM_STATUS_REJECTED);
            	} else if (item.StatusTemp.Status == BillItemStatus.BILL_ITEM_STATUS_CORRECTED) {
            		return StatusesRegistry.getInstance().getColorByName(BillItemStatus.BILL_ITEM_STATUS_CORRECTED);
            	} else {
            		return color;
            	}
            }
            
            
        ]]>
    </mx:Script>
    
    <mx:HBox width="100%" horizontalGap="0">
<!--
    	<mx:Label text="{currentState == 'expanded' ? '-' : '+'}" fontSize="12" 
    		click="toggleState()" width="25" textAlign="center" color="#990000"/>
 -->
		<mx:VBox width="26" height="26" horizontalAlign="center" verticalAlign="middle">
			<mx:Image source="{currentState == 'expanded' ? imgMinus : imgPlus}" click="toggleState()"/>
		</mx:VBox>
	    <components:ColoredDataGrid id="dgGroup" dataProvider="{data}" showHeaders="false"
	        width="100%" height="26" borderThickness="1" minWidth="669"
			rowColorFunction="selectGroupColor"
	        backgroundColor="#FFFFCC">
	        <components:columns>
				<mx:DataGridColumn dataField="afe" labelFunction="setGroupLabels" width="90"/>
				<mx:DataGridColumn dataField="subAfe" labelFunction="setGroupLabels"/>
				<mx:DataGridColumn dataField="totalDailyBill" labelFunction="setGroupLabels" textAlign="right" width="80"/>
				<mx:DataGridColumn dataField="dailyBillAmt" labelFunction="setGroupLabels" textAlign="right" width="80"/>
				<mx:DataGridColumn dataField="otherAmt" labelFunction="setGroupLabels" textAlign="right" width="80"/>
				<mx:DataGridColumn dataField="totalBill" labelFunction="setGroupLabels" textAlign="right" width="80"/>
				<mx:DataGridColumn headerText="Status"
					itemRenderer="UI.manager.bill.BillItemGroupStatusRenderer" width="170"/>
	        </components:columns>
	    </components:ColoredDataGrid>
    
    </mx:HBox>
    
    <mx:states>
        <mx:State name="expanded">
            <mx:AddChild position="lastChild">
				<mx:VBox width="100%" verticalGap="0">
	            	<mx:HBox width="100%">
	            		<mx:Spacer width="40"/>
		                <components:ColoredDataGrid id="dgItem" 
		                	width="100%" minWidth="660" enabled="true"
		                    borderThickness="1" showHeaders="true"
          					rowColorFunction="selectItemColor" sortableColumns="false"
		                    height="{data.billItems.length &lt; 5 ? ((data.billItems.length + 1) * 26) : (6 * 26)}" rowHeight="26"
		                    dataProvider="{data.billItems}" editable="false"
		                    >
		                    <components:columns>
								<mx:DataGridColumn headerText="Type" dataField="type"
									labelFunction="setBillItemsLabels"/>
								<mx:DataGridColumn headerText="Date" dataField="date" 
									labelFunction="setBillItemsLabels" width="80" textAlign="right"/>
								<mx:DataGridColumn headerText="Qty" dataField="quantity"
									labelFunction="setBillItemsLabels" width="60" textAlign="right"/>
								<mx:DataGridColumn headerText="Rate" dataField="rate"
									labelFunction="setBillItemsLabels" width="70" textAlign="right"/>
								<mx:DataGridColumn headerText="Amount" dataField="amount" 
									labelFunction="setBillItemsLabels" width="70" textAlign="right"/>
								<mx:DataGridColumn headerText="Status" width="170" textAlign="center"
									itemRenderer="UI.manager.bill.BillItemStatusRenderer"/>
								<mx:DataGridColumn headerText="Attach" width="70" textAlign="center"
									itemRenderer="common.attachment.AttachItemRendererRO"/>
								<mx:DataGridColumn headerText="" width="80"
									itemRenderer="common.notes.NotesRenderer"/>
		                    </components:columns>
		                </components:ColoredDataGrid>
	            	</mx:HBox>
	           		<mx:Spacer height="5"/>
				</mx:VBox>
            </mx:AddChild>
        </mx:State>
    </mx:states>
    
    <mx:transitions>
        <mx:Transition fromState="*" toState="*">
            <mx:Resize target="{this}"/>
        </mx:Transition>
    </mx:transitions>

</mx:VBox>
