<?xml version="1.0" encoding="utf-8"?>
<mx:HBox 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	verticalAlign="middle"
	paddingLeft="10" paddingRight="10" paddingBottom="2" paddingTop="2" height="24"
	horizontalScrollPolicy="off" verticalScrollPolicy="off">
	<mx:Script>
		<![CDATA[
			import common.notes.NotesView;
			import mx.collections.ArrayCollection;
			import weborb.data.DynamicLoadEvent;
			import App.Domain.BillItemStatus;
			import App.Domain.BillItem;
			import mx.core.IFlexDisplayObject;
			import mx.managers.PopUpManager;
			import App.Domain.BillStatus;
			import common.StatusesRegistry;
			
			private function Approve():void 
			{
				if (data.RelatedBillItem.IsLoaded) {
					updateItems(StatusesRegistry.getInstance().getBillItemStatusByName(BillItemStatus.BILL_ITEM_STATUS_APPROVED));
				} else {
					this.enabled = false;
					data.RelatedBillItem.addEventListener("loaded", onItemsLoadedToConfirm);
				}
			}
			
			private function onItemsLoadedToConfirm(event:DynamicLoadEvent):void 
			{
				this.enabled = true;
				data.RelatedBillItem.removeEventListener("loaded", onItemsLoadedToConfirm);
				updateItems(StatusesRegistry.getInstance().getBillItemStatusByName(BillItemStatus.BILL_ITEM_STATUS_APPROVED));
			}
			
			private function Reject():void 
			{
				if (data.RelatedBillItem.IsLoaded) {
					updateItems(StatusesRegistry.getInstance().getBillItemStatusByName(BillItemStatus.BILL_ITEM_STATUS_REJECTED));
				} else {
					this.enabled = false;
					data.RelatedBillItem.addEventListener("loaded", onItemsLoadedToDecline);
				}

				NotesView.Open(data, parentDocument as SummaryView, true);
			}
			
			private function onItemsLoadedToDecline(event:DynamicLoadEvent):void 
			{
				data.RelatedBillItem.removeEventListener("loaded", onItemsLoadedToDecline);
				this.enabled = true;
				updateItems(StatusesRegistry.getInstance().getBillItemStatusByName(BillItemStatus.BILL_ITEM_STATUS_REJECTED));
			}
			
			private function updateItems(status:BillItemStatus, notes:String = null):void 
			{
				data.statusTemp = StatusesRegistry.getInstance().getBillStatusByName(status.Status);

				if (notes != null) {
					data.notesTemp = notes;
				}
				
				for each (var item:BillItem in data.RelatedBillItem) {
					if (item.RelatedBillItemStatus.Status != BillItemStatus.BILL_ITEM_STATUS_CONFIRMED) {
						item.RelatedBillItemStatus = status;
					}
					item.toTempFields();
				}
			}
			
		]]>
	</mx:Script>

	<mx:Button width="70" height="20" label="approve" click="Approve()" 
		enabled="{data.statusTemp.Status != BillStatus.BILL_STATUS_APPROVED &amp;&amp; data.RelatedBillStatus.IsLoaded}"/>

	<mx:Button width="70" height="20" label="reject" click="Reject()" 
		enabled="{data.statusTemp.Status != BillStatus.BILL_STATUS_REJECTED &amp;&amp; data.RelatedBillStatus.IsLoaded}"/>
	
</mx:HBox>
